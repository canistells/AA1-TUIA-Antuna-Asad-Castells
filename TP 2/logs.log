2024-11-25 15:01:08,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-25 15:01:08,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-25 15:01:08,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-25 15:01:08,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-25 15:24:57,596:INFO:PyCaret ClassificationExperiment
2024-11-25 15:24:57,598:INFO:Logging name: clf-default-name
2024-11-25 15:24:57,598:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 15:24:57,598:INFO:version 3.3.2
2024-11-25 15:24:57,598:INFO:Initializing setup()
2024-11-25 15:24:57,598:INFO:self.USI: e5fb
2024-11-25 15:24:57,598:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 15:24:57,598:INFO:Checking environment
2024-11-25 15:24:57,598:INFO:python_version: 3.11.9
2024-11-25 15:24:57,598:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 15:24:57,598:INFO:machine: AMD64
2024-11-25 15:24:57,598:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 15:24:57,601:INFO:Memory: svmem(total=4293971968, available=1379471360, percent=67.9, used=2914500608, free=1379471360)
2024-11-25 15:24:57,601:INFO:Physical Core: 2
2024-11-25 15:24:57,601:INFO:Logical Core: 2
2024-11-25 15:24:57,601:INFO:Checking libraries
2024-11-25 15:24:57,602:INFO:System:
2024-11-25 15:24:57,602:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 15:24:57,602:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 15:24:57,602:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 15:24:57,602:INFO:PyCaret required dependencies:
2024-11-25 15:24:59,846:INFO:                 pip: 24.3.1
2024-11-25 15:24:59,847:INFO:          setuptools: 65.5.0
2024-11-25 15:24:59,847:INFO:             pycaret: 3.3.2
2024-11-25 15:24:59,847:INFO:             IPython: 8.26.0
2024-11-25 15:24:59,847:INFO:          ipywidgets: 8.1.5
2024-11-25 15:24:59,848:INFO:                tqdm: 4.66.5
2024-11-25 15:24:59,848:INFO:               numpy: 1.26.4
2024-11-25 15:24:59,848:INFO:              pandas: 2.1.4
2024-11-25 15:24:59,848:INFO:              jinja2: 3.1.4
2024-11-25 15:24:59,848:INFO:               scipy: 1.11.4
2024-11-25 15:24:59,848:INFO:              joblib: 1.3.2
2024-11-25 15:24:59,848:INFO:             sklearn: 1.4.2
2024-11-25 15:24:59,849:INFO:                pyod: 2.0.2
2024-11-25 15:24:59,849:INFO:            imblearn: 0.12.4
2024-11-25 15:24:59,849:INFO:   category_encoders: 2.6.4
2024-11-25 15:24:59,849:INFO:            lightgbm: 4.5.0
2024-11-25 15:24:59,849:INFO:               numba: 0.60.0
2024-11-25 15:24:59,849:INFO:            requests: 2.32.3
2024-11-25 15:24:59,849:INFO:          matplotlib: 3.7.5
2024-11-25 15:24:59,850:INFO:          scikitplot: 0.3.7
2024-11-25 15:24:59,850:INFO:         yellowbrick: 1.5
2024-11-25 15:24:59,850:INFO:              plotly: 5.24.1
2024-11-25 15:24:59,850:INFO:    plotly-resampler: Not installed
2024-11-25 15:24:59,850:INFO:             kaleido: 0.2.1
2024-11-25 15:24:59,850:INFO:           schemdraw: 0.15
2024-11-25 15:24:59,851:INFO:         statsmodels: 0.14.3
2024-11-25 15:24:59,854:INFO:              sktime: 0.26.0
2024-11-25 15:24:59,854:INFO:               tbats: 1.1.3
2024-11-25 15:24:59,855:INFO:            pmdarima: 2.0.4
2024-11-25 15:24:59,855:INFO:              psutil: 6.0.0
2024-11-25 15:24:59,855:INFO:          markupsafe: 3.0.2
2024-11-25 15:24:59,856:INFO:             pickle5: Not installed
2024-11-25 15:24:59,856:INFO:         cloudpickle: 3.0.0
2024-11-25 15:24:59,856:INFO:         deprecation: 2.1.0
2024-11-25 15:24:59,856:INFO:              xxhash: 3.5.0
2024-11-25 15:24:59,856:INFO:           wurlitzer: Not installed
2024-11-25 15:24:59,856:INFO:PyCaret optional dependencies:
2024-11-25 15:24:59,902:INFO:                shap: 0.46.0
2024-11-25 15:24:59,903:INFO:           interpret: Not installed
2024-11-25 15:24:59,903:INFO:                umap: Not installed
2024-11-25 15:24:59,903:INFO:     ydata_profiling: Not installed
2024-11-25 15:24:59,903:INFO:  explainerdashboard: Not installed
2024-11-25 15:24:59,903:INFO:             autoviz: Not installed
2024-11-25 15:24:59,903:INFO:           fairlearn: Not installed
2024-11-25 15:24:59,904:INFO:          deepchecks: Not installed
2024-11-25 15:24:59,904:INFO:             xgboost: Not installed
2024-11-25 15:24:59,904:INFO:            catboost: Not installed
2024-11-25 15:24:59,904:INFO:              kmodes: Not installed
2024-11-25 15:24:59,904:INFO:             mlxtend: Not installed
2024-11-25 15:24:59,904:INFO:       statsforecast: Not installed
2024-11-25 15:24:59,904:INFO:        tune_sklearn: Not installed
2024-11-25 15:24:59,904:INFO:                 ray: Not installed
2024-11-25 15:24:59,904:INFO:            hyperopt: Not installed
2024-11-25 15:24:59,904:INFO:              optuna: 4.1.0
2024-11-25 15:24:59,904:INFO:               skopt: Not installed
2024-11-25 15:24:59,905:INFO:              mlflow: Not installed
2024-11-25 15:24:59,905:INFO:              gradio: Not installed
2024-11-25 15:24:59,905:INFO:             fastapi: Not installed
2024-11-25 15:24:59,905:INFO:             uvicorn: Not installed
2024-11-25 15:24:59,905:INFO:              m2cgen: Not installed
2024-11-25 15:24:59,905:INFO:           evidently: Not installed
2024-11-25 15:24:59,905:INFO:               fugue: Not installed
2024-11-25 15:24:59,905:INFO:           streamlit: Not installed
2024-11-25 15:24:59,905:INFO:             prophet: Not installed
2024-11-25 15:24:59,905:INFO:None
2024-11-25 15:24:59,905:INFO:Set up data.
2024-11-25 15:25:00,000:INFO:Set up folding strategy.
2024-11-25 15:25:00,000:INFO:Set up train/test split.
2024-11-25 15:25:00,067:INFO:Set up index.
2024-11-25 15:25:00,074:INFO:Assigning column types.
2024-11-25 15:25:00,300:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-25 15:25:00,846:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 15:25:00,872:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 15:25:01,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,235:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 15:25:01,236:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 15:25:01,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,335:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-25 15:25:01,495:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 15:25:01,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,648:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 15:25:01,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,691:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-25 15:25:01,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:01,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:02,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:02,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:02,069:INFO:Preparing preprocessing pipeline...
2024-11-25 15:25:02,080:INFO:Set up label encoding.
2024-11-25 15:25:02,080:INFO:Set up date feature engineering.
2024-11-25 15:25:02,080:INFO:Set up simple imputation.
2024-11-25 15:25:02,089:INFO:Set up encoding of ordinal features.
2024-11-25 15:25:02,120:INFO:Set up encoding of categorical features.
2024-11-25 15:25:02,834:INFO:Finished creating preprocessing pipeline.
2024-11-25 15:25:02,878:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-25 15:25:02,878:INFO:Creating final display dataframe.
2024-11-25 15:25:04,434:INFO:Setup _display_container:                     Description             Value
0                    Session id              8511
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              e5fb
2024-11-25 15:25:04,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:04,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:04,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:04,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:25:04,733:INFO:setup() successfully completed in 7.14s...............
2024-11-25 15:25:04,734:INFO:Initializing compare_models()
2024-11-25 15:25:04,734:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-25 15:25:04,734:INFO:Checking exceptions
2024-11-25 15:25:04,762:INFO:Preparing display monitor
2024-11-25 15:25:04,821:INFO:Initializing Logistic Regression
2024-11-25 15:25:04,821:INFO:Total runtime is 0.0 minutes
2024-11-25 15:25:04,830:INFO:SubProcess create_model() called ==================================
2024-11-25 15:25:04,830:INFO:Initializing create_model()
2024-11-25 15:25:04,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:25:04,830:INFO:Checking exceptions
2024-11-25 15:25:04,831:INFO:Importing libraries
2024-11-25 15:25:04,831:INFO:Copying training dataset
2024-11-25 15:25:04,973:INFO:Defining folds
2024-11-25 15:25:04,973:INFO:Declaring metric variables
2024-11-25 15:25:04,984:INFO:Importing untrained model
2024-11-25 15:25:04,993:INFO:Logistic Regression Imported successfully
2024-11-25 15:25:05,008:INFO:Starting cross validation
2024-11-25 15:25:05,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:25:17,302:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:17,608:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:17,626:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:17,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:17,647:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:17,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:17,733:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:17,746:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:22,716:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:22,756:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:22,816:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:22,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:22,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:22,913:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:22,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:23,018:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:29,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:29,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:29,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:29,652:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:29,681:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:29,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:29,761:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:29,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:35,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:35,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:35,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:35,195:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:35,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:35,210:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:35,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:35,219:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:40,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:41,114:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:41,127:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:41,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:41,151:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:25:41,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:41,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:41,273:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:41,290:INFO:Calculating mean and std
2024-11-25 15:25:41,292:INFO:Creating metrics dataframe
2024-11-25 15:25:41,303:INFO:Uploading results into container
2024-11-25 15:25:41,304:INFO:Uploading model into container now
2024-11-25 15:25:41,305:INFO:_master_model_container: 1
2024-11-25 15:25:41,305:INFO:_display_container: 2
2024-11-25 15:25:41,305:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8511, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-25 15:25:41,305:INFO:create_model() successfully completed......................................
2024-11-25 15:25:43,312:INFO:SubProcess create_model() end ==================================
2024-11-25 15:25:43,314:INFO:Creating metrics dataframe
2024-11-25 15:25:43,324:INFO:Initializing K Neighbors Classifier
2024-11-25 15:25:43,324:INFO:Total runtime is 0.6417062759399415 minutes
2024-11-25 15:25:43,335:INFO:SubProcess create_model() called ==================================
2024-11-25 15:25:43,335:INFO:Initializing create_model()
2024-11-25 15:25:43,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:25:43,336:INFO:Checking exceptions
2024-11-25 15:25:43,337:INFO:Importing libraries
2024-11-25 15:25:43,337:INFO:Copying training dataset
2024-11-25 15:25:43,369:INFO:Defining folds
2024-11-25 15:25:43,370:INFO:Declaring metric variables
2024-11-25 15:25:43,380:INFO:Importing untrained model
2024-11-25 15:25:43,385:INFO:K Neighbors Classifier Imported successfully
2024-11-25 15:25:43,398:INFO:Starting cross validation
2024-11-25 15:25:43,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:25:46,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:46,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:46,091:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:46,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:46,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:46,189:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:47,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:47,805:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:47,815:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:47,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:47,844:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:47,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:49,371:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:49,391:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:49,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:49,425:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:49,431:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:49,454:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:50,917:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:50,939:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:50,951:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:50,951:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:50,967:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:50,991:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:52,208:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:52,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:52,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:52,227:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:52,233:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:52,236:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:52,270:INFO:Calculating mean and std
2024-11-25 15:25:52,273:INFO:Creating metrics dataframe
2024-11-25 15:25:52,281:INFO:Uploading results into container
2024-11-25 15:25:52,282:INFO:Uploading model into container now
2024-11-25 15:25:52,282:INFO:_master_model_container: 2
2024-11-25 15:25:52,282:INFO:_display_container: 2
2024-11-25 15:25:52,282:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-25 15:25:52,282:INFO:create_model() successfully completed......................................
2024-11-25 15:25:52,444:INFO:SubProcess create_model() end ==================================
2024-11-25 15:25:52,445:INFO:Creating metrics dataframe
2024-11-25 15:25:52,466:INFO:Initializing Naive Bayes
2024-11-25 15:25:52,467:INFO:Total runtime is 0.7940913478533427 minutes
2024-11-25 15:25:52,474:INFO:SubProcess create_model() called ==================================
2024-11-25 15:25:52,475:INFO:Initializing create_model()
2024-11-25 15:25:52,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:25:52,475:INFO:Checking exceptions
2024-11-25 15:25:52,475:INFO:Importing libraries
2024-11-25 15:25:52,475:INFO:Copying training dataset
2024-11-25 15:25:52,518:INFO:Defining folds
2024-11-25 15:25:52,518:INFO:Declaring metric variables
2024-11-25 15:25:52,528:INFO:Importing untrained model
2024-11-25 15:25:52,543:INFO:Naive Bayes Imported successfully
2024-11-25 15:25:52,560:INFO:Starting cross validation
2024-11-25 15:25:52,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:25:53,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:53,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:53,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:53,383:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:53,390:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:53,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,041:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,051:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,059:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,825:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,839:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,851:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:55,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:56,763:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:56,774:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:56,786:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:56,799:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:56,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:56,817:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:57,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:57,496:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:57,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:57,537:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:57,551:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:57,574:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:25:57,605:INFO:Calculating mean and std
2024-11-25 15:25:57,622:INFO:Creating metrics dataframe
2024-11-25 15:25:57,631:INFO:Uploading results into container
2024-11-25 15:25:57,632:INFO:Uploading model into container now
2024-11-25 15:25:57,634:INFO:_master_model_container: 3
2024-11-25 15:25:57,634:INFO:_display_container: 2
2024-11-25 15:25:57,635:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-25 15:25:57,635:INFO:create_model() successfully completed......................................
2024-11-25 15:25:57,886:INFO:SubProcess create_model() end ==================================
2024-11-25 15:25:57,886:INFO:Creating metrics dataframe
2024-11-25 15:25:57,909:INFO:Initializing Decision Tree Classifier
2024-11-25 15:25:57,910:INFO:Total runtime is 0.8848116874694825 minutes
2024-11-25 15:25:57,926:INFO:SubProcess create_model() called ==================================
2024-11-25 15:25:57,927:INFO:Initializing create_model()
2024-11-25 15:25:57,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:25:57,928:INFO:Checking exceptions
2024-11-25 15:25:57,929:INFO:Importing libraries
2024-11-25 15:25:57,929:INFO:Copying training dataset
2024-11-25 15:25:57,965:INFO:Defining folds
2024-11-25 15:25:57,966:INFO:Declaring metric variables
2024-11-25 15:25:57,976:INFO:Importing untrained model
2024-11-25 15:25:57,985:INFO:Decision Tree Classifier Imported successfully
2024-11-25 15:25:58,013:INFO:Starting cross validation
2024-11-25 15:25:58,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:26:00,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:00,202:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:00,205:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:00,245:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:00,247:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:00,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:02,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:02,496:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:02,501:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:02,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:02,517:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:02,528:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:03,772:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:03,782:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:03,794:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:03,801:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:03,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:03,823:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:05,263:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:05,279:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:05,289:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:05,304:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:05,304:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:05,338:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:06,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:06,625:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:06,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:06,635:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:06,649:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:06,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:06,706:INFO:Calculating mean and std
2024-11-25 15:26:06,710:INFO:Creating metrics dataframe
2024-11-25 15:26:06,785:INFO:Uploading results into container
2024-11-25 15:26:06,787:INFO:Uploading model into container now
2024-11-25 15:26:06,789:INFO:_master_model_container: 4
2024-11-25 15:26:06,789:INFO:_display_container: 2
2024-11-25 15:26:06,790:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8511, splitter='best')
2024-11-25 15:26:06,790:INFO:create_model() successfully completed......................................
2024-11-25 15:26:06,981:INFO:SubProcess create_model() end ==================================
2024-11-25 15:26:06,981:INFO:Creating metrics dataframe
2024-11-25 15:26:07,000:INFO:Initializing SVM - Linear Kernel
2024-11-25 15:26:07,000:INFO:Total runtime is 1.0363115708033244 minutes
2024-11-25 15:26:07,008:INFO:SubProcess create_model() called ==================================
2024-11-25 15:26:07,008:INFO:Initializing create_model()
2024-11-25 15:26:07,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:26:07,009:INFO:Checking exceptions
2024-11-25 15:26:07,009:INFO:Importing libraries
2024-11-25 15:26:07,009:INFO:Copying training dataset
2024-11-25 15:26:07,033:INFO:Defining folds
2024-11-25 15:26:07,033:INFO:Declaring metric variables
2024-11-25 15:26:07,042:INFO:Importing untrained model
2024-11-25 15:26:07,049:INFO:SVM - Linear Kernel Imported successfully
2024-11-25 15:26:07,064:INFO:Starting cross validation
2024-11-25 15:26:07,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:26:09,691:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:09,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:09,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:26:09,729:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:10,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:10,040:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:10,055:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:12,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:12,063:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:12,073:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:26:12,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:12,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:12,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:12,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:14,050:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:14,068:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:14,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:26:14,088:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:14,198:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:14,217:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:14,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:26:14,232:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:15,996:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:16,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:16,036:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:26:16,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:16,231:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:16,260:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:16,271:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:26:16,277:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:18,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:18,344:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:18,353:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:26:18,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:18,403:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:18,430:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:18,454:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:26:18,465:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:18,536:INFO:Calculating mean and std
2024-11-25 15:26:18,548:INFO:Creating metrics dataframe
2024-11-25 15:26:18,556:INFO:Uploading results into container
2024-11-25 15:26:18,557:INFO:Uploading model into container now
2024-11-25 15:26:18,558:INFO:_master_model_container: 5
2024-11-25 15:26:18,558:INFO:_display_container: 2
2024-11-25 15:26:18,558:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8511, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-25 15:26:18,558:INFO:create_model() successfully completed......................................
2024-11-25 15:26:18,741:INFO:SubProcess create_model() end ==================================
2024-11-25 15:26:18,741:INFO:Creating metrics dataframe
2024-11-25 15:26:18,776:INFO:Initializing Ridge Classifier
2024-11-25 15:26:18,776:INFO:Total runtime is 1.2325805703798929 minutes
2024-11-25 15:26:18,784:INFO:SubProcess create_model() called ==================================
2024-11-25 15:26:18,785:INFO:Initializing create_model()
2024-11-25 15:26:18,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:26:18,785:INFO:Checking exceptions
2024-11-25 15:26:18,785:INFO:Importing libraries
2024-11-25 15:26:18,785:INFO:Copying training dataset
2024-11-25 15:26:18,820:INFO:Defining folds
2024-11-25 15:26:18,820:INFO:Declaring metric variables
2024-11-25 15:26:18,824:INFO:Importing untrained model
2024-11-25 15:26:18,836:INFO:Ridge Classifier Imported successfully
2024-11-25 15:26:18,849:INFO:Starting cross validation
2024-11-25 15:26:18,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:26:19,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:19,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:19,613:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:19,624:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:19,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:19,639:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:21,025:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:21,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:21,095:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:21,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:21,167:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:21,335:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:22,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:22,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:22,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:22,456:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:22,469:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:22,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,223:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,241:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,331:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:23,991:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:24,012:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:24,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:24,060:INFO:Calculating mean and std
2024-11-25 15:26:24,062:INFO:Creating metrics dataframe
2024-11-25 15:26:24,065:INFO:Uploading results into container
2024-11-25 15:26:24,068:INFO:Uploading model into container now
2024-11-25 15:26:24,068:INFO:_master_model_container: 6
2024-11-25 15:26:24,069:INFO:_display_container: 2
2024-11-25 15:26:24,069:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8511, solver='auto',
                tol=0.0001)
2024-11-25 15:26:24,069:INFO:create_model() successfully completed......................................
2024-11-25 15:26:24,235:INFO:SubProcess create_model() end ==================================
2024-11-25 15:26:24,235:INFO:Creating metrics dataframe
2024-11-25 15:26:24,248:INFO:Initializing Random Forest Classifier
2024-11-25 15:26:24,248:INFO:Total runtime is 1.3237714926401773 minutes
2024-11-25 15:26:24,256:INFO:SubProcess create_model() called ==================================
2024-11-25 15:26:24,257:INFO:Initializing create_model()
2024-11-25 15:26:24,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:26:24,257:INFO:Checking exceptions
2024-11-25 15:26:24,257:INFO:Importing libraries
2024-11-25 15:26:24,257:INFO:Copying training dataset
2024-11-25 15:26:24,293:INFO:Defining folds
2024-11-25 15:26:24,294:INFO:Declaring metric variables
2024-11-25 15:26:24,302:INFO:Importing untrained model
2024-11-25 15:26:24,313:INFO:Random Forest Classifier Imported successfully
2024-11-25 15:26:24,323:INFO:Starting cross validation
2024-11-25 15:26:24,328:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:26:33,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:33,210:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:33,268:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:33,326:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:33,352:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:33,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:40,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:41,008:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:41,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:41,241:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:41,258:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:41,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:49,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:49,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:49,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:49,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:49,746:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:49,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:57,277:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:57,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:57,398:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:57,485:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:57,508:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:26:57,517:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:08,390:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:08,400:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:08,442:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:08,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:08,787:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:08,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:08,874:INFO:Calculating mean and std
2024-11-25 15:27:08,886:INFO:Creating metrics dataframe
2024-11-25 15:27:08,894:INFO:Uploading results into container
2024-11-25 15:27:08,894:INFO:Uploading model into container now
2024-11-25 15:27:08,894:INFO:_master_model_container: 7
2024-11-25 15:27:08,894:INFO:_display_container: 2
2024-11-25 15:27:08,896:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8511, verbose=0,
                       warm_start=False)
2024-11-25 15:27:08,896:INFO:create_model() successfully completed......................................
2024-11-25 15:27:09,125:INFO:SubProcess create_model() end ==================================
2024-11-25 15:27:09,125:INFO:Creating metrics dataframe
2024-11-25 15:27:09,141:INFO:Initializing Quadratic Discriminant Analysis
2024-11-25 15:27:09,142:INFO:Total runtime is 2.07201665242513 minutes
2024-11-25 15:27:09,151:INFO:SubProcess create_model() called ==================================
2024-11-25 15:27:09,151:INFO:Initializing create_model()
2024-11-25 15:27:09,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:27:09,153:INFO:Checking exceptions
2024-11-25 15:27:09,153:INFO:Importing libraries
2024-11-25 15:27:09,153:INFO:Copying training dataset
2024-11-25 15:27:09,186:INFO:Defining folds
2024-11-25 15:27:09,186:INFO:Declaring metric variables
2024-11-25 15:27:09,200:INFO:Importing untrained model
2024-11-25 15:27:09,208:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-25 15:27:09,219:INFO:Starting cross validation
2024-11-25 15:27:09,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:27:10,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:10,378:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:10,416:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:10,421:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:10,515:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:10,527:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:10,566:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:11,820:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:11,824:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:11,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:11,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:11,971:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:11,971:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:11,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:11,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:12,561:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:12,602:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:12,796:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:12,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:12,816:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:12,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:12,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:12,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:13,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:13,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:13,761:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:13,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:13,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:13,794:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:13,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:13,835:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:14,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:14,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:27:14,755:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:14,772:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:14,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:14,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:14,814:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:14,825:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:14,866:INFO:Calculating mean and std
2024-11-25 15:27:14,868:INFO:Creating metrics dataframe
2024-11-25 15:27:14,872:INFO:Uploading results into container
2024-11-25 15:27:14,874:INFO:Uploading model into container now
2024-11-25 15:27:14,876:INFO:_master_model_container: 8
2024-11-25 15:27:14,877:INFO:_display_container: 2
2024-11-25 15:27:14,878:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-25 15:27:14,878:INFO:create_model() successfully completed......................................
2024-11-25 15:27:15,102:INFO:SubProcess create_model() end ==================================
2024-11-25 15:27:15,103:INFO:Creating metrics dataframe
2024-11-25 15:27:15,123:INFO:Initializing Ada Boost Classifier
2024-11-25 15:27:15,125:INFO:Total runtime is 2.1717195192972816 minutes
2024-11-25 15:27:15,133:INFO:SubProcess create_model() called ==================================
2024-11-25 15:27:15,134:INFO:Initializing create_model()
2024-11-25 15:27:15,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:27:15,134:INFO:Checking exceptions
2024-11-25 15:27:15,134:INFO:Importing libraries
2024-11-25 15:27:15,134:INFO:Copying training dataset
2024-11-25 15:27:15,185:INFO:Defining folds
2024-11-25 15:27:15,185:INFO:Declaring metric variables
2024-11-25 15:27:15,193:INFO:Importing untrained model
2024-11-25 15:27:15,201:INFO:Ada Boost Classifier Imported successfully
2024-11-25 15:27:15,220:INFO:Starting cross validation
2024-11-25 15:27:15,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:27:15,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:15,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:20,029:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:20,042:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:20,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:20,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:20,055:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:20,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:20,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:20,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:23,442:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:23,453:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:23,463:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:23,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:23,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:23,532:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:24,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:24,038:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:27,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:27,031:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:27,073:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:27,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:27,129:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:27,161:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:27,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:27,915:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:30,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:30,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:30,996:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:31,168:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:31,186:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:31,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:31,569:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:31,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:27:34,328:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:34,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:34,382:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:34,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:34,647:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:34,689:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:34,739:INFO:Calculating mean and std
2024-11-25 15:27:34,742:INFO:Creating metrics dataframe
2024-11-25 15:27:34,753:INFO:Uploading results into container
2024-11-25 15:27:34,754:INFO:Uploading model into container now
2024-11-25 15:27:34,755:INFO:_master_model_container: 9
2024-11-25 15:27:34,755:INFO:_display_container: 2
2024-11-25 15:27:34,756:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8511)
2024-11-25 15:27:34,757:INFO:create_model() successfully completed......................................
2024-11-25 15:27:34,981:INFO:SubProcess create_model() end ==================================
2024-11-25 15:27:34,982:INFO:Creating metrics dataframe
2024-11-25 15:27:34,998:INFO:Initializing Gradient Boosting Classifier
2024-11-25 15:27:34,998:INFO:Total runtime is 2.502936780452728 minutes
2024-11-25 15:27:35,006:INFO:SubProcess create_model() called ==================================
2024-11-25 15:27:35,006:INFO:Initializing create_model()
2024-11-25 15:27:35,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:27:35,006:INFO:Checking exceptions
2024-11-25 15:27:35,006:INFO:Importing libraries
2024-11-25 15:27:35,006:INFO:Copying training dataset
2024-11-25 15:27:35,061:INFO:Defining folds
2024-11-25 15:27:35,061:INFO:Declaring metric variables
2024-11-25 15:27:35,070:INFO:Importing untrained model
2024-11-25 15:27:35,076:INFO:Gradient Boosting Classifier Imported successfully
2024-11-25 15:27:35,100:INFO:Starting cross validation
2024-11-25 15:27:35,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:27:45,965:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:45,984:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:46,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:46,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:46,122:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:46,156:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:55,510:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:55,537:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:55,550:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:55,555:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:55,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:27:55,594:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:04,988:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:05,001:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:05,021:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:05,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:05,210:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:05,220:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:14,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:14,987:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:14,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:15,001:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:15,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:15,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:24,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:24,210:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:24,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:24,235:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:24,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:24,268:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:24,305:INFO:Calculating mean and std
2024-11-25 15:28:24,307:INFO:Creating metrics dataframe
2024-11-25 15:28:24,313:INFO:Uploading results into container
2024-11-25 15:28:24,315:INFO:Uploading model into container now
2024-11-25 15:28:24,316:INFO:_master_model_container: 10
2024-11-25 15:28:24,316:INFO:_display_container: 2
2024-11-25 15:28:24,318:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8511, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-25 15:28:24,318:INFO:create_model() successfully completed......................................
2024-11-25 15:28:24,516:INFO:SubProcess create_model() end ==================================
2024-11-25 15:28:24,516:INFO:Creating metrics dataframe
2024-11-25 15:28:24,533:INFO:Initializing Linear Discriminant Analysis
2024-11-25 15:28:24,533:INFO:Total runtime is 3.3285333037376397 minutes
2024-11-25 15:28:24,542:INFO:SubProcess create_model() called ==================================
2024-11-25 15:28:24,543:INFO:Initializing create_model()
2024-11-25 15:28:24,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:28:24,543:INFO:Checking exceptions
2024-11-25 15:28:24,543:INFO:Importing libraries
2024-11-25 15:28:24,543:INFO:Copying training dataset
2024-11-25 15:28:24,571:INFO:Defining folds
2024-11-25 15:28:24,571:INFO:Declaring metric variables
2024-11-25 15:28:24,579:INFO:Importing untrained model
2024-11-25 15:28:24,583:INFO:Linear Discriminant Analysis Imported successfully
2024-11-25 15:28:24,599:INFO:Starting cross validation
2024-11-25 15:28:24,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:28:25,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:25,588:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:25,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:25,623:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:25,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:25,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:27,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:27,416:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:27,426:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:27,428:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:27,460:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:27,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:28,266:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:28,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:28,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:28,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:28,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:28,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:29,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:29,266:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:29,268:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:29,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:29,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:29,293:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:30,090:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:30,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:30,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:30,130:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:30,157:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:30,174:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:30,208:INFO:Calculating mean and std
2024-11-25 15:28:30,211:INFO:Creating metrics dataframe
2024-11-25 15:28:30,215:INFO:Uploading results into container
2024-11-25 15:28:30,216:INFO:Uploading model into container now
2024-11-25 15:28:30,219:INFO:_master_model_container: 11
2024-11-25 15:28:30,219:INFO:_display_container: 2
2024-11-25 15:28:30,220:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-25 15:28:30,220:INFO:create_model() successfully completed......................................
2024-11-25 15:28:30,392:INFO:SubProcess create_model() end ==================================
2024-11-25 15:28:30,392:INFO:Creating metrics dataframe
2024-11-25 15:28:30,416:INFO:Initializing Extra Trees Classifier
2024-11-25 15:28:30,416:INFO:Total runtime is 3.4265780727068575 minutes
2024-11-25 15:28:30,429:INFO:SubProcess create_model() called ==================================
2024-11-25 15:28:30,430:INFO:Initializing create_model()
2024-11-25 15:28:30,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:28:30,431:INFO:Checking exceptions
2024-11-25 15:28:30,431:INFO:Importing libraries
2024-11-25 15:28:30,431:INFO:Copying training dataset
2024-11-25 15:28:30,489:INFO:Defining folds
2024-11-25 15:28:30,490:INFO:Declaring metric variables
2024-11-25 15:28:30,504:INFO:Importing untrained model
2024-11-25 15:28:30,521:INFO:Extra Trees Classifier Imported successfully
2024-11-25 15:28:30,535:INFO:Starting cross validation
2024-11-25 15:28:30,542:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:28:37,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:37,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:37,366:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:37,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:37,640:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:37,649:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:43,608:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:43,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:43,676:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:43,990:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:44,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:44,051:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:50,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:50,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:50,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:51,066:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:51,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:51,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:57,942:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:57,959:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:57,973:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:58,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:58,278:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:28:58,318:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:04,900:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:04,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:04,964:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:05,245:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:05,255:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:05,264:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:05,309:INFO:Calculating mean and std
2024-11-25 15:29:05,321:INFO:Creating metrics dataframe
2024-11-25 15:29:05,330:INFO:Uploading results into container
2024-11-25 15:29:05,331:INFO:Uploading model into container now
2024-11-25 15:29:05,332:INFO:_master_model_container: 12
2024-11-25 15:29:05,332:INFO:_display_container: 2
2024-11-25 15:29:05,333:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8511, verbose=0,
                     warm_start=False)
2024-11-25 15:29:05,333:INFO:create_model() successfully completed......................................
2024-11-25 15:29:05,533:INFO:SubProcess create_model() end ==================================
2024-11-25 15:29:05,533:INFO:Creating metrics dataframe
2024-11-25 15:29:05,575:INFO:Initializing Light Gradient Boosting Machine
2024-11-25 15:29:05,575:INFO:Total runtime is 4.01255436738332 minutes
2024-11-25 15:29:05,580:INFO:SubProcess create_model() called ==================================
2024-11-25 15:29:05,580:INFO:Initializing create_model()
2024-11-25 15:29:05,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:29:05,580:INFO:Checking exceptions
2024-11-25 15:29:05,580:INFO:Importing libraries
2024-11-25 15:29:05,580:INFO:Copying training dataset
2024-11-25 15:29:05,638:INFO:Defining folds
2024-11-25 15:29:05,638:INFO:Declaring metric variables
2024-11-25 15:29:05,655:INFO:Importing untrained model
2024-11-25 15:29:05,668:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-25 15:29:05,692:INFO:Starting cross validation
2024-11-25 15:29:05,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:29:07,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:07,959:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:07,974:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:08,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:08,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:08,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:09,681:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:09,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:09,717:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:09,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:09,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:09,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:11,440:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:11,455:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:11,465:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:11,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:11,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:11,584:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:13,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:13,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:13,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:13,240:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:13,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:13,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:14,488:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:14,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:14,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:14,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:14,613:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:14,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:14,698:INFO:Calculating mean and std
2024-11-25 15:29:14,700:INFO:Creating metrics dataframe
2024-11-25 15:29:14,702:INFO:Uploading results into container
2024-11-25 15:29:14,703:INFO:Uploading model into container now
2024-11-25 15:29:14,704:INFO:_master_model_container: 13
2024-11-25 15:29:14,704:INFO:_display_container: 2
2024-11-25 15:29:14,707:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8511, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-25 15:29:14,707:INFO:create_model() successfully completed......................................
2024-11-25 15:29:14,909:INFO:SubProcess create_model() end ==================================
2024-11-25 15:29:14,909:INFO:Creating metrics dataframe
2024-11-25 15:29:14,944:INFO:Initializing Dummy Classifier
2024-11-25 15:29:14,944:INFO:Total runtime is 4.1687138080596915 minutes
2024-11-25 15:29:14,956:INFO:SubProcess create_model() called ==================================
2024-11-25 15:29:14,956:INFO:Initializing create_model()
2024-11-25 15:29:14,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E20AFA090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:29:14,958:INFO:Checking exceptions
2024-11-25 15:29:14,958:INFO:Importing libraries
2024-11-25 15:29:14,958:INFO:Copying training dataset
2024-11-25 15:29:15,011:INFO:Defining folds
2024-11-25 15:29:15,012:INFO:Declaring metric variables
2024-11-25 15:29:15,028:INFO:Importing untrained model
2024-11-25 15:29:15,033:INFO:Dummy Classifier Imported successfully
2024-11-25 15:29:15,064:INFO:Starting cross validation
2024-11-25 15:29:15,066:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:29:15,815:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:15,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:15,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:15,833:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:15,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:15,839:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:15,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:15,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:16,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:16,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:16,823:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:16,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:16,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:16,945:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:17,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:17,031:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:18,258:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:18,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:18,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:18,275:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:18,278:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:18,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:18,295:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:18,296:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,055:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,069:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,071:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:19,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,086:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:19,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,858:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,869:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,880:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:19,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,927:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:29:19,943:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:29:19,978:INFO:Calculating mean and std
2024-11-25 15:29:19,980:INFO:Creating metrics dataframe
2024-11-25 15:29:19,991:INFO:Uploading results into container
2024-11-25 15:29:19,993:INFO:Uploading model into container now
2024-11-25 15:29:19,993:INFO:_master_model_container: 14
2024-11-25 15:29:19,993:INFO:_display_container: 2
2024-11-25 15:29:19,994:INFO:DummyClassifier(constant=None, random_state=8511, strategy='prior')
2024-11-25 15:29:19,994:INFO:create_model() successfully completed......................................
2024-11-25 15:29:20,144:INFO:SubProcess create_model() end ==================================
2024-11-25 15:29:20,144:INFO:Creating metrics dataframe
2024-11-25 15:29:20,230:INFO:Initializing create_model()
2024-11-25 15:29:20,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8511, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:29:20,232:INFO:Checking exceptions
2024-11-25 15:29:20,239:INFO:Importing libraries
2024-11-25 15:29:20,241:INFO:Copying training dataset
2024-11-25 15:29:20,270:INFO:Defining folds
2024-11-25 15:29:20,270:INFO:Declaring metric variables
2024-11-25 15:29:20,270:INFO:Importing untrained model
2024-11-25 15:29:20,270:INFO:Declaring custom model
2024-11-25 15:29:20,270:INFO:Ridge Classifier Imported successfully
2024-11-25 15:29:20,270:INFO:Cross validation set to False
2024-11-25 15:29:20,270:INFO:Fitting Model
2024-11-25 15:29:20,803:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8511, solver='auto',
                tol=0.0001)
2024-11-25 15:29:20,804:INFO:create_model() successfully completed......................................
2024-11-25 15:29:21,054:INFO:_master_model_container: 14
2024-11-25 15:29:21,054:INFO:_display_container: 2
2024-11-25 15:29:21,054:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8511, solver='auto',
                tol=0.0001)
2024-11-25 15:29:21,054:INFO:compare_models() successfully completed......................................
2024-11-25 15:29:21,266:INFO:Initializing predict_model()
2024-11-25 15:29:21,267:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8511, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E23235080>)
2024-11-25 15:29:21,267:INFO:Checking exceptions
2024-11-25 15:29:21,267:INFO:Preloading libraries
2024-11-25 15:29:21,272:INFO:Set up data.
2024-11-25 15:29:21,282:INFO:Set up index.
2024-11-25 15:29:22,339:INFO:Initializing plot_model()
2024-11-25 15:29:22,340:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8511, solver='auto',
                tol=0.0001), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-25 15:29:22,341:INFO:Checking exceptions
2024-11-25 15:29:22,362:INFO:Preloading libraries
2024-11-25 15:29:22,363:INFO:Copying training dataset
2024-11-25 15:29:22,363:INFO:Plot type: feature
2024-11-25 15:29:23,051:INFO:Visual Rendered Successfully
2024-11-25 15:29:23,299:INFO:plot_model() successfully completed......................................
2024-11-25 15:29:23,358:INFO:Initializing plot_model()
2024-11-25 15:29:23,359:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8511, solver='auto',
                tol=0.0001), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-25 15:29:23,359:INFO:Checking exceptions
2024-11-25 15:54:04,907:INFO:Initializing plot_model()
2024-11-25 15:54:04,907:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E229D7FD0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8511, solver='auto',
                tol=0.0001), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-25 15:54:04,907:INFO:Checking exceptions
2024-11-25 15:54:51,387:INFO:PyCaret ClassificationExperiment
2024-11-25 15:54:51,387:INFO:Logging name: clf-default-name
2024-11-25 15:54:51,387:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 15:54:51,387:INFO:version 3.3.2
2024-11-25 15:54:51,387:INFO:Initializing setup()
2024-11-25 15:54:51,387:INFO:self.USI: 9170
2024-11-25 15:54:51,387:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 15:54:51,387:INFO:Checking environment
2024-11-25 15:54:51,387:INFO:python_version: 3.11.9
2024-11-25 15:54:51,387:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 15:54:51,387:INFO:machine: AMD64
2024-11-25 15:54:51,387:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 15:54:51,400:INFO:Memory: svmem(total=4293971968, available=1122672640, percent=73.9, used=3171299328, free=1122672640)
2024-11-25 15:54:51,400:INFO:Physical Core: 2
2024-11-25 15:54:51,400:INFO:Logical Core: 2
2024-11-25 15:54:51,401:INFO:Checking libraries
2024-11-25 15:54:51,401:INFO:System:
2024-11-25 15:54:51,401:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 15:54:51,401:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 15:54:51,401:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 15:54:51,401:INFO:PyCaret required dependencies:
2024-11-25 15:54:51,401:INFO:                 pip: 24.3.1
2024-11-25 15:54:51,401:INFO:          setuptools: 65.5.0
2024-11-25 15:54:51,401:INFO:             pycaret: 3.3.2
2024-11-25 15:54:51,401:INFO:             IPython: 8.26.0
2024-11-25 15:54:51,401:INFO:          ipywidgets: 8.1.5
2024-11-25 15:54:51,402:INFO:                tqdm: 4.66.5
2024-11-25 15:54:51,402:INFO:               numpy: 1.26.4
2024-11-25 15:54:51,402:INFO:              pandas: 2.1.4
2024-11-25 15:54:51,402:INFO:              jinja2: 3.1.4
2024-11-25 15:54:51,402:INFO:               scipy: 1.11.4
2024-11-25 15:54:51,402:INFO:              joblib: 1.3.2
2024-11-25 15:54:51,402:INFO:             sklearn: 1.4.2
2024-11-25 15:54:51,402:INFO:                pyod: 2.0.2
2024-11-25 15:54:51,402:INFO:            imblearn: 0.12.4
2024-11-25 15:54:51,402:INFO:   category_encoders: 2.6.4
2024-11-25 15:54:51,402:INFO:            lightgbm: 4.5.0
2024-11-25 15:54:51,402:INFO:               numba: 0.60.0
2024-11-25 15:54:51,402:INFO:            requests: 2.32.3
2024-11-25 15:54:51,402:INFO:          matplotlib: 3.7.5
2024-11-25 15:54:51,402:INFO:          scikitplot: 0.3.7
2024-11-25 15:54:51,402:INFO:         yellowbrick: 1.5
2024-11-25 15:54:51,402:INFO:              plotly: 5.24.1
2024-11-25 15:54:51,402:INFO:    plotly-resampler: Not installed
2024-11-25 15:54:51,402:INFO:             kaleido: 0.2.1
2024-11-25 15:54:51,402:INFO:           schemdraw: 0.15
2024-11-25 15:54:51,402:INFO:         statsmodels: 0.14.3
2024-11-25 15:54:51,402:INFO:              sktime: 0.26.0
2024-11-25 15:54:51,402:INFO:               tbats: 1.1.3
2024-11-25 15:54:51,404:INFO:            pmdarima: 2.0.4
2024-11-25 15:54:51,404:INFO:              psutil: 6.0.0
2024-11-25 15:54:51,404:INFO:          markupsafe: 3.0.2
2024-11-25 15:54:51,404:INFO:             pickle5: Not installed
2024-11-25 15:54:51,404:INFO:         cloudpickle: 3.0.0
2024-11-25 15:54:51,404:INFO:         deprecation: 2.1.0
2024-11-25 15:54:51,404:INFO:              xxhash: 3.5.0
2024-11-25 15:54:51,404:INFO:           wurlitzer: Not installed
2024-11-25 15:54:51,404:INFO:PyCaret optional dependencies:
2024-11-25 15:54:51,404:INFO:                shap: 0.46.0
2024-11-25 15:54:51,404:INFO:           interpret: Not installed
2024-11-25 15:54:51,404:INFO:                umap: Not installed
2024-11-25 15:54:51,404:INFO:     ydata_profiling: Not installed
2024-11-25 15:54:51,404:INFO:  explainerdashboard: Not installed
2024-11-25 15:54:51,405:INFO:             autoviz: Not installed
2024-11-25 15:54:51,405:INFO:           fairlearn: Not installed
2024-11-25 15:54:51,405:INFO:          deepchecks: Not installed
2024-11-25 15:54:51,405:INFO:             xgboost: Not installed
2024-11-25 15:54:51,405:INFO:            catboost: Not installed
2024-11-25 15:54:51,405:INFO:              kmodes: Not installed
2024-11-25 15:54:51,405:INFO:             mlxtend: Not installed
2024-11-25 15:54:51,405:INFO:       statsforecast: Not installed
2024-11-25 15:54:51,405:INFO:        tune_sklearn: Not installed
2024-11-25 15:54:51,405:INFO:                 ray: Not installed
2024-11-25 15:54:51,405:INFO:            hyperopt: Not installed
2024-11-25 15:54:51,405:INFO:              optuna: 4.1.0
2024-11-25 15:54:51,405:INFO:               skopt: Not installed
2024-11-25 15:54:51,405:INFO:              mlflow: Not installed
2024-11-25 15:54:51,405:INFO:              gradio: Not installed
2024-11-25 15:54:51,406:INFO:             fastapi: Not installed
2024-11-25 15:54:51,406:INFO:             uvicorn: Not installed
2024-11-25 15:54:51,406:INFO:              m2cgen: Not installed
2024-11-25 15:54:51,406:INFO:           evidently: Not installed
2024-11-25 15:54:51,406:INFO:               fugue: Not installed
2024-11-25 15:54:51,406:INFO:           streamlit: Not installed
2024-11-25 15:54:51,406:INFO:             prophet: Not installed
2024-11-25 15:54:51,406:INFO:None
2024-11-25 15:54:51,406:INFO:Set up data.
2024-11-25 15:54:51,510:INFO:Set up folding strategy.
2024-11-25 15:54:51,510:INFO:Set up train/test split.
2024-11-25 15:54:51,634:INFO:Set up index.
2024-11-25 15:54:51,634:INFO:Assigning column types.
2024-11-25 15:54:51,742:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-25 15:54:51,898:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 15:54:51,898:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 15:54:52,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:52,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:52,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 15:54:52,273:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 15:54:52,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:52,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:52,398:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-25 15:54:52,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 15:54:52,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:52,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:52,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 15:54:53,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:53,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:53,294:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-25 15:54:53,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:53,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:54,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:54,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:54,476:INFO:Preparing preprocessing pipeline...
2024-11-25 15:54:54,508:INFO:Set up label encoding.
2024-11-25 15:54:54,508:INFO:Set up date feature engineering.
2024-11-25 15:54:54,508:INFO:Set up simple imputation.
2024-11-25 15:54:54,523:INFO:Set up encoding of ordinal features.
2024-11-25 15:54:54,689:INFO:Set up encoding of categorical features.
2024-11-25 15:54:55,858:INFO:Finished creating preprocessing pipeline.
2024-11-25 15:54:55,929:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-25 15:54:55,929:INFO:Creating final display dataframe.
2024-11-25 15:54:57,429:INFO:Setup _display_container:                     Description             Value
0                    Session id              6774
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              9170
2024-11-25 15:54:57,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:57,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:57,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:57,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 15:54:57,976:INFO:setup() successfully completed in 6.61s...............
2024-11-25 15:54:57,976:INFO:Initializing compare_models()
2024-11-25 15:54:57,976:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-25 15:54:57,976:INFO:Checking exceptions
2024-11-25 15:54:58,007:INFO:Preparing display monitor
2024-11-25 15:54:58,195:INFO:Initializing Logistic Regression
2024-11-25 15:54:58,197:INFO:Total runtime is 2.7640660603841147e-05 minutes
2024-11-25 15:54:58,211:INFO:SubProcess create_model() called ==================================
2024-11-25 15:54:58,211:INFO:Initializing create_model()
2024-11-25 15:54:58,211:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:54:58,211:INFO:Checking exceptions
2024-11-25 15:54:58,211:INFO:Importing libraries
2024-11-25 15:54:58,211:INFO:Copying training dataset
2024-11-25 15:54:58,289:INFO:Defining folds
2024-11-25 15:54:58,290:INFO:Declaring metric variables
2024-11-25 15:54:58,383:INFO:Importing untrained model
2024-11-25 15:54:58,383:INFO:Logistic Regression Imported successfully
2024-11-25 15:54:58,456:INFO:Starting cross validation
2024-11-25 15:54:58,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:56:09,656:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:09,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:09,902:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:09,973:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:09,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:09,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:10,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:10,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:19,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:19,430:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:19,529:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:19,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:19,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:19,596:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:19,634:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:19,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:28,749:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:29,041:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:29,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:29,149:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:29,353:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:29,519:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:29,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:29,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:38,273:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:38,626:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:38,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:38,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:38,851:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:39,095:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:39,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:39,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:47,224:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:47,454:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:47,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:47,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:56:47,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:47,821:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 15:56:47,977:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:47,991:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:48,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:48,038:INFO:Calculating mean and std
2024-11-25 15:56:48,067:INFO:Creating metrics dataframe
2024-11-25 15:56:48,111:INFO:Uploading results into container
2024-11-25 15:56:48,116:INFO:Uploading model into container now
2024-11-25 15:56:48,118:INFO:_master_model_container: 1
2024-11-25 15:56:48,118:INFO:_display_container: 2
2024-11-25 15:56:48,119:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6774, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-25 15:56:48,119:INFO:create_model() successfully completed......................................
2024-11-25 15:56:48,442:INFO:SubProcess create_model() end ==================================
2024-11-25 15:56:48,442:INFO:Creating metrics dataframe
2024-11-25 15:56:48,466:INFO:Initializing K Neighbors Classifier
2024-11-25 15:56:48,466:INFO:Total runtime is 1.837839428583781 minutes
2024-11-25 15:56:48,499:INFO:SubProcess create_model() called ==================================
2024-11-25 15:56:48,499:INFO:Initializing create_model()
2024-11-25 15:56:48,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:56:48,499:INFO:Checking exceptions
2024-11-25 15:56:48,499:INFO:Importing libraries
2024-11-25 15:56:48,499:INFO:Copying training dataset
2024-11-25 15:56:48,986:INFO:Defining folds
2024-11-25 15:56:48,986:INFO:Declaring metric variables
2024-11-25 15:56:48,997:INFO:Importing untrained model
2024-11-25 15:56:49,026:INFO:K Neighbors Classifier Imported successfully
2024-11-25 15:56:49,055:INFO:Starting cross validation
2024-11-25 15:56:49,067:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:56:54,361:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:54,393:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:54,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:54,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:54,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:54,483:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:57,441:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:57,478:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:57,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:57,566:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:57,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:57,705:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:59,946:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:56:59,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:00,001:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:00,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:00,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:00,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:02,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:02,583:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:02,583:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:02,618:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:02,618:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:02,645:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:04,464:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:04,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:04,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:04,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:04,569:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:04,569:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:04,646:INFO:Calculating mean and std
2024-11-25 15:57:04,677:INFO:Creating metrics dataframe
2024-11-25 15:57:04,677:INFO:Uploading results into container
2024-11-25 15:57:04,677:INFO:Uploading model into container now
2024-11-25 15:57:04,677:INFO:_master_model_container: 2
2024-11-25 15:57:04,698:INFO:_display_container: 2
2024-11-25 15:57:04,699:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-25 15:57:04,699:INFO:create_model() successfully completed......................................
2024-11-25 15:57:05,037:INFO:SubProcess create_model() end ==================================
2024-11-25 15:57:05,037:INFO:Creating metrics dataframe
2024-11-25 15:57:05,068:INFO:Initializing Naive Bayes
2024-11-25 15:57:05,068:INFO:Total runtime is 2.114549966653188 minutes
2024-11-25 15:57:05,087:INFO:SubProcess create_model() called ==================================
2024-11-25 15:57:05,087:INFO:Initializing create_model()
2024-11-25 15:57:05,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:57:05,100:INFO:Checking exceptions
2024-11-25 15:57:05,100:INFO:Importing libraries
2024-11-25 15:57:05,100:INFO:Copying training dataset
2024-11-25 15:57:05,258:INFO:Defining folds
2024-11-25 15:57:05,258:INFO:Declaring metric variables
2024-11-25 15:57:05,258:INFO:Importing untrained model
2024-11-25 15:57:05,317:INFO:Naive Bayes Imported successfully
2024-11-25 15:57:05,322:INFO:Starting cross validation
2024-11-25 15:57:05,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:57:07,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:07,180:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:07,224:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:07,260:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:07,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:07,339:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:09,530:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:09,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:09,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:09,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:09,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:09,605:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:11,196:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:11,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:11,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:11,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:11,330:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:11,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:12,756:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:12,783:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:12,811:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:12,860:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:12,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:12,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:13,975:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:14,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:14,046:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:14,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:14,119:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:14,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:14,170:INFO:Calculating mean and std
2024-11-25 15:57:14,170:INFO:Creating metrics dataframe
2024-11-25 15:57:14,186:INFO:Uploading results into container
2024-11-25 15:57:14,188:INFO:Uploading model into container now
2024-11-25 15:57:14,189:INFO:_master_model_container: 3
2024-11-25 15:57:14,189:INFO:_display_container: 2
2024-11-25 15:57:14,189:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-25 15:57:14,189:INFO:create_model() successfully completed......................................
2024-11-25 15:57:14,511:INFO:SubProcess create_model() end ==================================
2024-11-25 15:57:14,511:INFO:Creating metrics dataframe
2024-11-25 15:57:14,546:INFO:Initializing Decision Tree Classifier
2024-11-25 15:57:14,546:INFO:Total runtime is 2.2725125352541604 minutes
2024-11-25 15:57:14,571:INFO:SubProcess create_model() called ==================================
2024-11-25 15:57:14,571:INFO:Initializing create_model()
2024-11-25 15:57:14,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:57:14,571:INFO:Checking exceptions
2024-11-25 15:57:14,572:INFO:Importing libraries
2024-11-25 15:57:14,572:INFO:Copying training dataset
2024-11-25 15:57:14,658:INFO:Defining folds
2024-11-25 15:57:14,658:INFO:Declaring metric variables
2024-11-25 15:57:14,665:INFO:Importing untrained model
2024-11-25 15:57:14,668:INFO:Decision Tree Classifier Imported successfully
2024-11-25 15:57:14,700:INFO:Starting cross validation
2024-11-25 15:57:14,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:57:19,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:19,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:19,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:19,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:19,654:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:19,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:21,884:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:21,895:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:21,930:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:21,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:21,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:21,972:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:24,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:24,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:24,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:24,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:24,356:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:24,395:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:26,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:26,652:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:26,652:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:26,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:26,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:26,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:29,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:29,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:29,642:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:29,691:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:29,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:29,753:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:29,842:INFO:Calculating mean and std
2024-11-25 15:57:29,848:INFO:Creating metrics dataframe
2024-11-25 15:57:29,862:INFO:Uploading results into container
2024-11-25 15:57:29,863:INFO:Uploading model into container now
2024-11-25 15:57:29,867:INFO:_master_model_container: 4
2024-11-25 15:57:29,868:INFO:_display_container: 2
2024-11-25 15:57:29,869:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6774, splitter='best')
2024-11-25 15:57:29,869:INFO:create_model() successfully completed......................................
2024-11-25 15:57:30,177:INFO:SubProcess create_model() end ==================================
2024-11-25 15:57:30,179:INFO:Creating metrics dataframe
2024-11-25 15:57:30,215:INFO:Initializing SVM - Linear Kernel
2024-11-25 15:57:30,215:INFO:Total runtime is 2.5336564222971596 minutes
2024-11-25 15:57:30,223:INFO:SubProcess create_model() called ==================================
2024-11-25 15:57:30,223:INFO:Initializing create_model()
2024-11-25 15:57:30,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:57:30,223:INFO:Checking exceptions
2024-11-25 15:57:30,223:INFO:Importing libraries
2024-11-25 15:57:30,223:INFO:Copying training dataset
2024-11-25 15:57:30,365:INFO:Defining folds
2024-11-25 15:57:30,365:INFO:Declaring metric variables
2024-11-25 15:57:30,431:INFO:Importing untrained model
2024-11-25 15:57:30,442:INFO:SVM - Linear Kernel Imported successfully
2024-11-25 15:57:30,495:INFO:Starting cross validation
2024-11-25 15:57:30,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:57:36,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:36,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:37,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:37,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:37,174:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:37,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:37,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:37,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:40,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:40,811:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:40,833:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:40,833:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:41,931:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:41,989:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:42,033:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:42,066:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:44,360:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:44,399:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:44,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:44,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:46,544:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:46,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:46,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:46,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:47,590:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:47,629:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:47,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:50,792:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:50,842:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:50,858:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:50,858:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:51,759:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:51,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:51,802:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:53,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:53,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:53,482:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:53,494:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:53,530:INFO:Calculating mean and std
2024-11-25 15:57:53,530:INFO:Creating metrics dataframe
2024-11-25 15:57:53,558:INFO:Uploading results into container
2024-11-25 15:57:53,561:INFO:Uploading model into container now
2024-11-25 15:57:53,564:INFO:_master_model_container: 5
2024-11-25 15:57:53,564:INFO:_display_container: 2
2024-11-25 15:57:53,565:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6774, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-25 15:57:53,565:INFO:create_model() successfully completed......................................
2024-11-25 15:57:53,922:INFO:SubProcess create_model() end ==================================
2024-11-25 15:57:53,922:INFO:Creating metrics dataframe
2024-11-25 15:57:53,950:INFO:Initializing Ridge Classifier
2024-11-25 15:57:53,950:INFO:Total runtime is 2.9292452653249104 minutes
2024-11-25 15:57:53,950:INFO:SubProcess create_model() called ==================================
2024-11-25 15:57:53,950:INFO:Initializing create_model()
2024-11-25 15:57:53,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:57:53,950:INFO:Checking exceptions
2024-11-25 15:57:53,950:INFO:Importing libraries
2024-11-25 15:57:53,950:INFO:Copying training dataset
2024-11-25 15:57:54,060:INFO:Defining folds
2024-11-25 15:57:54,060:INFO:Declaring metric variables
2024-11-25 15:57:54,060:INFO:Importing untrained model
2024-11-25 15:57:54,090:INFO:Ridge Classifier Imported successfully
2024-11-25 15:57:54,115:INFO:Starting cross validation
2024-11-25 15:57:54,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:57:56,053:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:56,068:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:56,095:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:56,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:56,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:56,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 15:57:56,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:58,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:58,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:58,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:58,737:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:58,751:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:58,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:57:59,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:00,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:00,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:00,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:00,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:00,154:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:01,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:01,236:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:01,268:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:01,390:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:01,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:01,452:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:02,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:02,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:02,630:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:02,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:02,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:02,698:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:02,733:INFO:Calculating mean and std
2024-11-25 15:58:02,741:INFO:Creating metrics dataframe
2024-11-25 15:58:02,745:INFO:Uploading results into container
2024-11-25 15:58:02,746:INFO:Uploading model into container now
2024-11-25 15:58:02,747:INFO:_master_model_container: 6
2024-11-25 15:58:02,747:INFO:_display_container: 2
2024-11-25 15:58:02,747:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6774, solver='auto',
                tol=0.0001)
2024-11-25 15:58:02,747:INFO:create_model() successfully completed......................................
2024-11-25 15:58:03,047:INFO:SubProcess create_model() end ==================================
2024-11-25 15:58:03,047:INFO:Creating metrics dataframe
2024-11-25 15:58:03,062:INFO:Initializing Random Forest Classifier
2024-11-25 15:58:03,062:INFO:Total runtime is 3.081112241744995 minutes
2024-11-25 15:58:03,084:INFO:SubProcess create_model() called ==================================
2024-11-25 15:58:03,085:INFO:Initializing create_model()
2024-11-25 15:58:03,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:58:03,085:INFO:Checking exceptions
2024-11-25 15:58:03,085:INFO:Importing libraries
2024-11-25 15:58:03,085:INFO:Copying training dataset
2024-11-25 15:58:03,195:INFO:Defining folds
2024-11-25 15:58:03,195:INFO:Declaring metric variables
2024-11-25 15:58:03,233:INFO:Importing untrained model
2024-11-25 15:58:03,233:INFO:Random Forest Classifier Imported successfully
2024-11-25 15:58:03,288:INFO:Starting cross validation
2024-11-25 15:58:03,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:58:16,535:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:16,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:16,602:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:16,730:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:16,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:16,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:29,663:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:29,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:29,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:29,989:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:29,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:30,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:41,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:41,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:41,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:41,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:41,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:41,799:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:54,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:54,837:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:54,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:56,097:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:56,181:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:58:56,237:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:10,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:10,638:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:10,674:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:11,024:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:11,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:11,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:11,110:INFO:Calculating mean and std
2024-11-25 15:59:11,110:INFO:Creating metrics dataframe
2024-11-25 15:59:11,121:INFO:Uploading results into container
2024-11-25 15:59:11,121:INFO:Uploading model into container now
2024-11-25 15:59:11,127:INFO:_master_model_container: 7
2024-11-25 15:59:11,127:INFO:_display_container: 2
2024-11-25 15:59:11,128:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6774, verbose=0,
                       warm_start=False)
2024-11-25 15:59:11,128:INFO:create_model() successfully completed......................................
2024-11-25 15:59:11,504:INFO:SubProcess create_model() end ==================================
2024-11-25 15:59:11,505:INFO:Creating metrics dataframe
2024-11-25 15:59:11,530:INFO:Initializing Quadratic Discriminant Analysis
2024-11-25 15:59:11,530:INFO:Total runtime is 4.22224045197169 minutes
2024-11-25 15:59:11,561:INFO:SubProcess create_model() called ==================================
2024-11-25 15:59:11,561:INFO:Initializing create_model()
2024-11-25 15:59:11,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:59:11,561:INFO:Checking exceptions
2024-11-25 15:59:11,561:INFO:Importing libraries
2024-11-25 15:59:11,561:INFO:Copying training dataset
2024-11-25 15:59:11,776:INFO:Defining folds
2024-11-25 15:59:11,777:INFO:Declaring metric variables
2024-11-25 15:59:11,783:INFO:Importing untrained model
2024-11-25 15:59:11,795:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-25 15:59:11,842:INFO:Starting cross validation
2024-11-25 15:59:11,875:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:59:13,973:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:14,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:14,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:14,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:14,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:14,776:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:14,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:14,847:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:16,663:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:16,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:17,050:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:17,097:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:17,136:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:17,223:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:17,248:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:17,262:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:18,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:18,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:18,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:18,427:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:18,470:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:18,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:18,554:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:18,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:19,669:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:19,718:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:19,988:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:20,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:20,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:20,064:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:20,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:20,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:21,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:21,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 15:59:21,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:21,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:21,724:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:21,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:21,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:21,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:21,918:INFO:Calculating mean and std
2024-11-25 15:59:21,960:INFO:Creating metrics dataframe
2024-11-25 15:59:21,970:INFO:Uploading results into container
2024-11-25 15:59:21,983:INFO:Uploading model into container now
2024-11-25 15:59:21,986:INFO:_master_model_container: 8
2024-11-25 15:59:21,988:INFO:_display_container: 2
2024-11-25 15:59:21,992:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-25 15:59:21,992:INFO:create_model() successfully completed......................................
2024-11-25 15:59:22,364:INFO:SubProcess create_model() end ==================================
2024-11-25 15:59:22,364:INFO:Creating metrics dataframe
2024-11-25 15:59:22,407:INFO:Initializing Ada Boost Classifier
2024-11-25 15:59:22,407:INFO:Total runtime is 4.40352189540863 minutes
2024-11-25 15:59:22,419:INFO:SubProcess create_model() called ==================================
2024-11-25 15:59:22,419:INFO:Initializing create_model()
2024-11-25 15:59:22,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:59:22,419:INFO:Checking exceptions
2024-11-25 15:59:22,419:INFO:Importing libraries
2024-11-25 15:59:22,419:INFO:Copying training dataset
2024-11-25 15:59:22,560:INFO:Defining folds
2024-11-25 15:59:22,560:INFO:Declaring metric variables
2024-11-25 15:59:22,579:INFO:Importing untrained model
2024-11-25 15:59:22,590:INFO:Ada Boost Classifier Imported successfully
2024-11-25 15:59:22,590:INFO:Starting cross validation
2024-11-25 15:59:22,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 15:59:23,497:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:23,497:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:29,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:29,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:29,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:29,888:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:29,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:29,956:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:30,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:31,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:35,513:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:35,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:35,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:35,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:35,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:35,582:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:36,598:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:36,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:41,517:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:41,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:41,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:41,817:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:41,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:41,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:43,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:43,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:48,204:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:48,204:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:48,236:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:48,239:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:48,239:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:48,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:49,133:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:49,205:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 15:59:53,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:53,634:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:53,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:53,781:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:53,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:53,904:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 15:59:54,014:INFO:Calculating mean and std
2024-11-25 15:59:54,059:INFO:Creating metrics dataframe
2024-11-25 15:59:54,082:INFO:Uploading results into container
2024-11-25 15:59:54,082:INFO:Uploading model into container now
2024-11-25 15:59:54,083:INFO:_master_model_container: 9
2024-11-25 15:59:54,083:INFO:_display_container: 2
2024-11-25 15:59:54,083:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6774)
2024-11-25 15:59:54,083:INFO:create_model() successfully completed......................................
2024-11-25 15:59:54,527:INFO:SubProcess create_model() end ==================================
2024-11-25 15:59:54,527:INFO:Creating metrics dataframe
2024-11-25 15:59:54,544:INFO:Initializing Gradient Boosting Classifier
2024-11-25 15:59:54,544:INFO:Total runtime is 4.93914221127828 minutes
2024-11-25 15:59:54,558:INFO:SubProcess create_model() called ==================================
2024-11-25 15:59:54,558:INFO:Initializing create_model()
2024-11-25 15:59:54,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 15:59:54,558:INFO:Checking exceptions
2024-11-25 15:59:54,558:INFO:Importing libraries
2024-11-25 15:59:54,558:INFO:Copying training dataset
2024-11-25 15:59:54,733:INFO:Defining folds
2024-11-25 15:59:54,733:INFO:Declaring metric variables
2024-11-25 15:59:54,745:INFO:Importing untrained model
2024-11-25 15:59:54,824:INFO:Gradient Boosting Classifier Imported successfully
2024-11-25 15:59:54,849:INFO:Starting cross validation
2024-11-25 15:59:54,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 16:00:11,213:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:11,254:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:11,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:11,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:11,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:11,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:25,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:25,168:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:25,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:25,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:25,366:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:25,407:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:41,177:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:41,204:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:41,204:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:41,615:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:41,643:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:41,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:55,797:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:55,847:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:55,897:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:56,300:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:56,328:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:00:56,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:10,700:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:10,716:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:10,749:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:11,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:11,029:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:11,039:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:11,113:INFO:Calculating mean and std
2024-11-25 16:01:11,125:INFO:Creating metrics dataframe
2024-11-25 16:01:11,125:INFO:Uploading results into container
2024-11-25 16:01:11,125:INFO:Uploading model into container now
2024-11-25 16:01:11,125:INFO:_master_model_container: 10
2024-11-25 16:01:11,125:INFO:_display_container: 2
2024-11-25 16:01:11,125:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6774, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-25 16:01:11,125:INFO:create_model() successfully completed......................................
2024-11-25 16:01:11,484:INFO:SubProcess create_model() end ==================================
2024-11-25 16:01:11,484:INFO:Creating metrics dataframe
2024-11-25 16:01:11,514:INFO:Initializing Linear Discriminant Analysis
2024-11-25 16:01:11,514:INFO:Total runtime is 6.221986289819082 minutes
2024-11-25 16:01:11,531:INFO:SubProcess create_model() called ==================================
2024-11-25 16:01:11,531:INFO:Initializing create_model()
2024-11-25 16:01:11,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 16:01:11,531:INFO:Checking exceptions
2024-11-25 16:01:11,531:INFO:Importing libraries
2024-11-25 16:01:11,531:INFO:Copying training dataset
2024-11-25 16:01:11,671:INFO:Defining folds
2024-11-25 16:01:11,671:INFO:Declaring metric variables
2024-11-25 16:01:11,697:INFO:Importing untrained model
2024-11-25 16:01:11,719:INFO:Linear Discriminant Analysis Imported successfully
2024-11-25 16:01:11,822:INFO:Starting cross validation
2024-11-25 16:01:11,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 16:01:14,081:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:14,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:14,119:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:14,129:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:14,129:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:14,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:16,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:16,984:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:17,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:17,059:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:17,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:17,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:18,698:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:18,717:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:18,760:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:18,760:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:18,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:18,903:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:20,385:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:20,419:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:20,451:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:20,462:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:20,462:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:20,500:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:22,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:22,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:22,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:22,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:22,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:22,112:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:22,150:INFO:Calculating mean and std
2024-11-25 16:01:22,150:INFO:Creating metrics dataframe
2024-11-25 16:01:22,169:INFO:Uploading results into container
2024-11-25 16:01:22,171:INFO:Uploading model into container now
2024-11-25 16:01:22,171:INFO:_master_model_container: 11
2024-11-25 16:01:22,171:INFO:_display_container: 2
2024-11-25 16:01:22,171:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-25 16:01:22,171:INFO:create_model() successfully completed......................................
2024-11-25 16:01:22,570:INFO:SubProcess create_model() end ==================================
2024-11-25 16:01:22,587:INFO:Creating metrics dataframe
2024-11-25 16:01:22,604:INFO:Initializing Extra Trees Classifier
2024-11-25 16:01:22,604:INFO:Total runtime is 6.406815735499064 minutes
2024-11-25 16:01:22,618:INFO:SubProcess create_model() called ==================================
2024-11-25 16:01:22,618:INFO:Initializing create_model()
2024-11-25 16:01:22,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 16:01:22,618:INFO:Checking exceptions
2024-11-25 16:01:22,618:INFO:Importing libraries
2024-11-25 16:01:22,618:INFO:Copying training dataset
2024-11-25 16:01:22,743:INFO:Defining folds
2024-11-25 16:01:22,743:INFO:Declaring metric variables
2024-11-25 16:01:22,763:INFO:Importing untrained model
2024-11-25 16:01:22,773:INFO:Extra Trees Classifier Imported successfully
2024-11-25 16:01:22,836:INFO:Starting cross validation
2024-11-25 16:01:22,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 16:01:36,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:36,051:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:36,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:36,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:36,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:36,378:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:47,429:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:47,459:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:47,489:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:47,695:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:47,718:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:01:47,802:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:00,618:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:00,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:00,690:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:00,975:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:01,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:01,127:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:14,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:14,132:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:14,191:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:14,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:14,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:14,412:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:24,733:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:24,733:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:24,798:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:25,105:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:25,120:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:25,130:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:25,203:INFO:Calculating mean and std
2024-11-25 16:02:25,203:INFO:Creating metrics dataframe
2024-11-25 16:02:25,215:INFO:Uploading results into container
2024-11-25 16:02:25,217:INFO:Uploading model into container now
2024-11-25 16:02:25,218:INFO:_master_model_container: 12
2024-11-25 16:02:25,218:INFO:_display_container: 2
2024-11-25 16:02:25,223:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6774, verbose=0,
                     warm_start=False)
2024-11-25 16:02:25,223:INFO:create_model() successfully completed......................................
2024-11-25 16:02:25,562:INFO:SubProcess create_model() end ==================================
2024-11-25 16:02:25,562:INFO:Creating metrics dataframe
2024-11-25 16:02:25,596:INFO:Initializing Light Gradient Boosting Machine
2024-11-25 16:02:25,596:INFO:Total runtime is 7.456675660610199 minutes
2024-11-25 16:02:25,609:INFO:SubProcess create_model() called ==================================
2024-11-25 16:02:25,609:INFO:Initializing create_model()
2024-11-25 16:02:25,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 16:02:25,609:INFO:Checking exceptions
2024-11-25 16:02:25,609:INFO:Importing libraries
2024-11-25 16:02:25,609:INFO:Copying training dataset
2024-11-25 16:02:25,907:INFO:Defining folds
2024-11-25 16:02:25,907:INFO:Declaring metric variables
2024-11-25 16:02:25,985:INFO:Importing untrained model
2024-11-25 16:02:26,001:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-25 16:02:26,058:INFO:Starting cross validation
2024-11-25 16:02:26,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 16:02:30,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:30,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:30,897:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:31,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:31,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:31,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:33,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:33,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:33,097:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:33,452:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:33,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:33,516:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:35,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:35,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:35,746:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:35,847:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:35,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:35,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:38,207:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:38,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:38,321:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:38,456:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:38,530:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:38,559:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:41,123:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:41,133:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:41,196:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:41,364:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:41,395:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:41,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:41,492:INFO:Calculating mean and std
2024-11-25 16:02:41,494:INFO:Creating metrics dataframe
2024-11-25 16:02:41,500:INFO:Uploading results into container
2024-11-25 16:02:41,502:INFO:Uploading model into container now
2024-11-25 16:02:41,503:INFO:_master_model_container: 13
2024-11-25 16:02:41,503:INFO:_display_container: 2
2024-11-25 16:02:41,505:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6774, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-25 16:02:41,505:INFO:create_model() successfully completed......................................
2024-11-25 16:02:41,877:INFO:SubProcess create_model() end ==================================
2024-11-25 16:02:41,877:INFO:Creating metrics dataframe
2024-11-25 16:02:41,889:INFO:Initializing Dummy Classifier
2024-11-25 16:02:41,889:INFO:Total runtime is 7.728224651018778 minutes
2024-11-25 16:02:41,908:INFO:SubProcess create_model() called ==================================
2024-11-25 16:02:41,908:INFO:Initializing create_model()
2024-11-25 16:02:41,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13F1A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 16:02:41,908:INFO:Checking exceptions
2024-11-25 16:02:41,908:INFO:Importing libraries
2024-11-25 16:02:41,908:INFO:Copying training dataset
2024-11-25 16:02:42,051:INFO:Defining folds
2024-11-25 16:02:42,051:INFO:Declaring metric variables
2024-11-25 16:02:42,124:INFO:Importing untrained model
2024-11-25 16:02:42,170:INFO:Dummy Classifier Imported successfully
2024-11-25 16:02:42,204:INFO:Starting cross validation
2024-11-25 16:02:42,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 16:02:43,122:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:43,141:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:43,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:43,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:43,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:43,168:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:43,184:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:43,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:45,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:45,839:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:45,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:45,949:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:45,965:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:46,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:46,488:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:46,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:47,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:47,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:47,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:47,621:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:47,702:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:47,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:47,760:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:47,774:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:48,753:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:48,790:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:48,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:48,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:48,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:48,844:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:48,880:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:48,905:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:49,963:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:49,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:49,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:50,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:50,018:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:50,018:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:50,029:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 16:02:50,039:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 16:02:50,075:INFO:Calculating mean and std
2024-11-25 16:02:50,080:INFO:Creating metrics dataframe
2024-11-25 16:02:50,098:INFO:Uploading results into container
2024-11-25 16:02:50,109:INFO:Uploading model into container now
2024-11-25 16:02:50,112:INFO:_master_model_container: 14
2024-11-25 16:02:50,112:INFO:_display_container: 2
2024-11-25 16:02:50,113:INFO:DummyClassifier(constant=None, random_state=6774, strategy='prior')
2024-11-25 16:02:50,114:INFO:create_model() successfully completed......................................
2024-11-25 16:02:50,415:INFO:SubProcess create_model() end ==================================
2024-11-25 16:02:50,415:INFO:Creating metrics dataframe
2024-11-25 16:02:50,549:INFO:Initializing create_model()
2024-11-25 16:02:50,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=DummyClassifier(constant=None, random_state=6774, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 16:02:50,549:INFO:Checking exceptions
2024-11-25 16:02:50,552:INFO:Importing libraries
2024-11-25 16:02:50,552:INFO:Copying training dataset
2024-11-25 16:02:50,622:INFO:Defining folds
2024-11-25 16:02:50,622:INFO:Declaring metric variables
2024-11-25 16:02:50,622:INFO:Importing untrained model
2024-11-25 16:02:50,622:INFO:Declaring custom model
2024-11-25 16:02:50,622:INFO:Dummy Classifier Imported successfully
2024-11-25 16:02:50,622:INFO:Cross validation set to False
2024-11-25 16:02:50,622:INFO:Fitting Model
2024-11-25 16:02:51,338:INFO:DummyClassifier(constant=None, random_state=6774, strategy='prior')
2024-11-25 16:02:51,338:INFO:create_model() successfully completed......................................
2024-11-25 16:02:52,230:INFO:_master_model_container: 14
2024-11-25 16:02:52,230:INFO:_display_container: 2
2024-11-25 16:02:52,230:INFO:DummyClassifier(constant=None, random_state=6774, strategy='prior')
2024-11-25 16:02:52,230:INFO:compare_models() successfully completed......................................
2024-11-25 16:02:54,056:INFO:Initializing predict_model()
2024-11-25 16:02:54,056:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=DummyClassifier(constant=None, random_state=6774, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E23322200>)
2024-11-25 16:02:54,056:INFO:Checking exceptions
2024-11-25 16:02:54,056:INFO:Preloading libraries
2024-11-25 16:02:54,064:INFO:Set up data.
2024-11-25 16:02:54,127:INFO:Set up index.
2024-11-25 16:02:56,759:INFO:Initializing plot_model()
2024-11-25 16:02:56,759:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E0F509410>, estimator=DummyClassifier(constant=None, random_state=6774, strategy='prior'), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-25 16:02:56,759:INFO:Checking exceptions
2024-11-25 17:09:24,190:INFO:PyCaret ClassificationExperiment
2024-11-25 17:09:24,190:INFO:Logging name: clf-default-name
2024-11-25 17:09:24,198:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 17:09:24,198:INFO:version 3.3.2
2024-11-25 17:09:24,198:INFO:Initializing setup()
2024-11-25 17:09:24,198:INFO:self.USI: a8f1
2024-11-25 17:09:24,198:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 17:09:24,198:INFO:Checking environment
2024-11-25 17:09:24,198:INFO:python_version: 3.11.9
2024-11-25 17:09:24,198:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 17:09:24,198:INFO:machine: AMD64
2024-11-25 17:09:24,198:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 17:09:24,198:INFO:Memory: svmem(total=4293971968, available=1212227584, percent=71.8, used=3081744384, free=1212227584)
2024-11-25 17:09:24,198:INFO:Physical Core: 2
2024-11-25 17:09:24,198:INFO:Logical Core: 2
2024-11-25 17:09:24,198:INFO:Checking libraries
2024-11-25 17:09:24,198:INFO:System:
2024-11-25 17:09:24,198:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 17:09:24,198:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 17:09:24,198:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 17:09:24,198:INFO:PyCaret required dependencies:
2024-11-25 17:09:24,198:INFO:                 pip: 24.3.1
2024-11-25 17:09:24,198:INFO:          setuptools: 65.5.0
2024-11-25 17:09:24,198:INFO:             pycaret: 3.3.2
2024-11-25 17:09:24,198:INFO:             IPython: 8.26.0
2024-11-25 17:09:24,198:INFO:          ipywidgets: 8.1.5
2024-11-25 17:09:24,198:INFO:                tqdm: 4.66.5
2024-11-25 17:09:24,198:INFO:               numpy: 1.26.4
2024-11-25 17:09:24,198:INFO:              pandas: 2.1.4
2024-11-25 17:09:24,198:INFO:              jinja2: 3.1.4
2024-11-25 17:09:24,198:INFO:               scipy: 1.11.4
2024-11-25 17:09:24,198:INFO:              joblib: 1.3.2
2024-11-25 17:09:24,198:INFO:             sklearn: 1.4.2
2024-11-25 17:09:24,198:INFO:                pyod: 2.0.2
2024-11-25 17:09:24,198:INFO:            imblearn: 0.12.4
2024-11-25 17:09:24,198:INFO:   category_encoders: 2.6.4
2024-11-25 17:09:24,198:INFO:            lightgbm: 4.5.0
2024-11-25 17:09:24,198:INFO:               numba: 0.60.0
2024-11-25 17:09:24,198:INFO:            requests: 2.32.3
2024-11-25 17:09:24,198:INFO:          matplotlib: 3.7.5
2024-11-25 17:09:24,198:INFO:          scikitplot: 0.3.7
2024-11-25 17:09:24,198:INFO:         yellowbrick: 1.5
2024-11-25 17:09:24,198:INFO:              plotly: 5.24.1
2024-11-25 17:09:24,198:INFO:    plotly-resampler: Not installed
2024-11-25 17:09:24,198:INFO:             kaleido: 0.2.1
2024-11-25 17:09:24,198:INFO:           schemdraw: 0.15
2024-11-25 17:09:24,198:INFO:         statsmodels: 0.14.3
2024-11-25 17:09:24,198:INFO:              sktime: 0.26.0
2024-11-25 17:09:24,198:INFO:               tbats: 1.1.3
2024-11-25 17:09:24,198:INFO:            pmdarima: 2.0.4
2024-11-25 17:09:24,198:INFO:              psutil: 6.0.0
2024-11-25 17:09:24,198:INFO:          markupsafe: 3.0.2
2024-11-25 17:09:24,198:INFO:             pickle5: Not installed
2024-11-25 17:09:24,198:INFO:         cloudpickle: 3.0.0
2024-11-25 17:09:24,198:INFO:         deprecation: 2.1.0
2024-11-25 17:09:24,198:INFO:              xxhash: 3.5.0
2024-11-25 17:09:24,198:INFO:           wurlitzer: Not installed
2024-11-25 17:09:24,198:INFO:PyCaret optional dependencies:
2024-11-25 17:09:24,198:INFO:                shap: 0.46.0
2024-11-25 17:09:24,198:INFO:           interpret: Not installed
2024-11-25 17:09:24,198:INFO:                umap: Not installed
2024-11-25 17:09:24,198:INFO:     ydata_profiling: Not installed
2024-11-25 17:09:24,198:INFO:  explainerdashboard: Not installed
2024-11-25 17:09:24,198:INFO:             autoviz: Not installed
2024-11-25 17:09:24,198:INFO:           fairlearn: Not installed
2024-11-25 17:09:24,198:INFO:          deepchecks: Not installed
2024-11-25 17:09:24,198:INFO:             xgboost: Not installed
2024-11-25 17:09:24,198:INFO:            catboost: Not installed
2024-11-25 17:09:24,198:INFO:              kmodes: Not installed
2024-11-25 17:09:24,198:INFO:             mlxtend: Not installed
2024-11-25 17:09:24,198:INFO:       statsforecast: Not installed
2024-11-25 17:09:24,198:INFO:        tune_sklearn: Not installed
2024-11-25 17:09:24,198:INFO:                 ray: Not installed
2024-11-25 17:09:24,198:INFO:            hyperopt: Not installed
2024-11-25 17:09:24,198:INFO:              optuna: 4.1.0
2024-11-25 17:09:24,198:INFO:               skopt: Not installed
2024-11-25 17:09:24,198:INFO:              mlflow: Not installed
2024-11-25 17:09:24,198:INFO:              gradio: Not installed
2024-11-25 17:09:24,198:INFO:             fastapi: Not installed
2024-11-25 17:09:24,198:INFO:             uvicorn: Not installed
2024-11-25 17:09:24,198:INFO:              m2cgen: Not installed
2024-11-25 17:09:24,198:INFO:           evidently: Not installed
2024-11-25 17:09:24,198:INFO:               fugue: Not installed
2024-11-25 17:09:24,198:INFO:           streamlit: Not installed
2024-11-25 17:09:24,198:INFO:             prophet: Not installed
2024-11-25 17:09:24,198:INFO:None
2024-11-25 17:09:24,198:INFO:Set up data.
2024-11-25 17:09:24,232:INFO:Set up folding strategy.
2024-11-25 17:09:24,232:INFO:Set up train/test split.
2024-11-25 17:09:24,343:INFO:Set up index.
2024-11-25 17:09:24,347:INFO:Assigning column types.
2024-11-25 17:09:24,355:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-25 17:09:24,542:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 17:09:24,571:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 17:09:24,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:24,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:25,216:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 17:09:25,218:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 17:09:25,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:25,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:25,933:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-25 17:09:26,152:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 17:09:26,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:26,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:26,339:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 17:09:26,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:26,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:26,464:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-25 17:09:27,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:27,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:27,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:27,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:27,464:INFO:Preparing preprocessing pipeline...
2024-11-25 17:09:27,464:INFO:Set up label encoding.
2024-11-25 17:09:27,464:INFO:Set up date feature engineering.
2024-11-25 17:09:27,464:INFO:Set up simple imputation.
2024-11-25 17:09:27,511:INFO:Set up encoding of ordinal features.
2024-11-25 17:09:27,542:INFO:Set up encoding of categorical features.
2024-11-25 17:09:28,324:INFO:Finished creating preprocessing pipeline.
2024-11-25 17:09:28,324:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-25 17:09:28,324:INFO:Creating final display dataframe.
2024-11-25 17:09:29,480:INFO:Setup _display_container:                     Description             Value
0                    Session id              6405
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              a8f1
2024-11-25 17:09:29,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:29,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:29,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:29,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 17:09:29,730:INFO:setup() successfully completed in 5.54s...............
2024-11-25 17:09:29,730:INFO:Initializing compare_models()
2024-11-25 17:09:29,730:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-25 17:09:29,730:INFO:Checking exceptions
2024-11-25 17:09:29,730:INFO:Preparing display monitor
2024-11-25 17:09:29,847:INFO:Initializing Logistic Regression
2024-11-25 17:09:29,853:INFO:Total runtime is 0.00011206467946370443 minutes
2024-11-25 17:09:29,862:INFO:SubProcess create_model() called ==================================
2024-11-25 17:09:29,863:INFO:Initializing create_model()
2024-11-25 17:09:29,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:09:29,864:INFO:Checking exceptions
2024-11-25 17:09:29,864:INFO:Importing libraries
2024-11-25 17:09:29,864:INFO:Copying training dataset
2024-11-25 17:09:29,949:INFO:Defining folds
2024-11-25 17:09:29,949:INFO:Declaring metric variables
2024-11-25 17:09:29,964:INFO:Importing untrained model
2024-11-25 17:09:29,980:INFO:Logistic Regression Imported successfully
2024-11-25 17:09:29,996:INFO:Starting cross validation
2024-11-25 17:09:29,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:09:44,171:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:09:44,211:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:09:44,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:44,305:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:44,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:44,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:44,333:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:44,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:51,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:09:51,480:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:09:51,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:51,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:51,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:51,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:51,645:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:51,656:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:58,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:09:58,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:58,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:58,295:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:58,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:09:58,622:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:58,651:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:09:58,669:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:05,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:10:05,412:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:05,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:05,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:05,705:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:10:05,900:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:05,940:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:05,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:13,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:10:13,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:13,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:13,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:13,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 17:10:13,668:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:13,705:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:13,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:13,783:INFO:Calculating mean and std
2024-11-25 17:10:13,783:INFO:Creating metrics dataframe
2024-11-25 17:10:13,797:INFO:Uploading results into container
2024-11-25 17:10:13,797:INFO:Uploading model into container now
2024-11-25 17:10:13,797:INFO:_master_model_container: 1
2024-11-25 17:10:13,797:INFO:_display_container: 2
2024-11-25 17:10:13,797:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6405, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-25 17:10:13,797:INFO:create_model() successfully completed......................................
2024-11-25 17:10:14,138:INFO:SubProcess create_model() end ==================================
2024-11-25 17:10:14,138:INFO:Creating metrics dataframe
2024-11-25 17:10:14,157:INFO:Initializing K Neighbors Classifier
2024-11-25 17:10:14,157:INFO:Total runtime is 0.7385027925173441 minutes
2024-11-25 17:10:14,181:INFO:SubProcess create_model() called ==================================
2024-11-25 17:10:14,183:INFO:Initializing create_model()
2024-11-25 17:10:14,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:10:14,185:INFO:Checking exceptions
2024-11-25 17:10:14,185:INFO:Importing libraries
2024-11-25 17:10:14,186:INFO:Copying training dataset
2024-11-25 17:10:14,221:INFO:Defining folds
2024-11-25 17:10:14,221:INFO:Declaring metric variables
2024-11-25 17:10:14,238:INFO:Importing untrained model
2024-11-25 17:10:14,251:INFO:K Neighbors Classifier Imported successfully
2024-11-25 17:10:14,271:INFO:Starting cross validation
2024-11-25 17:10:14,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:10:17,143:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:17,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:17,170:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:17,217:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:17,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:17,256:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:18,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:18,896:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:18,913:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:19,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:19,038:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:19,038:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:20,434:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:20,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:20,498:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:20,653:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:20,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:20,684:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:21,973:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:22,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:22,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:22,191:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:22,206:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:22,232:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:24,288:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:24,295:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:24,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:24,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:24,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:24,446:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:24,516:INFO:Calculating mean and std
2024-11-25 17:10:24,522:INFO:Creating metrics dataframe
2024-11-25 17:10:24,525:INFO:Uploading results into container
2024-11-25 17:10:24,525:INFO:Uploading model into container now
2024-11-25 17:10:24,525:INFO:_master_model_container: 2
2024-11-25 17:10:24,525:INFO:_display_container: 2
2024-11-25 17:10:24,525:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-25 17:10:24,525:INFO:create_model() successfully completed......................................
2024-11-25 17:10:25,000:INFO:SubProcess create_model() end ==================================
2024-11-25 17:10:25,000:INFO:Creating metrics dataframe
2024-11-25 17:10:25,024:INFO:Initializing Naive Bayes
2024-11-25 17:10:25,024:INFO:Total runtime is 0.9196137269337972 minutes
2024-11-25 17:10:25,048:INFO:SubProcess create_model() called ==================================
2024-11-25 17:10:25,048:INFO:Initializing create_model()
2024-11-25 17:10:25,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:10:25,054:INFO:Checking exceptions
2024-11-25 17:10:25,054:INFO:Importing libraries
2024-11-25 17:10:25,054:INFO:Copying training dataset
2024-11-25 17:10:25,091:INFO:Defining folds
2024-11-25 17:10:25,091:INFO:Declaring metric variables
2024-11-25 17:10:25,102:INFO:Importing untrained model
2024-11-25 17:10:25,151:INFO:Naive Bayes Imported successfully
2024-11-25 17:10:25,164:INFO:Starting cross validation
2024-11-25 17:10:25,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:10:26,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:26,753:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:26,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:27,140:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:27,153:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:27,174:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:30,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:30,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:30,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:30,125:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:30,174:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:30,184:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:31,107:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:31,170:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:31,608:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:32,340:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:32,426:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:32,629:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:37,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:37,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:37,803:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:37,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:37,821:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:37,953:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:39,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:39,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:39,090:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:39,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:39,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:39,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:39,640:INFO:Calculating mean and std
2024-11-25 17:10:39,640:INFO:Creating metrics dataframe
2024-11-25 17:10:39,657:INFO:Uploading results into container
2024-11-25 17:10:39,658:INFO:Uploading model into container now
2024-11-25 17:10:39,659:INFO:_master_model_container: 3
2024-11-25 17:10:39,659:INFO:_display_container: 2
2024-11-25 17:10:39,659:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-25 17:10:39,659:INFO:create_model() successfully completed......................................
2024-11-25 17:10:40,172:INFO:SubProcess create_model() end ==================================
2024-11-25 17:10:40,172:INFO:Creating metrics dataframe
2024-11-25 17:10:40,203:INFO:Initializing Decision Tree Classifier
2024-11-25 17:10:40,203:INFO:Total runtime is 1.1726060112317402 minutes
2024-11-25 17:10:40,219:INFO:SubProcess create_model() called ==================================
2024-11-25 17:10:40,219:INFO:Initializing create_model()
2024-11-25 17:10:40,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:10:40,219:INFO:Checking exceptions
2024-11-25 17:10:40,219:INFO:Importing libraries
2024-11-25 17:10:40,219:INFO:Copying training dataset
2024-11-25 17:10:40,300:INFO:Defining folds
2024-11-25 17:10:40,300:INFO:Declaring metric variables
2024-11-25 17:10:40,320:INFO:Importing untrained model
2024-11-25 17:10:40,328:INFO:Decision Tree Classifier Imported successfully
2024-11-25 17:10:40,366:INFO:Starting cross validation
2024-11-25 17:10:40,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:10:43,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:43,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:43,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:43,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:43,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:43,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:45,789:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:45,817:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:45,844:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:46,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:46,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:46,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:47,746:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:47,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:47,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:48,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:48,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:48,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:49,703:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:49,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:49,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:49,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:49,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:49,987:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:51,635:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:51,669:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:51,679:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:52,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:52,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:52,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:52,161:INFO:Calculating mean and std
2024-11-25 17:10:52,161:INFO:Creating metrics dataframe
2024-11-25 17:10:52,161:INFO:Uploading results into container
2024-11-25 17:10:52,161:INFO:Uploading model into container now
2024-11-25 17:10:52,161:INFO:_master_model_container: 4
2024-11-25 17:10:52,161:INFO:_display_container: 2
2024-11-25 17:10:52,161:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6405, splitter='best')
2024-11-25 17:10:52,161:INFO:create_model() successfully completed......................................
2024-11-25 17:10:52,442:INFO:SubProcess create_model() end ==================================
2024-11-25 17:10:52,443:INFO:Creating metrics dataframe
2024-11-25 17:10:52,443:INFO:Initializing SVM - Linear Kernel
2024-11-25 17:10:52,443:INFO:Total runtime is 1.3766044855117796 minutes
2024-11-25 17:10:52,459:INFO:SubProcess create_model() called ==================================
2024-11-25 17:10:52,474:INFO:Initializing create_model()
2024-11-25 17:10:52,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:10:52,474:INFO:Checking exceptions
2024-11-25 17:10:52,474:INFO:Importing libraries
2024-11-25 17:10:52,474:INFO:Copying training dataset
2024-11-25 17:10:52,538:INFO:Defining folds
2024-11-25 17:10:52,538:INFO:Declaring metric variables
2024-11-25 17:10:52,571:INFO:Importing untrained model
2024-11-25 17:10:52,575:INFO:SVM - Linear Kernel Imported successfully
2024-11-25 17:10:52,615:INFO:Starting cross validation
2024-11-25 17:10:52,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:10:57,555:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:57,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:57,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:10:57,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:57,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:57,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:10:57,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:00,588:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:00,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:00,624:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:11:00,629:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:00,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:00,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:00,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:11:01,003:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:03,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:03,737:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:03,737:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:11:03,755:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:04,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:04,265:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:04,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:11:04,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:06,330:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:06,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:06,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:11:06,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:06,833:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:06,833:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:06,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:11:06,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:10,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:10,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:10,157:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:11:10,263:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:12,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:12,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:12,841:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:11:12,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:12,864:INFO:Calculating mean and std
2024-11-25 17:11:12,889:INFO:Creating metrics dataframe
2024-11-25 17:11:12,896:INFO:Uploading results into container
2024-11-25 17:11:12,896:INFO:Uploading model into container now
2024-11-25 17:11:12,896:INFO:_master_model_container: 5
2024-11-25 17:11:12,896:INFO:_display_container: 2
2024-11-25 17:11:12,896:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6405, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-25 17:11:12,896:INFO:create_model() successfully completed......................................
2024-11-25 17:11:13,190:INFO:SubProcess create_model() end ==================================
2024-11-25 17:11:13,190:INFO:Creating metrics dataframe
2024-11-25 17:11:13,225:INFO:Initializing Ridge Classifier
2024-11-25 17:11:13,225:INFO:Total runtime is 1.7229686339696246 minutes
2024-11-25 17:11:13,240:INFO:SubProcess create_model() called ==================================
2024-11-25 17:11:13,240:INFO:Initializing create_model()
2024-11-25 17:11:13,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:11:13,240:INFO:Checking exceptions
2024-11-25 17:11:13,240:INFO:Importing libraries
2024-11-25 17:11:13,240:INFO:Copying training dataset
2024-11-25 17:11:13,301:INFO:Defining folds
2024-11-25 17:11:13,301:INFO:Declaring metric variables
2024-11-25 17:11:13,321:INFO:Importing untrained model
2024-11-25 17:11:13,333:INFO:Ridge Classifier Imported successfully
2024-11-25 17:11:13,374:INFO:Starting cross validation
2024-11-25 17:11:13,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:11:14,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:14,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:14,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:14,584:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:14,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:14,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:16,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:16,191:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:16,230:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:16,337:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:16,352:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:16,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:17,256:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:17,286:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:17,305:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:17,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:17,499:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:17,525:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:18,769:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:18,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:18,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:18,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:18,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:19,031:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:22,020:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:22,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:22,105:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:22,116:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:22,116:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:22,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:22,287:INFO:Calculating mean and std
2024-11-25 17:11:22,290:INFO:Creating metrics dataframe
2024-11-25 17:11:22,298:INFO:Uploading results into container
2024-11-25 17:11:22,298:INFO:Uploading model into container now
2024-11-25 17:11:22,298:INFO:_master_model_container: 6
2024-11-25 17:11:22,298:INFO:_display_container: 2
2024-11-25 17:11:22,298:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6405, solver='auto',
                tol=0.0001)
2024-11-25 17:11:22,298:INFO:create_model() successfully completed......................................
2024-11-25 17:11:22,990:INFO:SubProcess create_model() end ==================================
2024-11-25 17:11:22,990:INFO:Creating metrics dataframe
2024-11-25 17:11:23,003:INFO:Initializing Random Forest Classifier
2024-11-25 17:11:23,003:INFO:Total runtime is 1.8859352827072142 minutes
2024-11-25 17:11:23,003:INFO:SubProcess create_model() called ==================================
2024-11-25 17:11:23,003:INFO:Initializing create_model()
2024-11-25 17:11:23,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:11:23,003:INFO:Checking exceptions
2024-11-25 17:11:23,003:INFO:Importing libraries
2024-11-25 17:11:23,003:INFO:Copying training dataset
2024-11-25 17:11:23,076:INFO:Defining folds
2024-11-25 17:11:23,076:INFO:Declaring metric variables
2024-11-25 17:11:23,076:INFO:Importing untrained model
2024-11-25 17:11:23,106:INFO:Random Forest Classifier Imported successfully
2024-11-25 17:11:23,123:INFO:Starting cross validation
2024-11-25 17:11:23,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:11:53,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:53,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:53,783:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:55,170:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:55,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:11:55,395:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:12:32,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:12:33,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:12:33,236:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:12:36,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:12:36,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:12:36,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:16,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:16,081:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:16,143:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:20,271:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:20,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:20,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:34,921:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:35,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:35,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:35,308:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:35,326:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:35,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:46,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:46,227:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:46,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:46,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:46,499:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:46,517:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:46,577:INFO:Calculating mean and std
2024-11-25 17:13:46,608:INFO:Creating metrics dataframe
2024-11-25 17:13:46,608:INFO:Uploading results into container
2024-11-25 17:13:46,608:INFO:Uploading model into container now
2024-11-25 17:13:46,608:INFO:_master_model_container: 7
2024-11-25 17:13:46,608:INFO:_display_container: 2
2024-11-25 17:13:46,608:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6405, verbose=0,
                       warm_start=False)
2024-11-25 17:13:46,608:INFO:create_model() successfully completed......................................
2024-11-25 17:13:46,956:INFO:SubProcess create_model() end ==================================
2024-11-25 17:13:46,956:INFO:Creating metrics dataframe
2024-11-25 17:13:47,009:INFO:Initializing Quadratic Discriminant Analysis
2024-11-25 17:13:47,010:INFO:Total runtime is 4.2860536257425945 minutes
2024-11-25 17:13:47,028:INFO:SubProcess create_model() called ==================================
2024-11-25 17:13:47,028:INFO:Initializing create_model()
2024-11-25 17:13:47,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:13:47,028:INFO:Checking exceptions
2024-11-25 17:13:47,028:INFO:Importing libraries
2024-11-25 17:13:47,028:INFO:Copying training dataset
2024-11-25 17:13:47,122:INFO:Defining folds
2024-11-25 17:13:47,122:INFO:Declaring metric variables
2024-11-25 17:13:47,122:INFO:Importing untrained model
2024-11-25 17:13:47,145:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-25 17:13:47,183:INFO:Starting cross validation
2024-11-25 17:13:47,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:13:48,851:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:48,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:49,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:49,634:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:50,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:50,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:50,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:50,347:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:51,867:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:52,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:52,097:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:52,162:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:52,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:52,377:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:52,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:52,456:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:53,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:53,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:53,402:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:53,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:53,445:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:53,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:53,623:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:53,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:54,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:54,630:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:55,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:55,134:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:55,207:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:55,333:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:55,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:55,390:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:56,744:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:56,826:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 17:13:57,496:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:57,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:57,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:57,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:57,655:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:57,684:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:13:57,726:INFO:Calculating mean and std
2024-11-25 17:13:57,740:INFO:Creating metrics dataframe
2024-11-25 17:13:57,749:INFO:Uploading results into container
2024-11-25 17:13:57,754:INFO:Uploading model into container now
2024-11-25 17:13:57,755:INFO:_master_model_container: 8
2024-11-25 17:13:57,755:INFO:_display_container: 2
2024-11-25 17:13:57,759:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-25 17:13:57,759:INFO:create_model() successfully completed......................................
2024-11-25 17:13:58,226:INFO:SubProcess create_model() end ==================================
2024-11-25 17:13:58,226:INFO:Creating metrics dataframe
2024-11-25 17:13:58,251:INFO:Initializing Ada Boost Classifier
2024-11-25 17:13:58,251:INFO:Total runtime is 4.473405321439107 minutes
2024-11-25 17:13:58,258:INFO:SubProcess create_model() called ==================================
2024-11-25 17:13:58,258:INFO:Initializing create_model()
2024-11-25 17:13:58,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:13:58,258:INFO:Checking exceptions
2024-11-25 17:13:58,258:INFO:Importing libraries
2024-11-25 17:13:58,258:INFO:Copying training dataset
2024-11-25 17:13:58,347:INFO:Defining folds
2024-11-25 17:13:58,347:INFO:Declaring metric variables
2024-11-25 17:13:58,355:INFO:Importing untrained model
2024-11-25 17:13:58,367:INFO:Ada Boost Classifier Imported successfully
2024-11-25 17:13:58,411:INFO:Starting cross validation
2024-11-25 17:13:58,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:13:59,321:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:13:59,331:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:05,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:05,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:05,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:05,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:05,431:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:05,444:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:06,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:06,300:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:09,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:09,624:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:09,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:09,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:09,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:09,767:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:10,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:10,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:14,900:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:14,943:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:14,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:15,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:15,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:15,050:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:15,746:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:15,911:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:19,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:19,796:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:19,820:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:19,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:19,850:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:19,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:20,442:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:20,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 17:14:26,865:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:26,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:26,959:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:26,973:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:27,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:27,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:27,061:INFO:Calculating mean and std
2024-11-25 17:14:27,065:INFO:Creating metrics dataframe
2024-11-25 17:14:27,071:INFO:Uploading results into container
2024-11-25 17:14:27,076:INFO:Uploading model into container now
2024-11-25 17:14:27,076:INFO:_master_model_container: 9
2024-11-25 17:14:27,076:INFO:_display_container: 2
2024-11-25 17:14:27,076:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6405)
2024-11-25 17:14:27,174:INFO:create_model() successfully completed......................................
2024-11-25 17:14:27,624:INFO:SubProcess create_model() end ==================================
2024-11-25 17:14:27,624:INFO:Creating metrics dataframe
2024-11-25 17:14:27,648:INFO:Initializing Gradient Boosting Classifier
2024-11-25 17:14:27,648:INFO:Total runtime is 4.96335457166036 minutes
2024-11-25 17:14:27,656:INFO:SubProcess create_model() called ==================================
2024-11-25 17:14:27,656:INFO:Initializing create_model()
2024-11-25 17:14:27,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:14:27,656:INFO:Checking exceptions
2024-11-25 17:14:27,656:INFO:Importing libraries
2024-11-25 17:14:27,658:INFO:Copying training dataset
2024-11-25 17:14:27,717:INFO:Defining folds
2024-11-25 17:14:27,717:INFO:Declaring metric variables
2024-11-25 17:14:27,747:INFO:Importing untrained model
2024-11-25 17:14:27,777:INFO:Gradient Boosting Classifier Imported successfully
2024-11-25 17:14:27,800:INFO:Starting cross validation
2024-11-25 17:14:27,811:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:14:42,310:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:42,367:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:42,420:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:42,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:42,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:42,686:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:55,376:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:55,413:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:55,440:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:55,886:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:55,899:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:14:55,927:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:09,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:09,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:09,499:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:10,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:10,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:10,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:22,198:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:22,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:22,254:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:22,847:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:22,904:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:22,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:34,330:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:34,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:34,417:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:35,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:35,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:35,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:35,159:INFO:Calculating mean and std
2024-11-25 17:15:35,159:INFO:Creating metrics dataframe
2024-11-25 17:15:35,201:INFO:Uploading results into container
2024-11-25 17:15:35,203:INFO:Uploading model into container now
2024-11-25 17:15:35,203:INFO:_master_model_container: 10
2024-11-25 17:15:35,203:INFO:_display_container: 2
2024-11-25 17:15:35,204:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6405, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-25 17:15:35,205:INFO:create_model() successfully completed......................................
2024-11-25 17:15:35,479:INFO:SubProcess create_model() end ==================================
2024-11-25 17:15:35,479:INFO:Creating metrics dataframe
2024-11-25 17:15:35,500:INFO:Initializing Linear Discriminant Analysis
2024-11-25 17:15:35,500:INFO:Total runtime is 6.094215126832326 minutes
2024-11-25 17:15:35,500:INFO:SubProcess create_model() called ==================================
2024-11-25 17:15:35,526:INFO:Initializing create_model()
2024-11-25 17:15:35,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:15:35,527:INFO:Checking exceptions
2024-11-25 17:15:35,527:INFO:Importing libraries
2024-11-25 17:15:35,528:INFO:Copying training dataset
2024-11-25 17:15:35,582:INFO:Defining folds
2024-11-25 17:15:35,582:INFO:Declaring metric variables
2024-11-25 17:15:35,582:INFO:Importing untrained model
2024-11-25 17:15:35,593:INFO:Linear Discriminant Analysis Imported successfully
2024-11-25 17:15:35,625:INFO:Starting cross validation
2024-11-25 17:15:35,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:15:37,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:37,162:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:37,240:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:37,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:37,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:37,442:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:39,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:39,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:39,792:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:39,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:39,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:39,918:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:41,210:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:41,236:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:41,279:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:41,279:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:41,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:41,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:42,836:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:42,836:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:42,854:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:42,854:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:42,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:42,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:44,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:44,087:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:44,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:44,122:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:44,132:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:44,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:44,202:INFO:Calculating mean and std
2024-11-25 17:15:44,203:INFO:Creating metrics dataframe
2024-11-25 17:15:44,220:INFO:Uploading results into container
2024-11-25 17:15:44,220:INFO:Uploading model into container now
2024-11-25 17:15:44,220:INFO:_master_model_container: 11
2024-11-25 17:15:44,220:INFO:_display_container: 2
2024-11-25 17:15:44,220:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-25 17:15:44,220:INFO:create_model() successfully completed......................................
2024-11-25 17:15:44,548:INFO:SubProcess create_model() end ==================================
2024-11-25 17:15:44,548:INFO:Creating metrics dataframe
2024-11-25 17:15:44,589:INFO:Initializing Extra Trees Classifier
2024-11-25 17:15:44,589:INFO:Total runtime is 6.2457069198290505 minutes
2024-11-25 17:15:44,589:INFO:SubProcess create_model() called ==================================
2024-11-25 17:15:44,589:INFO:Initializing create_model()
2024-11-25 17:15:44,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:15:44,589:INFO:Checking exceptions
2024-11-25 17:15:44,589:INFO:Importing libraries
2024-11-25 17:15:44,589:INFO:Copying training dataset
2024-11-25 17:15:44,652:INFO:Defining folds
2024-11-25 17:15:44,652:INFO:Declaring metric variables
2024-11-25 17:15:44,692:INFO:Importing untrained model
2024-11-25 17:15:44,700:INFO:Extra Trees Classifier Imported successfully
2024-11-25 17:15:44,728:INFO:Starting cross validation
2024-11-25 17:15:44,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:15:56,621:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:56,632:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:56,632:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:56,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:56,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:15:56,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:06,500:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:06,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:06,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:06,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:06,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:07,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:17,874:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:17,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:17,957:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:18,689:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:18,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:18,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:29,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:29,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:29,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:30,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:30,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:30,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:39,996:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:40,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:40,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:40,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:40,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:40,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:40,420:INFO:Calculating mean and std
2024-11-25 17:16:40,472:INFO:Creating metrics dataframe
2024-11-25 17:16:40,485:INFO:Uploading results into container
2024-11-25 17:16:40,486:INFO:Uploading model into container now
2024-11-25 17:16:40,488:INFO:_master_model_container: 12
2024-11-25 17:16:40,488:INFO:_display_container: 2
2024-11-25 17:16:40,489:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6405, verbose=0,
                     warm_start=False)
2024-11-25 17:16:40,490:INFO:create_model() successfully completed......................................
2024-11-25 17:16:40,792:INFO:SubProcess create_model() end ==================================
2024-11-25 17:16:40,792:INFO:Creating metrics dataframe
2024-11-25 17:16:40,839:INFO:Initializing Light Gradient Boosting Machine
2024-11-25 17:16:40,839:INFO:Total runtime is 7.183201158046722 minutes
2024-11-25 17:16:40,870:INFO:SubProcess create_model() called ==================================
2024-11-25 17:16:40,870:INFO:Initializing create_model()
2024-11-25 17:16:40,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:16:40,870:INFO:Checking exceptions
2024-11-25 17:16:40,870:INFO:Importing libraries
2024-11-25 17:16:40,870:INFO:Copying training dataset
2024-11-25 17:16:40,979:INFO:Defining folds
2024-11-25 17:16:40,979:INFO:Declaring metric variables
2024-11-25 17:16:41,011:INFO:Importing untrained model
2024-11-25 17:16:41,047:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-25 17:16:41,087:INFO:Starting cross validation
2024-11-25 17:16:41,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:16:44,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:44,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:44,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:44,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:44,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:44,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:47,088:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:47,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:47,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:47,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:47,123:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:47,139:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:49,014:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:49,014:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:49,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:49,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:49,050:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:49,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:50,855:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:50,891:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:50,906:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:50,918:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:50,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:50,956:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:53,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:53,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:53,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:53,911:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:53,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:53,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:54,039:INFO:Calculating mean and std
2024-11-25 17:16:54,039:INFO:Creating metrics dataframe
2024-11-25 17:16:54,061:INFO:Uploading results into container
2024-11-25 17:16:54,062:INFO:Uploading model into container now
2024-11-25 17:16:54,063:INFO:_master_model_container: 13
2024-11-25 17:16:54,064:INFO:_display_container: 2
2024-11-25 17:16:54,066:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6405, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-25 17:16:54,066:INFO:create_model() successfully completed......................................
2024-11-25 17:16:54,363:INFO:SubProcess create_model() end ==================================
2024-11-25 17:16:54,363:INFO:Creating metrics dataframe
2024-11-25 17:16:54,406:INFO:Initializing Dummy Classifier
2024-11-25 17:16:54,406:INFO:Total runtime is 7.4093226313591 minutes
2024-11-25 17:16:54,412:INFO:SubProcess create_model() called ==================================
2024-11-25 17:16:54,412:INFO:Initializing create_model()
2024-11-25 17:16:54,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E1D5E9590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:16:54,412:INFO:Checking exceptions
2024-11-25 17:16:54,412:INFO:Importing libraries
2024-11-25 17:16:54,412:INFO:Copying training dataset
2024-11-25 17:16:54,459:INFO:Defining folds
2024-11-25 17:16:54,459:INFO:Declaring metric variables
2024-11-25 17:16:54,490:INFO:Importing untrained model
2024-11-25 17:16:54,506:INFO:Dummy Classifier Imported successfully
2024-11-25 17:16:54,547:INFO:Starting cross validation
2024-11-25 17:16:54,553:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 17:16:56,364:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:56,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:56,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:56,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:16:56,520:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:56,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:56,576:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:16:56,594:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:58,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:58,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:58,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:16:58,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:58,842:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:58,874:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:58,888:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:16:58,923:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:59,816:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:59,880:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:59,880:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:59,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:16:59,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:59,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:16:59,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:16:59,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:01,156:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:01,189:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:01,193:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:01,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:17:01,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:01,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:01,227:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:17:01,237:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:02,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:02,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:02,141:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:17:02,163:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:02,163:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:02,206:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:02,230:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 17:17:02,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 17:17:02,303:INFO:Calculating mean and std
2024-11-25 17:17:02,303:INFO:Creating metrics dataframe
2024-11-25 17:17:02,332:INFO:Uploading results into container
2024-11-25 17:17:02,332:INFO:Uploading model into container now
2024-11-25 17:17:02,332:INFO:_master_model_container: 14
2024-11-25 17:17:02,332:INFO:_display_container: 2
2024-11-25 17:17:02,332:INFO:DummyClassifier(constant=None, random_state=6405, strategy='prior')
2024-11-25 17:17:02,332:INFO:create_model() successfully completed......................................
2024-11-25 17:17:02,701:INFO:SubProcess create_model() end ==================================
2024-11-25 17:17:02,701:INFO:Creating metrics dataframe
2024-11-25 17:17:02,800:INFO:Initializing create_model()
2024-11-25 17:17:02,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6405, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 17:17:02,805:INFO:Checking exceptions
2024-11-25 17:17:02,809:INFO:Importing libraries
2024-11-25 17:17:02,810:INFO:Copying training dataset
2024-11-25 17:17:02,853:INFO:Defining folds
2024-11-25 17:17:02,853:INFO:Declaring metric variables
2024-11-25 17:17:02,853:INFO:Importing untrained model
2024-11-25 17:17:02,854:INFO:Declaring custom model
2024-11-25 17:17:02,854:INFO:Ridge Classifier Imported successfully
2024-11-25 17:17:02,861:INFO:Cross validation set to False
2024-11-25 17:17:02,861:INFO:Fitting Model
2024-11-25 17:17:03,562:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6405, solver='auto',
                tol=0.0001)
2024-11-25 17:17:03,562:INFO:create_model() successfully completed......................................
2024-11-25 17:17:03,914:INFO:_master_model_container: 14
2024-11-25 17:17:03,914:INFO:_display_container: 2
2024-11-25 17:17:03,915:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6405, solver='auto',
                tol=0.0001)
2024-11-25 17:17:03,915:INFO:compare_models() successfully completed......................................
2024-11-25 17:17:05,347:INFO:Initializing predict_model()
2024-11-25 17:17:05,347:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6405, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E15240F40>)
2024-11-25 17:17:05,347:INFO:Checking exceptions
2024-11-25 17:17:05,347:INFO:Preloading libraries
2024-11-25 17:17:05,347:INFO:Set up data.
2024-11-25 17:17:05,456:INFO:Set up index.
2024-11-25 17:17:07,735:INFO:Initializing plot_model()
2024-11-25 17:17:07,735:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6405, solver='auto',
                tol=0.0001), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-25 17:17:07,735:INFO:Checking exceptions
2024-11-25 17:17:07,782:INFO:Preloading libraries
2024-11-25 17:17:07,782:INFO:Copying training dataset
2024-11-25 17:17:07,782:INFO:Plot type: feature
2024-11-25 17:17:08,674:INFO:Visual Rendered Successfully
2024-11-25 17:17:08,954:INFO:plot_model() successfully completed......................................
2024-11-25 17:17:08,981:INFO:Initializing plot_model()
2024-11-25 17:17:08,981:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E21951310>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6405, solver='auto',
                tol=0.0001), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-25 17:17:08,981:INFO:Checking exceptions
2024-11-25 20:25:11,093:INFO:PyCaret ClassificationExperiment
2024-11-25 20:25:11,093:INFO:Logging name: clf-default-name
2024-11-25 20:25:11,093:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 20:25:11,093:INFO:version 3.3.2
2024-11-25 20:25:11,093:INFO:Initializing setup()
2024-11-25 20:25:11,093:INFO:self.USI: 34a2
2024-11-25 20:25:11,093:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 20:25:11,093:INFO:Checking environment
2024-11-25 20:25:11,093:INFO:python_version: 3.11.9
2024-11-25 20:25:11,093:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 20:25:11,093:INFO:machine: AMD64
2024-11-25 20:25:11,093:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 20:25:11,236:INFO:Memory: svmem(total=4293971968, available=790405120, percent=81.6, used=3503566848, free=790405120)
2024-11-25 20:25:11,236:INFO:Physical Core: 2
2024-11-25 20:25:11,236:INFO:Logical Core: 2
2024-11-25 20:25:11,236:INFO:Checking libraries
2024-11-25 20:25:11,236:INFO:System:
2024-11-25 20:25:11,236:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 20:25:11,236:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 20:25:11,236:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 20:25:11,236:INFO:PyCaret required dependencies:
2024-11-25 20:25:11,236:INFO:                 pip: 24.3.1
2024-11-25 20:25:11,236:INFO:          setuptools: 65.5.0
2024-11-25 20:25:11,236:INFO:             pycaret: 3.3.2
2024-11-25 20:25:11,236:INFO:             IPython: 8.26.0
2024-11-25 20:25:11,236:INFO:          ipywidgets: 8.1.5
2024-11-25 20:25:11,236:INFO:                tqdm: 4.66.5
2024-11-25 20:25:11,236:INFO:               numpy: 1.26.4
2024-11-25 20:25:11,236:INFO:              pandas: 2.1.4
2024-11-25 20:25:11,236:INFO:              jinja2: 3.1.4
2024-11-25 20:25:11,236:INFO:               scipy: 1.11.4
2024-11-25 20:25:11,236:INFO:              joblib: 1.3.2
2024-11-25 20:25:11,236:INFO:             sklearn: 1.4.2
2024-11-25 20:25:11,236:INFO:                pyod: 2.0.2
2024-11-25 20:25:11,236:INFO:            imblearn: 0.12.4
2024-11-25 20:25:11,236:INFO:   category_encoders: 2.6.4
2024-11-25 20:25:11,236:INFO:            lightgbm: 4.5.0
2024-11-25 20:25:11,236:INFO:               numba: 0.60.0
2024-11-25 20:25:11,236:INFO:            requests: 2.32.3
2024-11-25 20:25:11,236:INFO:          matplotlib: 3.7.5
2024-11-25 20:25:11,236:INFO:          scikitplot: 0.3.7
2024-11-25 20:25:11,236:INFO:         yellowbrick: 1.5
2024-11-25 20:25:11,236:INFO:              plotly: 5.24.1
2024-11-25 20:25:11,236:INFO:    plotly-resampler: Not installed
2024-11-25 20:25:11,236:INFO:             kaleido: 0.2.1
2024-11-25 20:25:11,236:INFO:           schemdraw: 0.15
2024-11-25 20:25:11,236:INFO:         statsmodels: 0.14.3
2024-11-25 20:25:11,236:INFO:              sktime: 0.26.0
2024-11-25 20:25:11,236:INFO:               tbats: 1.1.3
2024-11-25 20:25:11,236:INFO:            pmdarima: 2.0.4
2024-11-25 20:25:11,236:INFO:              psutil: 6.0.0
2024-11-25 20:25:11,236:INFO:          markupsafe: 3.0.2
2024-11-25 20:25:11,236:INFO:             pickle5: Not installed
2024-11-25 20:25:11,236:INFO:         cloudpickle: 3.0.0
2024-11-25 20:25:11,236:INFO:         deprecation: 2.1.0
2024-11-25 20:25:11,236:INFO:              xxhash: 3.5.0
2024-11-25 20:25:11,236:INFO:           wurlitzer: Not installed
2024-11-25 20:25:11,236:INFO:PyCaret optional dependencies:
2024-11-25 20:25:11,236:INFO:                shap: 0.46.0
2024-11-25 20:25:11,236:INFO:           interpret: Not installed
2024-11-25 20:25:11,236:INFO:                umap: Not installed
2024-11-25 20:25:11,236:INFO:     ydata_profiling: Not installed
2024-11-25 20:25:11,236:INFO:  explainerdashboard: Not installed
2024-11-25 20:25:11,236:INFO:             autoviz: Not installed
2024-11-25 20:25:11,236:INFO:           fairlearn: Not installed
2024-11-25 20:25:11,236:INFO:          deepchecks: Not installed
2024-11-25 20:25:11,236:INFO:             xgboost: Not installed
2024-11-25 20:25:11,236:INFO:            catboost: Not installed
2024-11-25 20:25:11,236:INFO:              kmodes: Not installed
2024-11-25 20:25:11,236:INFO:             mlxtend: Not installed
2024-11-25 20:25:11,236:INFO:       statsforecast: Not installed
2024-11-25 20:25:11,236:INFO:        tune_sklearn: Not installed
2024-11-25 20:25:11,236:INFO:                 ray: Not installed
2024-11-25 20:25:11,236:INFO:            hyperopt: Not installed
2024-11-25 20:25:11,236:INFO:              optuna: 4.1.0
2024-11-25 20:25:11,236:INFO:               skopt: Not installed
2024-11-25 20:25:11,236:INFO:              mlflow: Not installed
2024-11-25 20:25:11,236:INFO:              gradio: Not installed
2024-11-25 20:25:11,236:INFO:             fastapi: Not installed
2024-11-25 20:25:11,236:INFO:             uvicorn: Not installed
2024-11-25 20:25:11,236:INFO:              m2cgen: Not installed
2024-11-25 20:25:11,236:INFO:           evidently: Not installed
2024-11-25 20:25:11,236:INFO:               fugue: Not installed
2024-11-25 20:25:11,236:INFO:           streamlit: Not installed
2024-11-25 20:25:11,236:INFO:             prophet: Not installed
2024-11-25 20:25:11,236:INFO:None
2024-11-25 20:25:11,236:INFO:Set up data.
2024-11-25 20:25:12,043:INFO:Set up folding strategy.
2024-11-25 20:25:12,043:INFO:Set up train/test split.
2024-11-25 20:25:12,533:INFO:Set up index.
2024-11-25 20:25:12,545:INFO:Assigning column types.
2024-11-25 20:25:12,608:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-25 20:25:12,733:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 20:25:12,733:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 20:25:12,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:12,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:13,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 20:25:13,295:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 20:25:13,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:13,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:13,811:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-25 20:25:14,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 20:25:14,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:14,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:14,389:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 20:25:14,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:14,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:14,514:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-25 20:25:14,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:14,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:15,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:15,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:15,092:INFO:Preparing preprocessing pipeline...
2024-11-25 20:25:15,108:INFO:Set up label encoding.
2024-11-25 20:25:15,108:INFO:Set up date feature engineering.
2024-11-25 20:25:15,108:INFO:Set up simple imputation.
2024-11-25 20:25:15,140:INFO:Set up encoding of ordinal features.
2024-11-25 20:25:15,155:INFO:Set up encoding of categorical features.
2024-11-25 20:25:16,108:INFO:Finished creating preprocessing pipeline.
2024-11-25 20:25:16,171:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-25 20:25:16,171:INFO:Creating final display dataframe.
2024-11-25 20:25:17,808:INFO:Setup _display_container:                     Description             Value
0                    Session id              3727
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              34a2
2024-11-25 20:25:18,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:18,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:18,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:18,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:25:18,218:INFO:setup() successfully completed in 7.31s...............
2024-11-25 20:25:18,218:INFO:Initializing compare_models()
2024-11-25 20:25:18,218:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1A665450>, include=F1, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1A665450>, 'include': 'F1', 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-25 20:25:18,237:INFO:Checking exceptions
2024-11-25 20:55:16,998:INFO:PyCaret ClassificationExperiment
2024-11-25 20:55:16,999:INFO:Logging name: clf-default-name
2024-11-25 20:55:17,004:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 20:55:17,004:INFO:version 3.3.2
2024-11-25 20:55:17,004:INFO:Initializing setup()
2024-11-25 20:55:17,004:INFO:self.USI: 8716
2024-11-25 20:55:17,004:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 20:55:17,004:INFO:Checking environment
2024-11-25 20:55:17,004:INFO:python_version: 3.11.9
2024-11-25 20:55:17,004:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 20:55:17,004:INFO:machine: AMD64
2024-11-25 20:55:17,004:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 20:55:17,004:INFO:Memory: svmem(total=4293971968, available=694378496, percent=83.8, used=3599593472, free=694378496)
2024-11-25 20:55:17,004:INFO:Physical Core: 2
2024-11-25 20:55:17,004:INFO:Logical Core: 2
2024-11-25 20:55:17,004:INFO:Checking libraries
2024-11-25 20:55:17,004:INFO:System:
2024-11-25 20:55:17,004:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 20:55:17,004:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 20:55:17,004:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 20:55:17,004:INFO:PyCaret required dependencies:
2024-11-25 20:55:17,004:INFO:                 pip: 24.3.1
2024-11-25 20:55:17,004:INFO:          setuptools: 65.5.0
2024-11-25 20:55:17,004:INFO:             pycaret: 3.3.2
2024-11-25 20:55:17,004:INFO:             IPython: 8.26.0
2024-11-25 20:55:17,004:INFO:          ipywidgets: 8.1.5
2024-11-25 20:55:17,004:INFO:                tqdm: 4.66.5
2024-11-25 20:55:17,004:INFO:               numpy: 1.26.4
2024-11-25 20:55:17,004:INFO:              pandas: 2.1.4
2024-11-25 20:55:17,004:INFO:              jinja2: 3.1.4
2024-11-25 20:55:17,004:INFO:               scipy: 1.11.4
2024-11-25 20:55:17,004:INFO:              joblib: 1.3.2
2024-11-25 20:55:17,004:INFO:             sklearn: 1.4.2
2024-11-25 20:55:17,004:INFO:                pyod: 2.0.2
2024-11-25 20:55:17,004:INFO:            imblearn: 0.12.4
2024-11-25 20:55:17,004:INFO:   category_encoders: 2.6.4
2024-11-25 20:55:17,020:INFO:            lightgbm: 4.5.0
2024-11-25 20:55:17,020:INFO:               numba: 0.60.0
2024-11-25 20:55:17,020:INFO:            requests: 2.32.3
2024-11-25 20:55:17,020:INFO:          matplotlib: 3.7.5
2024-11-25 20:55:17,020:INFO:          scikitplot: 0.3.7
2024-11-25 20:55:17,020:INFO:         yellowbrick: 1.5
2024-11-25 20:55:17,020:INFO:              plotly: 5.24.1
2024-11-25 20:55:17,020:INFO:    plotly-resampler: Not installed
2024-11-25 20:55:17,020:INFO:             kaleido: 0.2.1
2024-11-25 20:55:17,020:INFO:           schemdraw: 0.15
2024-11-25 20:55:17,023:INFO:         statsmodels: 0.14.3
2024-11-25 20:55:17,023:INFO:              sktime: 0.26.0
2024-11-25 20:55:17,023:INFO:               tbats: 1.1.3
2024-11-25 20:55:17,023:INFO:            pmdarima: 2.0.4
2024-11-25 20:55:17,023:INFO:              psutil: 6.0.0
2024-11-25 20:55:17,023:INFO:          markupsafe: 3.0.2
2024-11-25 20:55:17,023:INFO:             pickle5: Not installed
2024-11-25 20:55:17,023:INFO:         cloudpickle: 3.0.0
2024-11-25 20:55:17,023:INFO:         deprecation: 2.1.0
2024-11-25 20:55:17,023:INFO:              xxhash: 3.5.0
2024-11-25 20:55:17,023:INFO:           wurlitzer: Not installed
2024-11-25 20:55:17,023:INFO:PyCaret optional dependencies:
2024-11-25 20:55:17,023:INFO:                shap: 0.46.0
2024-11-25 20:55:17,023:INFO:           interpret: Not installed
2024-11-25 20:55:17,023:INFO:                umap: Not installed
2024-11-25 20:55:17,023:INFO:     ydata_profiling: Not installed
2024-11-25 20:55:17,023:INFO:  explainerdashboard: Not installed
2024-11-25 20:55:17,023:INFO:             autoviz: Not installed
2024-11-25 20:55:17,023:INFO:           fairlearn: Not installed
2024-11-25 20:55:17,023:INFO:          deepchecks: Not installed
2024-11-25 20:55:17,023:INFO:             xgboost: Not installed
2024-11-25 20:55:17,023:INFO:            catboost: Not installed
2024-11-25 20:55:17,023:INFO:              kmodes: Not installed
2024-11-25 20:55:17,023:INFO:             mlxtend: Not installed
2024-11-25 20:55:17,023:INFO:       statsforecast: Not installed
2024-11-25 20:55:17,023:INFO:        tune_sklearn: Not installed
2024-11-25 20:55:17,023:INFO:                 ray: Not installed
2024-11-25 20:55:17,023:INFO:            hyperopt: Not installed
2024-11-25 20:55:17,023:INFO:              optuna: 4.1.0
2024-11-25 20:55:17,023:INFO:               skopt: Not installed
2024-11-25 20:55:17,023:INFO:              mlflow: Not installed
2024-11-25 20:55:17,023:INFO:              gradio: Not installed
2024-11-25 20:55:17,023:INFO:             fastapi: Not installed
2024-11-25 20:55:17,023:INFO:             uvicorn: Not installed
2024-11-25 20:55:17,023:INFO:              m2cgen: Not installed
2024-11-25 20:55:17,023:INFO:           evidently: Not installed
2024-11-25 20:55:17,023:INFO:               fugue: Not installed
2024-11-25 20:55:17,023:INFO:           streamlit: Not installed
2024-11-25 20:55:17,023:INFO:             prophet: Not installed
2024-11-25 20:55:17,023:INFO:None
2024-11-25 20:55:17,023:INFO:Set up data.
2024-11-25 20:55:17,207:INFO:Set up folding strategy.
2024-11-25 20:55:17,207:INFO:Set up train/test split.
2024-11-25 20:55:17,373:INFO:Set up index.
2024-11-25 20:55:17,373:INFO:Assigning column types.
2024-11-25 20:55:17,468:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-25 20:55:17,589:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 20:55:17,598:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 20:55:17,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:17,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:17,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 20:55:17,804:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 20:55:17,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:17,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:17,833:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-25 20:55:17,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 20:55:17,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:17,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:18,021:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 20:55:18,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:18,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:18,069:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-25 20:55:18,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:18,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:18,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:18,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:18,567:INFO:Preparing preprocessing pipeline...
2024-11-25 20:55:18,583:INFO:Set up label encoding.
2024-11-25 20:55:18,583:INFO:Set up date feature engineering.
2024-11-25 20:55:18,583:INFO:Set up simple imputation.
2024-11-25 20:55:18,614:INFO:Set up encoding of ordinal features.
2024-11-25 20:55:18,646:INFO:Set up encoding of categorical features.
2024-11-25 20:55:20,208:INFO:Finished creating preprocessing pipeline.
2024-11-25 20:55:20,239:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-25 20:55:20,239:INFO:Creating final display dataframe.
2024-11-25 20:55:21,692:INFO:Setup _display_container:                     Description             Value
0                    Session id              5802
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              8716
2024-11-25 20:55:21,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:21,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:22,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:22,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 20:55:22,167:INFO:setup() successfully completed in 5.19s...............
2024-11-25 20:55:22,167:INFO:Initializing automl()
2024-11-25 20:55:22,167:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E231E2DD0>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-25 20:55:22,177:INFO:Model Selection Basis : CV Results on Training set
2024-11-25 20:55:22,192:INFO:Initializing create_model()
2024-11-25 20:55:22,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E231E2DD0>, estimator=None, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 20:55:22,192:INFO:Checking exceptions
2024-11-25 21:04:28,307:INFO:PyCaret ClassificationExperiment
2024-11-25 21:04:28,307:INFO:Logging name: clf-default-name
2024-11-25 21:04:28,307:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 21:04:28,307:INFO:version 3.3.2
2024-11-25 21:04:28,307:INFO:Initializing setup()
2024-11-25 21:04:28,307:INFO:self.USI: a1f2
2024-11-25 21:04:28,307:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 21:04:28,322:INFO:Checking environment
2024-11-25 21:04:28,322:INFO:python_version: 3.11.9
2024-11-25 21:04:28,322:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 21:04:28,322:INFO:machine: AMD64
2024-11-25 21:04:28,322:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 21:04:28,329:INFO:Memory: svmem(total=4293971968, available=595570688, percent=86.1, used=3698401280, free=595570688)
2024-11-25 21:04:28,329:INFO:Physical Core: 2
2024-11-25 21:04:28,329:INFO:Logical Core: 2
2024-11-25 21:04:28,330:INFO:Checking libraries
2024-11-25 21:04:28,330:INFO:System:
2024-11-25 21:04:28,330:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 21:04:28,330:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 21:04:28,330:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 21:04:28,330:INFO:PyCaret required dependencies:
2024-11-25 21:04:28,330:INFO:                 pip: 24.3.1
2024-11-25 21:04:28,330:INFO:          setuptools: 65.5.0
2024-11-25 21:04:28,331:INFO:             pycaret: 3.3.2
2024-11-25 21:04:28,331:INFO:             IPython: 8.26.0
2024-11-25 21:04:28,331:INFO:          ipywidgets: 8.1.5
2024-11-25 21:04:28,331:INFO:                tqdm: 4.66.5
2024-11-25 21:04:28,331:INFO:               numpy: 1.26.4
2024-11-25 21:04:28,331:INFO:              pandas: 2.1.4
2024-11-25 21:04:28,331:INFO:              jinja2: 3.1.4
2024-11-25 21:04:28,331:INFO:               scipy: 1.11.4
2024-11-25 21:04:28,331:INFO:              joblib: 1.3.2
2024-11-25 21:04:28,331:INFO:             sklearn: 1.4.2
2024-11-25 21:04:28,331:INFO:                pyod: 2.0.2
2024-11-25 21:04:28,331:INFO:            imblearn: 0.12.4
2024-11-25 21:04:28,331:INFO:   category_encoders: 2.6.4
2024-11-25 21:04:28,331:INFO:            lightgbm: 4.5.0
2024-11-25 21:04:28,331:INFO:               numba: 0.60.0
2024-11-25 21:04:28,331:INFO:            requests: 2.32.3
2024-11-25 21:04:28,331:INFO:          matplotlib: 3.7.5
2024-11-25 21:04:28,331:INFO:          scikitplot: 0.3.7
2024-11-25 21:04:28,332:INFO:         yellowbrick: 1.5
2024-11-25 21:04:28,332:INFO:              plotly: 5.24.1
2024-11-25 21:04:28,332:INFO:    plotly-resampler: Not installed
2024-11-25 21:04:28,332:INFO:             kaleido: 0.2.1
2024-11-25 21:04:28,332:INFO:           schemdraw: 0.15
2024-11-25 21:04:28,332:INFO:         statsmodels: 0.14.3
2024-11-25 21:04:28,332:INFO:              sktime: 0.26.0
2024-11-25 21:04:28,332:INFO:               tbats: 1.1.3
2024-11-25 21:04:28,332:INFO:            pmdarima: 2.0.4
2024-11-25 21:04:28,332:INFO:              psutil: 6.0.0
2024-11-25 21:04:28,332:INFO:          markupsafe: 3.0.2
2024-11-25 21:04:28,332:INFO:             pickle5: Not installed
2024-11-25 21:04:28,332:INFO:         cloudpickle: 3.0.0
2024-11-25 21:04:28,332:INFO:         deprecation: 2.1.0
2024-11-25 21:04:28,332:INFO:              xxhash: 3.5.0
2024-11-25 21:04:28,348:INFO:           wurlitzer: Not installed
2024-11-25 21:04:28,348:INFO:PyCaret optional dependencies:
2024-11-25 21:04:28,348:INFO:                shap: 0.46.0
2024-11-25 21:04:28,348:INFO:           interpret: Not installed
2024-11-25 21:04:28,348:INFO:                umap: Not installed
2024-11-25 21:04:28,348:INFO:     ydata_profiling: Not installed
2024-11-25 21:04:28,348:INFO:  explainerdashboard: Not installed
2024-11-25 21:04:28,348:INFO:             autoviz: Not installed
2024-11-25 21:04:28,348:INFO:           fairlearn: Not installed
2024-11-25 21:04:28,348:INFO:          deepchecks: Not installed
2024-11-25 21:04:28,348:INFO:             xgboost: Not installed
2024-11-25 21:04:28,348:INFO:            catboost: Not installed
2024-11-25 21:04:28,348:INFO:              kmodes: Not installed
2024-11-25 21:04:28,348:INFO:             mlxtend: Not installed
2024-11-25 21:04:28,348:INFO:       statsforecast: Not installed
2024-11-25 21:04:28,348:INFO:        tune_sklearn: Not installed
2024-11-25 21:04:28,348:INFO:                 ray: Not installed
2024-11-25 21:04:28,348:INFO:            hyperopt: Not installed
2024-11-25 21:04:28,348:INFO:              optuna: 4.1.0
2024-11-25 21:04:28,348:INFO:               skopt: Not installed
2024-11-25 21:04:28,348:INFO:              mlflow: Not installed
2024-11-25 21:04:28,348:INFO:              gradio: Not installed
2024-11-25 21:04:28,348:INFO:             fastapi: Not installed
2024-11-25 21:04:28,348:INFO:             uvicorn: Not installed
2024-11-25 21:04:28,348:INFO:              m2cgen: Not installed
2024-11-25 21:04:28,348:INFO:           evidently: Not installed
2024-11-25 21:04:28,348:INFO:               fugue: Not installed
2024-11-25 21:04:28,348:INFO:           streamlit: Not installed
2024-11-25 21:04:28,348:INFO:             prophet: Not installed
2024-11-25 21:04:28,348:INFO:None
2024-11-25 21:04:28,348:INFO:Set up data.
2024-11-25 21:04:28,614:INFO:Set up folding strategy.
2024-11-25 21:04:28,615:INFO:Set up train/test split.
2024-11-25 21:04:28,713:INFO:Set up index.
2024-11-25 21:04:28,714:INFO:Assigning column types.
2024-11-25 21:04:28,729:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-25 21:04:28,821:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 21:04:28,821:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 21:04:28,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:28,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:28,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 21:04:28,965:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 21:04:29,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,008:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-25 21:04:29,119:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 21:04:29,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 21:04:29,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,394:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-25 21:04:29,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:29,994:INFO:Preparing preprocessing pipeline...
2024-11-25 21:04:30,026:INFO:Set up label encoding.
2024-11-25 21:04:30,026:INFO:Set up date feature engineering.
2024-11-25 21:04:30,026:INFO:Set up simple imputation.
2024-11-25 21:04:30,057:INFO:Set up encoding of ordinal features.
2024-11-25 21:04:30,072:INFO:Set up encoding of categorical features.
2024-11-25 21:04:31,921:INFO:Finished creating preprocessing pipeline.
2024-11-25 21:04:31,963:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-25 21:04:31,963:INFO:Creating final display dataframe.
2024-11-25 21:04:33,666:INFO:Setup _display_container:                     Description             Value
0                    Session id              3806
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              a1f2
2024-11-25 21:04:33,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:33,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:34,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:34,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 21:04:34,075:INFO:setup() successfully completed in 5.77s...............
2024-11-25 21:04:34,075:INFO:Initializing automl()
2024-11-25 21:04:34,075:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1956D4D0>, optimize=Recall, use_holdout=False, turbo=True, return_train_score=False)
2024-11-25 21:04:34,092:INFO:Model Selection Basis : CV Results on Training set
2024-11-25 21:04:34,092:INFO:Initializing create_model()
2024-11-25 21:04:34,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1956D4D0>, estimator=None, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 21:04:34,092:INFO:Checking exceptions
2024-11-25 22:25:01,350:INFO:PyCaret ClassificationExperiment
2024-11-25 22:25:01,350:INFO:Logging name: clf-default-name
2024-11-25 22:25:01,350:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 22:25:01,350:INFO:version 3.3.2
2024-11-25 22:25:01,350:INFO:Initializing setup()
2024-11-25 22:25:01,350:INFO:self.USI: 875f
2024-11-25 22:25:01,350:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 22:25:01,350:INFO:Checking environment
2024-11-25 22:25:01,350:INFO:python_version: 3.11.9
2024-11-25 22:25:01,350:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 22:25:01,350:INFO:machine: AMD64
2024-11-25 22:25:01,350:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 22:25:01,380:INFO:Memory: svmem(total=4293971968, available=605077504, percent=85.9, used=3688894464, free=605077504)
2024-11-25 22:25:01,381:INFO:Physical Core: 2
2024-11-25 22:25:01,381:INFO:Logical Core: 2
2024-11-25 22:25:01,382:INFO:Checking libraries
2024-11-25 22:25:01,382:INFO:System:
2024-11-25 22:25:01,382:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 22:25:01,382:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 22:25:01,382:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 22:25:01,388:INFO:PyCaret required dependencies:
2024-11-25 22:25:01,388:INFO:                 pip: 24.3.1
2024-11-25 22:25:01,388:INFO:          setuptools: 65.5.0
2024-11-25 22:25:01,388:INFO:             pycaret: 3.3.2
2024-11-25 22:25:01,388:INFO:             IPython: 8.26.0
2024-11-25 22:25:01,388:INFO:          ipywidgets: 8.1.5
2024-11-25 22:25:01,388:INFO:                tqdm: 4.66.5
2024-11-25 22:25:01,388:INFO:               numpy: 1.26.4
2024-11-25 22:25:01,388:INFO:              pandas: 2.1.4
2024-11-25 22:25:01,388:INFO:              jinja2: 3.1.4
2024-11-25 22:25:01,388:INFO:               scipy: 1.11.4
2024-11-25 22:25:01,388:INFO:              joblib: 1.3.2
2024-11-25 22:25:01,388:INFO:             sklearn: 1.4.2
2024-11-25 22:25:01,388:INFO:                pyod: 2.0.2
2024-11-25 22:25:01,388:INFO:            imblearn: 0.12.4
2024-11-25 22:25:01,388:INFO:   category_encoders: 2.6.4
2024-11-25 22:25:01,388:INFO:            lightgbm: 4.5.0
2024-11-25 22:25:01,388:INFO:               numba: 0.60.0
2024-11-25 22:25:01,388:INFO:            requests: 2.32.3
2024-11-25 22:25:01,388:INFO:          matplotlib: 3.7.5
2024-11-25 22:25:01,388:INFO:          scikitplot: 0.3.7
2024-11-25 22:25:01,388:INFO:         yellowbrick: 1.5
2024-11-25 22:25:01,388:INFO:              plotly: 5.24.1
2024-11-25 22:25:01,388:INFO:    plotly-resampler: Not installed
2024-11-25 22:25:01,449:INFO:             kaleido: 0.2.1
2024-11-25 22:25:01,449:INFO:           schemdraw: 0.15
2024-11-25 22:25:01,449:INFO:         statsmodels: 0.14.3
2024-11-25 22:25:01,449:INFO:              sktime: 0.26.0
2024-11-25 22:25:01,450:INFO:               tbats: 1.1.3
2024-11-25 22:25:01,450:INFO:            pmdarima: 2.0.4
2024-11-25 22:25:01,450:INFO:              psutil: 6.0.0
2024-11-25 22:25:01,453:INFO:          markupsafe: 3.0.2
2024-11-25 22:25:01,453:INFO:             pickle5: Not installed
2024-11-25 22:25:01,453:INFO:         cloudpickle: 3.0.0
2024-11-25 22:25:01,453:INFO:         deprecation: 2.1.0
2024-11-25 22:25:01,453:INFO:              xxhash: 3.5.0
2024-11-25 22:25:01,453:INFO:           wurlitzer: Not installed
2024-11-25 22:25:01,453:INFO:PyCaret optional dependencies:
2024-11-25 22:25:01,453:INFO:                shap: 0.46.0
2024-11-25 22:25:01,460:INFO:           interpret: Not installed
2024-11-25 22:25:01,460:INFO:                umap: Not installed
2024-11-25 22:25:01,461:INFO:     ydata_profiling: Not installed
2024-11-25 22:25:01,461:INFO:  explainerdashboard: Not installed
2024-11-25 22:25:01,461:INFO:             autoviz: Not installed
2024-11-25 22:25:01,461:INFO:           fairlearn: Not installed
2024-11-25 22:25:01,461:INFO:          deepchecks: Not installed
2024-11-25 22:25:01,461:INFO:             xgboost: Not installed
2024-11-25 22:25:01,462:INFO:            catboost: Not installed
2024-11-25 22:25:01,462:INFO:              kmodes: Not installed
2024-11-25 22:25:01,462:INFO:             mlxtend: Not installed
2024-11-25 22:25:01,463:INFO:       statsforecast: Not installed
2024-11-25 22:25:01,463:INFO:        tune_sklearn: Not installed
2024-11-25 22:25:01,463:INFO:                 ray: Not installed
2024-11-25 22:25:01,463:INFO:            hyperopt: Not installed
2024-11-25 22:25:01,463:INFO:              optuna: 4.1.0
2024-11-25 22:25:01,464:INFO:               skopt: Not installed
2024-11-25 22:25:01,464:INFO:              mlflow: Not installed
2024-11-25 22:25:01,464:INFO:              gradio: Not installed
2024-11-25 22:25:01,464:INFO:             fastapi: Not installed
2024-11-25 22:25:01,464:INFO:             uvicorn: Not installed
2024-11-25 22:25:01,464:INFO:              m2cgen: Not installed
2024-11-25 22:25:01,465:INFO:           evidently: Not installed
2024-11-25 22:25:01,465:INFO:               fugue: Not installed
2024-11-25 22:25:01,465:INFO:           streamlit: Not installed
2024-11-25 22:25:01,465:INFO:             prophet: Not installed
2024-11-25 22:25:01,465:INFO:None
2024-11-25 22:25:01,466:INFO:Set up data.
2024-11-25 22:25:19,116:INFO:PyCaret ClassificationExperiment
2024-11-25 22:25:19,116:INFO:Logging name: clf-default-name
2024-11-25 22:25:19,116:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 22:25:19,116:INFO:version 3.3.2
2024-11-25 22:25:19,116:INFO:Initializing setup()
2024-11-25 22:25:19,116:INFO:self.USI: ae07
2024-11-25 22:25:19,116:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 22:25:19,116:INFO:Checking environment
2024-11-25 22:25:19,116:INFO:python_version: 3.11.9
2024-11-25 22:25:19,116:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 22:25:19,116:INFO:machine: AMD64
2024-11-25 22:25:19,116:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 22:25:19,116:INFO:Memory: svmem(total=4293971968, available=540139520, percent=87.4, used=3753832448, free=540139520)
2024-11-25 22:25:19,140:INFO:Physical Core: 2
2024-11-25 22:25:19,142:INFO:Logical Core: 2
2024-11-25 22:25:19,142:INFO:Checking libraries
2024-11-25 22:25:19,142:INFO:System:
2024-11-25 22:25:19,142:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 22:25:19,142:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 22:25:19,142:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 22:25:19,143:INFO:PyCaret required dependencies:
2024-11-25 22:25:19,143:INFO:                 pip: 24.3.1
2024-11-25 22:25:19,143:INFO:          setuptools: 65.5.0
2024-11-25 22:25:19,143:INFO:             pycaret: 3.3.2
2024-11-25 22:25:19,143:INFO:             IPython: 8.26.0
2024-11-25 22:25:19,143:INFO:          ipywidgets: 8.1.5
2024-11-25 22:25:19,143:INFO:                tqdm: 4.66.5
2024-11-25 22:25:19,143:INFO:               numpy: 1.26.4
2024-11-25 22:25:19,143:INFO:              pandas: 2.1.4
2024-11-25 22:25:19,143:INFO:              jinja2: 3.1.4
2024-11-25 22:25:19,143:INFO:               scipy: 1.11.4
2024-11-25 22:25:19,143:INFO:              joblib: 1.3.2
2024-11-25 22:25:19,143:INFO:             sklearn: 1.4.2
2024-11-25 22:25:19,143:INFO:                pyod: 2.0.2
2024-11-25 22:25:19,143:INFO:            imblearn: 0.12.4
2024-11-25 22:25:19,152:INFO:   category_encoders: 2.6.4
2024-11-25 22:25:19,152:INFO:            lightgbm: 4.5.0
2024-11-25 22:25:19,152:INFO:               numba: 0.60.0
2024-11-25 22:25:19,153:INFO:            requests: 2.32.3
2024-11-25 22:25:19,153:INFO:          matplotlib: 3.7.5
2024-11-25 22:25:19,153:INFO:          scikitplot: 0.3.7
2024-11-25 22:25:19,153:INFO:         yellowbrick: 1.5
2024-11-25 22:25:19,154:INFO:              plotly: 5.24.1
2024-11-25 22:25:19,154:INFO:    plotly-resampler: Not installed
2024-11-25 22:25:19,154:INFO:             kaleido: 0.2.1
2024-11-25 22:25:19,154:INFO:           schemdraw: 0.15
2024-11-25 22:25:19,154:INFO:         statsmodels: 0.14.3
2024-11-25 22:25:19,154:INFO:              sktime: 0.26.0
2024-11-25 22:25:19,154:INFO:               tbats: 1.1.3
2024-11-25 22:25:19,155:INFO:            pmdarima: 2.0.4
2024-11-25 22:25:19,155:INFO:              psutil: 6.0.0
2024-11-25 22:25:19,155:INFO:          markupsafe: 3.0.2
2024-11-25 22:25:19,155:INFO:             pickle5: Not installed
2024-11-25 22:25:19,155:INFO:         cloudpickle: 3.0.0
2024-11-25 22:25:19,155:INFO:         deprecation: 2.1.0
2024-11-25 22:25:19,155:INFO:              xxhash: 3.5.0
2024-11-25 22:25:19,156:INFO:           wurlitzer: Not installed
2024-11-25 22:25:19,156:INFO:PyCaret optional dependencies:
2024-11-25 22:25:19,156:INFO:                shap: 0.46.0
2024-11-25 22:25:19,156:INFO:           interpret: Not installed
2024-11-25 22:25:19,156:INFO:                umap: Not installed
2024-11-25 22:25:19,156:INFO:     ydata_profiling: Not installed
2024-11-25 22:25:19,156:INFO:  explainerdashboard: Not installed
2024-11-25 22:25:19,156:INFO:             autoviz: Not installed
2024-11-25 22:25:19,158:INFO:           fairlearn: Not installed
2024-11-25 22:25:19,158:INFO:          deepchecks: Not installed
2024-11-25 22:25:19,158:INFO:             xgboost: Not installed
2024-11-25 22:25:19,158:INFO:            catboost: Not installed
2024-11-25 22:25:19,158:INFO:              kmodes: Not installed
2024-11-25 22:25:19,158:INFO:             mlxtend: Not installed
2024-11-25 22:25:19,158:INFO:       statsforecast: Not installed
2024-11-25 22:25:19,159:INFO:        tune_sklearn: Not installed
2024-11-25 22:25:19,159:INFO:                 ray: Not installed
2024-11-25 22:25:19,159:INFO:            hyperopt: Not installed
2024-11-25 22:25:19,159:INFO:              optuna: 4.1.0
2024-11-25 22:25:19,159:INFO:               skopt: Not installed
2024-11-25 22:25:19,159:INFO:              mlflow: Not installed
2024-11-25 22:25:19,159:INFO:              gradio: Not installed
2024-11-25 22:25:19,159:INFO:             fastapi: Not installed
2024-11-25 22:25:19,159:INFO:             uvicorn: Not installed
2024-11-25 22:25:19,159:INFO:              m2cgen: Not installed
2024-11-25 22:25:19,159:INFO:           evidently: Not installed
2024-11-25 22:25:19,159:INFO:               fugue: Not installed
2024-11-25 22:25:19,159:INFO:           streamlit: Not installed
2024-11-25 22:25:19,159:INFO:             prophet: Not installed
2024-11-25 22:25:19,159:INFO:None
2024-11-25 22:25:19,159:INFO:Set up data.
2024-11-25 23:03:02,985:INFO:PyCaret ClassificationExperiment
2024-11-25 23:03:02,985:INFO:Logging name: clf-default-name
2024-11-25 23:03:02,987:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 23:03:02,987:INFO:version 3.3.2
2024-11-25 23:03:02,987:INFO:Initializing setup()
2024-11-25 23:03:02,988:INFO:self.USI: 686d
2024-11-25 23:03:02,988:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 23:03:02,989:INFO:Checking environment
2024-11-25 23:03:02,989:INFO:python_version: 3.11.9
2024-11-25 23:03:02,989:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 23:03:02,990:INFO:machine: AMD64
2024-11-25 23:03:02,990:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 23:03:02,997:INFO:Memory: svmem(total=4293971968, available=592965632, percent=86.2, used=3701006336, free=592965632)
2024-11-25 23:03:02,998:INFO:Physical Core: 2
2024-11-25 23:03:02,998:INFO:Logical Core: 2
2024-11-25 23:03:02,998:INFO:Checking libraries
2024-11-25 23:03:02,998:INFO:System:
2024-11-25 23:03:03,012:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 23:03:03,012:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 23:03:03,012:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 23:03:03,012:INFO:PyCaret required dependencies:
2024-11-25 23:03:03,012:INFO:                 pip: 24.3.1
2024-11-25 23:03:03,012:INFO:          setuptools: 65.5.0
2024-11-25 23:03:03,012:INFO:             pycaret: 3.3.2
2024-11-25 23:03:03,012:INFO:             IPython: 8.26.0
2024-11-25 23:03:03,012:INFO:          ipywidgets: 8.1.5
2024-11-25 23:03:03,012:INFO:                tqdm: 4.66.5
2024-11-25 23:03:03,012:INFO:               numpy: 1.26.4
2024-11-25 23:03:03,012:INFO:              pandas: 2.1.4
2024-11-25 23:03:03,012:INFO:              jinja2: 3.1.4
2024-11-25 23:03:03,012:INFO:               scipy: 1.11.4
2024-11-25 23:03:03,012:INFO:              joblib: 1.3.2
2024-11-25 23:03:03,012:INFO:             sklearn: 1.4.2
2024-11-25 23:03:03,012:INFO:                pyod: 2.0.2
2024-11-25 23:03:03,012:INFO:            imblearn: 0.12.4
2024-11-25 23:03:03,012:INFO:   category_encoders: 2.6.4
2024-11-25 23:03:03,012:INFO:            lightgbm: 4.5.0
2024-11-25 23:03:03,012:INFO:               numba: 0.60.0
2024-11-25 23:03:03,012:INFO:            requests: 2.32.3
2024-11-25 23:03:03,012:INFO:          matplotlib: 3.7.5
2024-11-25 23:03:03,012:INFO:          scikitplot: 0.3.7
2024-11-25 23:03:03,012:INFO:         yellowbrick: 1.5
2024-11-25 23:03:03,012:INFO:              plotly: 5.24.1
2024-11-25 23:03:03,012:INFO:    plotly-resampler: Not installed
2024-11-25 23:03:03,012:INFO:             kaleido: 0.2.1
2024-11-25 23:03:03,012:INFO:           schemdraw: 0.15
2024-11-25 23:03:03,012:INFO:         statsmodels: 0.14.3
2024-11-25 23:03:03,012:INFO:              sktime: 0.26.0
2024-11-25 23:03:03,012:INFO:               tbats: 1.1.3
2024-11-25 23:03:03,012:INFO:            pmdarima: 2.0.4
2024-11-25 23:03:03,012:INFO:              psutil: 6.0.0
2024-11-25 23:03:03,012:INFO:          markupsafe: 3.0.2
2024-11-25 23:03:03,012:INFO:             pickle5: Not installed
2024-11-25 23:03:03,012:INFO:         cloudpickle: 3.0.0
2024-11-25 23:03:03,067:INFO:         deprecation: 2.1.0
2024-11-25 23:03:03,106:INFO:              xxhash: 3.5.0
2024-11-25 23:03:03,107:INFO:           wurlitzer: Not installed
2024-11-25 23:03:03,107:INFO:PyCaret optional dependencies:
2024-11-25 23:03:03,108:INFO:                shap: 0.46.0
2024-11-25 23:03:03,108:INFO:           interpret: Not installed
2024-11-25 23:03:03,108:INFO:                umap: Not installed
2024-11-25 23:03:03,108:INFO:     ydata_profiling: Not installed
2024-11-25 23:03:03,108:INFO:  explainerdashboard: Not installed
2024-11-25 23:03:03,108:INFO:             autoviz: Not installed
2024-11-25 23:03:03,108:INFO:           fairlearn: Not installed
2024-11-25 23:03:03,108:INFO:          deepchecks: Not installed
2024-11-25 23:03:03,108:INFO:             xgboost: Not installed
2024-11-25 23:03:03,108:INFO:            catboost: Not installed
2024-11-25 23:03:03,108:INFO:              kmodes: Not installed
2024-11-25 23:03:03,108:INFO:             mlxtend: Not installed
2024-11-25 23:03:03,108:INFO:       statsforecast: Not installed
2024-11-25 23:03:03,108:INFO:        tune_sklearn: Not installed
2024-11-25 23:03:03,108:INFO:                 ray: Not installed
2024-11-25 23:03:03,108:INFO:            hyperopt: Not installed
2024-11-25 23:03:03,108:INFO:              optuna: 4.1.0
2024-11-25 23:03:03,108:INFO:               skopt: Not installed
2024-11-25 23:03:03,108:INFO:              mlflow: Not installed
2024-11-25 23:03:03,108:INFO:              gradio: Not installed
2024-11-25 23:03:03,108:INFO:             fastapi: Not installed
2024-11-25 23:03:03,108:INFO:             uvicorn: Not installed
2024-11-25 23:03:03,108:INFO:              m2cgen: Not installed
2024-11-25 23:03:03,108:INFO:           evidently: Not installed
2024-11-25 23:03:03,108:INFO:               fugue: Not installed
2024-11-25 23:03:03,108:INFO:           streamlit: Not installed
2024-11-25 23:03:03,108:INFO:             prophet: Not installed
2024-11-25 23:03:03,108:INFO:None
2024-11-25 23:03:03,108:INFO:Set up data.
2024-11-25 23:03:03,278:INFO:Set up folding strategy.
2024-11-25 23:03:03,278:INFO:Set up train/test split.
2024-11-25 23:03:03,503:INFO:Set up index.
2024-11-25 23:03:03,512:INFO:Assigning column types.
2024-11-25 23:03:03,530:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-25 23:03:03,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 23:03:03,691:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 23:03:03,749:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:03,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:03,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 23:03:03,903:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 23:03:04,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:04,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:04,013:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-25 23:03:04,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 23:03:04,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:04,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:04,965:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 23:03:05,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:05,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:05,216:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-25 23:03:05,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:05,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:06,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:06,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:06,262:INFO:Preparing preprocessing pipeline...
2024-11-25 23:03:06,278:INFO:Set up label encoding.
2024-11-25 23:03:06,299:INFO:Set up date feature engineering.
2024-11-25 23:03:06,301:INFO:Set up simple imputation.
2024-11-25 23:03:06,310:INFO:Set up encoding of ordinal features.
2024-11-25 23:03:06,325:INFO:Set up encoding of categorical features.
2024-11-25 23:03:07,297:INFO:Finished creating preprocessing pipeline.
2024-11-25 23:03:07,341:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-25 23:03:07,341:INFO:Creating final display dataframe.
2024-11-25 23:03:08,887:INFO:Setup _display_container:                     Description             Value
0                    Session id              3015
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              686d
2024-11-25 23:03:09,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:09,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:09,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:09,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:03:09,387:INFO:setup() successfully completed in 6.48s...............
2024-11-25 23:03:09,387:INFO:Initializing compare_models()
2024-11-25 23:03:09,387:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-25 23:03:09,387:INFO:Checking exceptions
2024-11-25 23:03:09,434:INFO:Preparing display monitor
2024-11-25 23:03:09,825:INFO:Initializing Logistic Regression
2024-11-25 23:03:09,825:INFO:Total runtime is 0.0 minutes
2024-11-25 23:03:09,863:INFO:SubProcess create_model() called ==================================
2024-11-25 23:03:09,923:INFO:Initializing create_model()
2024-11-25 23:03:09,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:03:09,923:INFO:Checking exceptions
2024-11-25 23:03:09,923:INFO:Importing libraries
2024-11-25 23:03:09,923:INFO:Copying training dataset
2024-11-25 23:03:10,091:INFO:Defining folds
2024-11-25 23:03:10,091:INFO:Declaring metric variables
2024-11-25 23:03:10,106:INFO:Importing untrained model
2024-11-25 23:03:10,106:INFO:Logistic Regression Imported successfully
2024-11-25 23:03:10,149:INFO:Starting cross validation
2024-11-25 23:03:10,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:03:35,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:03:35,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:03:35,492:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:35,492:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:35,517:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:35,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:35,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:35,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:43,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:03:44,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:03:44,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:44,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:44,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:44,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:44,185:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:44,195:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:51,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:03:51,872:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:51,915:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:51,936:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:52,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:03:52,265:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:52,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:03:52,326:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:00,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:04:00,794:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:00,835:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:00,835:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:00,945:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:04:01,143:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:01,160:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:01,193:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:08,241:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:04:08,472:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:08,488:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:08,515:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:09,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-25 23:04:09,249:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:09,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:09,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:09,398:INFO:Calculating mean and std
2024-11-25 23:04:09,408:INFO:Creating metrics dataframe
2024-11-25 23:04:09,440:INFO:Uploading results into container
2024-11-25 23:04:09,440:INFO:Uploading model into container now
2024-11-25 23:04:09,440:INFO:_master_model_container: 1
2024-11-25 23:04:09,440:INFO:_display_container: 2
2024-11-25 23:04:09,440:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3015, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-25 23:04:09,440:INFO:create_model() successfully completed......................................
2024-11-25 23:04:15,884:INFO:SubProcess create_model() end ==================================
2024-11-25 23:04:15,884:INFO:Creating metrics dataframe
2024-11-25 23:04:15,907:INFO:Initializing K Neighbors Classifier
2024-11-25 23:04:15,908:INFO:Total runtime is 1.1013813694318135 minutes
2024-11-25 23:04:15,911:INFO:SubProcess create_model() called ==================================
2024-11-25 23:04:15,911:INFO:Initializing create_model()
2024-11-25 23:04:15,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:04:15,914:INFO:Checking exceptions
2024-11-25 23:04:15,914:INFO:Importing libraries
2024-11-25 23:04:15,914:INFO:Copying training dataset
2024-11-25 23:04:16,070:INFO:Defining folds
2024-11-25 23:04:16,070:INFO:Declaring metric variables
2024-11-25 23:04:16,078:INFO:Importing untrained model
2024-11-25 23:04:16,084:INFO:K Neighbors Classifier Imported successfully
2024-11-25 23:04:16,106:INFO:Starting cross validation
2024-11-25 23:04:16,109:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:04:20,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:20,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:20,286:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:20,286:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:20,320:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:20,388:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:22,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:22,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:22,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:22,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:22,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:22,390:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:24,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:24,378:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:24,391:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:24,525:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:24,544:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:24,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:26,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:26,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:26,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:26,162:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:26,176:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:26,209:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:27,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:27,763:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:27,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:27,841:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:27,902:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:27,930:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:27,972:INFO:Calculating mean and std
2024-11-25 23:04:27,977:INFO:Creating metrics dataframe
2024-11-25 23:04:28,008:INFO:Uploading results into container
2024-11-25 23:04:28,009:INFO:Uploading model into container now
2024-11-25 23:04:28,010:INFO:_master_model_container: 2
2024-11-25 23:04:28,010:INFO:_display_container: 2
2024-11-25 23:04:28,010:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-25 23:04:28,010:INFO:create_model() successfully completed......................................
2024-11-25 23:04:28,464:INFO:SubProcess create_model() end ==================================
2024-11-25 23:04:28,464:INFO:Creating metrics dataframe
2024-11-25 23:04:28,493:INFO:Initializing Naive Bayes
2024-11-25 23:04:28,493:INFO:Total runtime is 1.3111286958058674 minutes
2024-11-25 23:04:28,512:INFO:SubProcess create_model() called ==================================
2024-11-25 23:04:28,512:INFO:Initializing create_model()
2024-11-25 23:04:28,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:04:28,512:INFO:Checking exceptions
2024-11-25 23:04:28,512:INFO:Importing libraries
2024-11-25 23:04:28,512:INFO:Copying training dataset
2024-11-25 23:04:28,602:INFO:Defining folds
2024-11-25 23:04:28,602:INFO:Declaring metric variables
2024-11-25 23:04:28,621:INFO:Importing untrained model
2024-11-25 23:04:28,657:INFO:Naive Bayes Imported successfully
2024-11-25 23:04:28,711:INFO:Starting cross validation
2024-11-25 23:04:28,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:04:29,883:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:30,055:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:30,318:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:30,382:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:30,599:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:30,609:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:32,714:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:32,733:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:32,744:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:32,744:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:32,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:32,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:33,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:33,622:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:33,622:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:33,634:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:33,653:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:33,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:34,615:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:34,643:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:34,643:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:34,658:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:34,673:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:34,684:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:35,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:35,752:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:35,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:35,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:35,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:35,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:35,833:INFO:Calculating mean and std
2024-11-25 23:04:35,833:INFO:Creating metrics dataframe
2024-11-25 23:04:35,833:INFO:Uploading results into container
2024-11-25 23:04:35,848:INFO:Uploading model into container now
2024-11-25 23:04:35,848:INFO:_master_model_container: 3
2024-11-25 23:04:35,848:INFO:_display_container: 2
2024-11-25 23:04:35,848:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-25 23:04:35,848:INFO:create_model() successfully completed......................................
2024-11-25 23:04:36,222:INFO:SubProcess create_model() end ==================================
2024-11-25 23:04:36,222:INFO:Creating metrics dataframe
2024-11-25 23:04:36,252:INFO:Initializing Decision Tree Classifier
2024-11-25 23:04:36,252:INFO:Total runtime is 1.4404394229253132 minutes
2024-11-25 23:04:36,278:INFO:SubProcess create_model() called ==================================
2024-11-25 23:04:36,281:INFO:Initializing create_model()
2024-11-25 23:04:36,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:04:36,282:INFO:Checking exceptions
2024-11-25 23:04:36,283:INFO:Importing libraries
2024-11-25 23:04:36,283:INFO:Copying training dataset
2024-11-25 23:04:36,390:INFO:Defining folds
2024-11-25 23:04:36,396:INFO:Declaring metric variables
2024-11-25 23:04:36,424:INFO:Importing untrained model
2024-11-25 23:04:36,432:INFO:Decision Tree Classifier Imported successfully
2024-11-25 23:04:36,439:INFO:Starting cross validation
2024-11-25 23:04:36,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:04:40,189:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:40,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:40,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:40,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:40,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:40,397:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:42,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:42,273:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:42,343:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:42,445:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:42,471:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:42,509:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:44,463:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:44,529:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:44,569:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:44,644:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:44,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:44,712:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:46,214:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:46,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:46,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:46,293:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:46,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:46,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:47,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:47,872:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:47,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:47,943:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:47,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:48,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:48,044:INFO:Calculating mean and std
2024-11-25 23:04:48,092:INFO:Creating metrics dataframe
2024-11-25 23:04:48,092:INFO:Uploading results into container
2024-11-25 23:04:48,092:INFO:Uploading model into container now
2024-11-25 23:04:48,092:INFO:_master_model_container: 4
2024-11-25 23:04:48,092:INFO:_display_container: 2
2024-11-25 23:04:48,092:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3015, splitter='best')
2024-11-25 23:04:48,092:INFO:create_model() successfully completed......................................
2024-11-25 23:04:48,531:INFO:SubProcess create_model() end ==================================
2024-11-25 23:04:48,546:INFO:Creating metrics dataframe
2024-11-25 23:04:48,562:INFO:Initializing SVM - Linear Kernel
2024-11-25 23:04:48,562:INFO:Total runtime is 1.6456080039342245 minutes
2024-11-25 23:04:48,562:INFO:SubProcess create_model() called ==================================
2024-11-25 23:04:48,562:INFO:Initializing create_model()
2024-11-25 23:04:48,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:04:48,562:INFO:Checking exceptions
2024-11-25 23:04:48,562:INFO:Importing libraries
2024-11-25 23:04:48,562:INFO:Copying training dataset
2024-11-25 23:04:48,801:INFO:Defining folds
2024-11-25 23:04:48,802:INFO:Declaring metric variables
2024-11-25 23:04:48,826:INFO:Importing untrained model
2024-11-25 23:04:48,873:INFO:SVM - Linear Kernel Imported successfully
2024-11-25 23:04:48,919:INFO:Starting cross validation
2024-11-25 23:04:48,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:04:52,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:53,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:53,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:04:53,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:53,046:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:53,077:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:53,077:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:04:53,077:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:55,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:55,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:55,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:04:55,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:56,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:56,480:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:56,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:04:56,520:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:58,925:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:58,942:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:58,942:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:04:58,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:59,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:59,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:04:59,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:04:59,687:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:02,652:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:02,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:02,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:05:02,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:03,522:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:03,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:03,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:05:03,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:05,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:05,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:05,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:05:05,648:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:06,591:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:06,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:06,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:05:06,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:06,681:INFO:Calculating mean and std
2024-11-25 23:05:06,681:INFO:Creating metrics dataframe
2024-11-25 23:05:06,704:INFO:Uploading results into container
2024-11-25 23:05:06,707:INFO:Uploading model into container now
2024-11-25 23:05:06,710:INFO:_master_model_container: 5
2024-11-25 23:05:06,711:INFO:_display_container: 2
2024-11-25 23:05:06,716:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3015, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-25 23:05:06,716:INFO:create_model() successfully completed......................................
2024-11-25 23:05:07,142:INFO:SubProcess create_model() end ==================================
2024-11-25 23:05:07,143:INFO:Creating metrics dataframe
2024-11-25 23:05:07,179:INFO:Initializing Ridge Classifier
2024-11-25 23:05:07,179:INFO:Total runtime is 1.9558972239494323 minutes
2024-11-25 23:05:07,185:INFO:SubProcess create_model() called ==================================
2024-11-25 23:05:07,185:INFO:Initializing create_model()
2024-11-25 23:05:07,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:05:07,185:INFO:Checking exceptions
2024-11-25 23:05:07,185:INFO:Importing libraries
2024-11-25 23:05:07,185:INFO:Copying training dataset
2024-11-25 23:05:07,258:INFO:Defining folds
2024-11-25 23:05:07,258:INFO:Declaring metric variables
2024-11-25 23:05:07,282:INFO:Importing untrained model
2024-11-25 23:05:07,300:INFO:Ridge Classifier Imported successfully
2024-11-25 23:05:07,320:INFO:Starting cross validation
2024-11-25 23:05:07,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:05:08,352:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:08,367:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:08,383:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:08,453:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:08,508:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:08,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:10,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:10,707:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:10,744:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:10,968:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:11,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:11,021:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:05:11,021:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:12,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:12,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:12,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:12,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:12,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:12,175:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:13,164:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:13,201:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:13,201:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:13,201:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:13,219:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:13,233:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:14,077:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:14,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:14,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:14,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:14,116:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:14,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:05:14,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:14,178:INFO:Calculating mean and std
2024-11-25 23:05:14,197:INFO:Creating metrics dataframe
2024-11-25 23:05:14,207:INFO:Uploading results into container
2024-11-25 23:05:14,208:INFO:Uploading model into container now
2024-11-25 23:05:14,208:INFO:_master_model_container: 6
2024-11-25 23:05:14,208:INFO:_display_container: 2
2024-11-25 23:05:14,208:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3015, solver='auto',
                tol=0.0001)
2024-11-25 23:05:14,208:INFO:create_model() successfully completed......................................
2024-11-25 23:05:14,714:INFO:SubProcess create_model() end ==================================
2024-11-25 23:05:14,714:INFO:Creating metrics dataframe
2024-11-25 23:05:14,722:INFO:Initializing Random Forest Classifier
2024-11-25 23:05:14,722:INFO:Total runtime is 2.081618789831797 minutes
2024-11-25 23:05:14,722:INFO:SubProcess create_model() called ==================================
2024-11-25 23:05:14,722:INFO:Initializing create_model()
2024-11-25 23:05:14,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:05:14,722:INFO:Checking exceptions
2024-11-25 23:05:14,738:INFO:Importing libraries
2024-11-25 23:05:14,738:INFO:Copying training dataset
2024-11-25 23:05:14,827:INFO:Defining folds
2024-11-25 23:05:14,827:INFO:Declaring metric variables
2024-11-25 23:05:14,834:INFO:Importing untrained model
2024-11-25 23:05:14,839:INFO:Random Forest Classifier Imported successfully
2024-11-25 23:05:14,866:INFO:Starting cross validation
2024-11-25 23:05:14,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:05:25,907:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:25,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:25,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:25,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:25,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:26,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:34,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:34,803:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:34,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:34,974:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:35,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:35,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:44,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:44,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:44,366:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:44,644:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:44,644:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:44,673:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:55,645:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:55,690:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:55,749:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:55,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:55,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:05:55,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:07,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:07,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:07,162:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:07,414:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:07,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:07,462:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:07,522:INFO:Calculating mean and std
2024-11-25 23:06:07,558:INFO:Creating metrics dataframe
2024-11-25 23:06:07,569:INFO:Uploading results into container
2024-11-25 23:06:07,569:INFO:Uploading model into container now
2024-11-25 23:06:07,569:INFO:_master_model_container: 7
2024-11-25 23:06:07,569:INFO:_display_container: 2
2024-11-25 23:06:07,569:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3015, verbose=0,
                       warm_start=False)
2024-11-25 23:06:07,569:INFO:create_model() successfully completed......................................
2024-11-25 23:06:08,074:INFO:SubProcess create_model() end ==================================
2024-11-25 23:06:08,084:INFO:Creating metrics dataframe
2024-11-25 23:06:08,107:INFO:Initializing Quadratic Discriminant Analysis
2024-11-25 23:06:08,108:INFO:Total runtime is 2.971374972661336 minutes
2024-11-25 23:06:08,112:INFO:SubProcess create_model() called ==================================
2024-11-25 23:06:08,113:INFO:Initializing create_model()
2024-11-25 23:06:08,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:06:08,113:INFO:Checking exceptions
2024-11-25 23:06:08,113:INFO:Importing libraries
2024-11-25 23:06:08,113:INFO:Copying training dataset
2024-11-25 23:06:08,131:INFO:Defining folds
2024-11-25 23:06:08,131:INFO:Declaring metric variables
2024-11-25 23:06:08,163:INFO:Importing untrained model
2024-11-25 23:06:08,194:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-25 23:06:08,272:INFO:Starting cross validation
2024-11-25 23:06:08,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:06:10,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:10,255:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:10,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:10,713:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:10,713:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:10,823:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:10,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:10,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:12,720:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:12,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:12,989:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:12,989:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:13,012:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:13,025:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:13,025:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:13,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:14,131:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:14,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:14,398:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:14,414:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:14,414:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:14,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:14,464:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:14,483:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:15,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:15,702:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:15,927:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:15,949:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:15,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:15,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:16,031:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:16,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:17,121:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:17,214:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:06:17,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:17,554:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:17,554:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:17,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:17,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:17,712:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:17,761:INFO:Calculating mean and std
2024-11-25 23:06:17,772:INFO:Creating metrics dataframe
2024-11-25 23:06:17,797:INFO:Uploading results into container
2024-11-25 23:06:17,798:INFO:Uploading model into container now
2024-11-25 23:06:17,798:INFO:_master_model_container: 8
2024-11-25 23:06:17,798:INFO:_display_container: 2
2024-11-25 23:06:17,798:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-25 23:06:17,798:INFO:create_model() successfully completed......................................
2024-11-25 23:06:18,242:INFO:SubProcess create_model() end ==================================
2024-11-25 23:06:18,242:INFO:Creating metrics dataframe
2024-11-25 23:06:18,256:INFO:Initializing Ada Boost Classifier
2024-11-25 23:06:18,256:INFO:Total runtime is 3.1405170083045957 minutes
2024-11-25 23:06:18,256:INFO:SubProcess create_model() called ==================================
2024-11-25 23:06:18,256:INFO:Initializing create_model()
2024-11-25 23:06:18,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:06:18,256:INFO:Checking exceptions
2024-11-25 23:06:18,256:INFO:Importing libraries
2024-11-25 23:06:18,256:INFO:Copying training dataset
2024-11-25 23:06:18,356:INFO:Defining folds
2024-11-25 23:06:18,358:INFO:Declaring metric variables
2024-11-25 23:06:18,392:INFO:Importing untrained model
2024-11-25 23:06:18,397:INFO:Ada Boost Classifier Imported successfully
2024-11-25 23:06:18,422:INFO:Starting cross validation
2024-11-25 23:06:18,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:06:19,676:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:19,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:25,656:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:25,669:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:25,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:25,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:25,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:25,888:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:26,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:26,694:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:30,706:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:30,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:30,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:30,957:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:30,990:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:31,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:31,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:31,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:35,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:36,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:36,064:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:36,201:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:36,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:36,279:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:36,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:37,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:41,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:41,138:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:41,201:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:41,301:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:41,318:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:41,333:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:41,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:42,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:06:46,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:46,559:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:46,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:46,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:46,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:46,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:06:46,724:INFO:Calculating mean and std
2024-11-25 23:06:46,724:INFO:Creating metrics dataframe
2024-11-25 23:06:46,724:INFO:Uploading results into container
2024-11-25 23:06:46,737:INFO:Uploading model into container now
2024-11-25 23:06:46,768:INFO:_master_model_container: 9
2024-11-25 23:06:46,768:INFO:_display_container: 2
2024-11-25 23:06:46,768:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3015)
2024-11-25 23:06:46,768:INFO:create_model() successfully completed......................................
2024-11-25 23:06:47,256:INFO:SubProcess create_model() end ==================================
2024-11-25 23:06:47,256:INFO:Creating metrics dataframe
2024-11-25 23:06:47,287:INFO:Initializing Gradient Boosting Classifier
2024-11-25 23:06:47,287:INFO:Total runtime is 3.624360227584839 minutes
2024-11-25 23:06:47,328:INFO:SubProcess create_model() called ==================================
2024-11-25 23:06:47,331:INFO:Initializing create_model()
2024-11-25 23:06:47,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:06:47,331:INFO:Checking exceptions
2024-11-25 23:06:47,331:INFO:Importing libraries
2024-11-25 23:06:47,331:INFO:Copying training dataset
2024-11-25 23:06:47,458:INFO:Defining folds
2024-11-25 23:06:47,458:INFO:Declaring metric variables
2024-11-25 23:06:47,458:INFO:Importing untrained model
2024-11-25 23:06:47,496:INFO:Gradient Boosting Classifier Imported successfully
2024-11-25 23:06:47,519:INFO:Starting cross validation
2024-11-25 23:06:47,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:07:01,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:01,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:01,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:01,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:01,933:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:01,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:14,884:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:14,910:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:14,970:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:15,540:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:15,618:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:15,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:28,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:28,493:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:28,557:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:28,910:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:28,936:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:28,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:38,801:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:38,819:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:38,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:39,139:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:39,168:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:39,183:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:50,169:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:50,187:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:50,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:50,452:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:50,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:50,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:50,555:INFO:Calculating mean and std
2024-11-25 23:07:50,558:INFO:Creating metrics dataframe
2024-11-25 23:07:50,558:INFO:Uploading results into container
2024-11-25 23:07:50,558:INFO:Uploading model into container now
2024-11-25 23:07:50,558:INFO:_master_model_container: 10
2024-11-25 23:07:50,558:INFO:_display_container: 2
2024-11-25 23:07:50,558:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3015, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-25 23:07:50,558:INFO:create_model() successfully completed......................................
2024-11-25 23:07:51,044:INFO:SubProcess create_model() end ==================================
2024-11-25 23:07:51,044:INFO:Creating metrics dataframe
2024-11-25 23:07:51,076:INFO:Initializing Linear Discriminant Analysis
2024-11-25 23:07:51,076:INFO:Total runtime is 4.687511189778646 minutes
2024-11-25 23:07:51,088:INFO:SubProcess create_model() called ==================================
2024-11-25 23:07:51,088:INFO:Initializing create_model()
2024-11-25 23:07:51,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:07:51,088:INFO:Checking exceptions
2024-11-25 23:07:51,088:INFO:Importing libraries
2024-11-25 23:07:51,088:INFO:Copying training dataset
2024-11-25 23:07:51,113:INFO:Defining folds
2024-11-25 23:07:51,113:INFO:Declaring metric variables
2024-11-25 23:07:51,143:INFO:Importing untrained model
2024-11-25 23:07:51,238:INFO:Linear Discriminant Analysis Imported successfully
2024-11-25 23:07:51,262:INFO:Starting cross validation
2024-11-25 23:07:51,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:07:53,301:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:53,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:53,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:53,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:53,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:53,382:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:55,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:55,239:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:55,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:55,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:55,266:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:55,266:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:56,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:56,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:56,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:56,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:56,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:56,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:57,494:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:57,512:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:57,512:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:57,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:57,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:57,584:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:58,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:58,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:58,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:58,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:58,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:58,714:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:07:58,762:INFO:Calculating mean and std
2024-11-25 23:07:58,795:INFO:Creating metrics dataframe
2024-11-25 23:07:58,795:INFO:Uploading results into container
2024-11-25 23:07:58,818:INFO:Uploading model into container now
2024-11-25 23:07:58,820:INFO:_master_model_container: 11
2024-11-25 23:07:58,820:INFO:_display_container: 2
2024-11-25 23:07:58,821:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-25 23:07:58,821:INFO:create_model() successfully completed......................................
2024-11-25 23:07:59,232:INFO:SubProcess create_model() end ==================================
2024-11-25 23:07:59,232:INFO:Creating metrics dataframe
2024-11-25 23:07:59,247:INFO:Initializing Extra Trees Classifier
2024-11-25 23:07:59,263:INFO:Total runtime is 4.823964003721873 minutes
2024-11-25 23:07:59,265:INFO:SubProcess create_model() called ==================================
2024-11-25 23:07:59,265:INFO:Initializing create_model()
2024-11-25 23:07:59,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:07:59,265:INFO:Checking exceptions
2024-11-25 23:07:59,265:INFO:Importing libraries
2024-11-25 23:07:59,265:INFO:Copying training dataset
2024-11-25 23:07:59,359:INFO:Defining folds
2024-11-25 23:07:59,359:INFO:Declaring metric variables
2024-11-25 23:07:59,404:INFO:Importing untrained model
2024-11-25 23:07:59,404:INFO:Extra Trees Classifier Imported successfully
2024-11-25 23:07:59,503:INFO:Starting cross validation
2024-11-25 23:07:59,507:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:08:09,528:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:09,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:09,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:09,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:09,886:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:09,907:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:18,095:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:18,175:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:18,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:18,450:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:18,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:18,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:26,522:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:26,534:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:26,574:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:26,886:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:26,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:26,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:34,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:34,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:34,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:34,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:34,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:34,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:42,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:42,974:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:43,066:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:43,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:43,133:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:43,143:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:43,177:INFO:Calculating mean and std
2024-11-25 23:08:43,177:INFO:Creating metrics dataframe
2024-11-25 23:08:43,212:INFO:Uploading results into container
2024-11-25 23:08:43,212:INFO:Uploading model into container now
2024-11-25 23:08:43,212:INFO:_master_model_container: 12
2024-11-25 23:08:43,212:INFO:_display_container: 2
2024-11-25 23:08:43,212:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3015, verbose=0,
                     warm_start=False)
2024-11-25 23:08:43,212:INFO:create_model() successfully completed......................................
2024-11-25 23:08:43,702:INFO:SubProcess create_model() end ==================================
2024-11-25 23:08:43,702:INFO:Creating metrics dataframe
2024-11-25 23:08:43,709:INFO:Initializing Light Gradient Boosting Machine
2024-11-25 23:08:43,709:INFO:Total runtime is 5.564726372559865 minutes
2024-11-25 23:08:43,709:INFO:SubProcess create_model() called ==================================
2024-11-25 23:08:43,709:INFO:Initializing create_model()
2024-11-25 23:08:43,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:08:43,709:INFO:Checking exceptions
2024-11-25 23:08:43,709:INFO:Importing libraries
2024-11-25 23:08:43,709:INFO:Copying training dataset
2024-11-25 23:08:43,816:INFO:Defining folds
2024-11-25 23:08:43,816:INFO:Declaring metric variables
2024-11-25 23:08:43,849:INFO:Importing untrained model
2024-11-25 23:08:43,849:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-25 23:08:43,889:INFO:Starting cross validation
2024-11-25 23:08:43,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:08:52,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:52,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:52,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:52,888:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:52,888:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:52,944:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:54,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:54,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:54,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:54,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:54,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:54,824:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:56,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:56,472:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:56,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:56,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:56,590:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:56,621:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:58,240:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:58,271:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:58,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:58,304:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:58,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:08:58,318:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:00,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:00,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:00,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:00,133:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:00,169:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:00,214:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:00,264:INFO:Calculating mean and std
2024-11-25 23:09:00,264:INFO:Creating metrics dataframe
2024-11-25 23:09:00,282:INFO:Uploading results into container
2024-11-25 23:09:00,286:INFO:Uploading model into container now
2024-11-25 23:09:00,286:INFO:_master_model_container: 13
2024-11-25 23:09:00,286:INFO:_display_container: 2
2024-11-25 23:09:00,286:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3015, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-25 23:09:00,286:INFO:create_model() successfully completed......................................
2024-11-25 23:09:00,734:INFO:SubProcess create_model() end ==================================
2024-11-25 23:09:00,734:INFO:Creating metrics dataframe
2024-11-25 23:09:00,764:INFO:Initializing Dummy Classifier
2024-11-25 23:09:00,764:INFO:Total runtime is 5.848985747496287 minutes
2024-11-25 23:09:00,790:INFO:SubProcess create_model() called ==================================
2024-11-25 23:09:00,793:INFO:Initializing create_model()
2024-11-25 23:09:00,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E19F86750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:09:00,793:INFO:Checking exceptions
2024-11-25 23:09:00,793:INFO:Importing libraries
2024-11-25 23:09:00,793:INFO:Copying training dataset
2024-11-25 23:09:00,889:INFO:Defining folds
2024-11-25 23:09:00,889:INFO:Declaring metric variables
2024-11-25 23:09:00,910:INFO:Importing untrained model
2024-11-25 23:09:00,940:INFO:Dummy Classifier Imported successfully
2024-11-25 23:09:00,999:INFO:Starting cross validation
2024-11-25 23:09:00,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:09:01,761:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:01,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:01,801:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:01,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:01,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:01,835:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:01,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:03,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:03,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:03,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:03,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:04,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,678:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:04,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:04,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:04,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:05,497:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:05,527:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:05,570:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:05,570:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:05,708:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:05,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:05,774:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:05,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:06,430:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:06,444:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:06,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:06,471:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:06,532:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:06,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:06,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:09:06,559:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:09:06,581:INFO:Calculating mean and std
2024-11-25 23:09:06,603:INFO:Creating metrics dataframe
2024-11-25 23:09:06,603:INFO:Uploading results into container
2024-11-25 23:09:06,612:INFO:Uploading model into container now
2024-11-25 23:09:06,612:INFO:_master_model_container: 14
2024-11-25 23:09:06,612:INFO:_display_container: 2
2024-11-25 23:09:06,612:INFO:DummyClassifier(constant=None, random_state=3015, strategy='prior')
2024-11-25 23:09:06,612:INFO:create_model() successfully completed......................................
2024-11-25 23:09:07,118:INFO:SubProcess create_model() end ==================================
2024-11-25 23:09:07,118:INFO:Creating metrics dataframe
2024-11-25 23:09:07,190:INFO:Initializing create_model()
2024-11-25 23:09:07,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=DummyClassifier(constant=None, random_state=3015, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:09:07,190:INFO:Checking exceptions
2024-11-25 23:09:07,233:INFO:Importing libraries
2024-11-25 23:09:07,233:INFO:Copying training dataset
2024-11-25 23:09:07,299:INFO:Defining folds
2024-11-25 23:09:07,299:INFO:Declaring metric variables
2024-11-25 23:09:07,299:INFO:Importing untrained model
2024-11-25 23:09:07,299:INFO:Declaring custom model
2024-11-25 23:09:07,321:INFO:Dummy Classifier Imported successfully
2024-11-25 23:09:07,397:INFO:Cross validation set to False
2024-11-25 23:09:07,398:INFO:Fitting Model
2024-11-25 23:09:08,114:INFO:DummyClassifier(constant=None, random_state=3015, strategy='prior')
2024-11-25 23:09:08,114:INFO:create_model() successfully completed......................................
2024-11-25 23:09:09,128:INFO:_master_model_container: 14
2024-11-25 23:09:09,128:INFO:_display_container: 2
2024-11-25 23:09:09,128:INFO:DummyClassifier(constant=None, random_state=3015, strategy='prior')
2024-11-25 23:09:09,128:INFO:compare_models() successfully completed......................................
2024-11-25 23:09:09,128:INFO:Initializing automl()
2024-11-25 23:09:09,128:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-25 23:09:09,239:INFO:Model Selection Basis : CV Results on Training set
2024-11-25 23:09:09,239:INFO:Checking model 0
2024-11-25 23:09:09,241:INFO:Checking model 1
2024-11-25 23:09:09,241:INFO:Checking model 2
2024-11-25 23:09:09,242:INFO:Checking model 3
2024-11-25 23:09:09,243:INFO:Checking model 4
2024-11-25 23:09:09,244:INFO:Checking model 5
2024-11-25 23:09:09,244:INFO:Checking model 6
2024-11-25 23:09:09,245:INFO:Checking model 7
2024-11-25 23:09:09,246:INFO:Checking model 8
2024-11-25 23:09:09,246:INFO:Checking model 9
2024-11-25 23:09:09,247:INFO:Checking model 10
2024-11-25 23:09:09,248:INFO:Checking model 11
2024-11-25 23:09:09,330:INFO:Checking model 12
2024-11-25 23:09:09,330:INFO:Checking model 13
2024-11-25 23:09:09,330:INFO:Initializing create_model()
2024-11-25 23:09:09,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:09:09,330:INFO:Checking exceptions
2024-11-25 23:09:09,346:INFO:Importing libraries
2024-11-25 23:09:09,346:INFO:Copying training dataset
2024-11-25 23:09:09,793:INFO:Defining folds
2024-11-25 23:09:09,793:INFO:Declaring metric variables
2024-11-25 23:09:09,793:INFO:Importing untrained model
2024-11-25 23:09:09,793:INFO:Declaring custom model
2024-11-25 23:09:09,794:INFO:Naive Bayes Imported successfully
2024-11-25 23:09:09,799:INFO:Cross validation set to False
2024-11-25 23:09:09,799:INFO:Fitting Model
2024-11-25 23:09:10,601:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-25 23:09:10,601:INFO:create_model() successfully completed......................................
2024-11-25 23:09:12,346:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-25 23:09:12,346:INFO:automl() successfully completed......................................
2024-11-25 23:12:23,817:INFO:Initializing predict_model()
2024-11-25 23:12:23,817:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E13595300>)
2024-11-25 23:12:23,817:INFO:Checking exceptions
2024-11-25 23:12:23,817:INFO:Preloading libraries
2024-11-25 23:12:23,817:INFO:Set up data.
2024-11-25 23:12:23,848:INFO:Set up index.
2024-11-25 23:13:04,946:INFO:Initializing tune_model()
2024-11-25 23:13:04,948:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-11-25 23:13:04,948:INFO:Checking exceptions
2024-11-25 23:13:05,016:INFO:Copying training dataset
2024-11-25 23:13:05,450:INFO:Checking base model
2024-11-25 23:13:05,450:INFO:Base model : Naive Bayes
2024-11-25 23:13:05,450:INFO:Declaring metric variables
2024-11-25 23:13:05,468:INFO:Defining Hyperparameters
2024-11-25 23:13:06,482:INFO:Tuning with n_jobs=-1
2024-11-25 23:13:06,482:INFO:Initializing RandomizedSearchCV
2024-11-25 23:13:55,630:INFO:best_params: {'actual_estimator__var_smoothing': 0.004}
2024-11-25 23:13:55,630:INFO:Hyperparameter search completed
2024-11-25 23:13:55,630:INFO:SubProcess create_model() called ==================================
2024-11-25 23:13:55,630:INFO:Initializing create_model()
2024-11-25 23:13:55,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E07952090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'var_smoothing': 0.004})
2024-11-25 23:13:55,645:INFO:Checking exceptions
2024-11-25 23:13:55,646:INFO:Importing libraries
2024-11-25 23:13:55,646:INFO:Copying training dataset
2024-11-25 23:13:55,705:INFO:Defining folds
2024-11-25 23:13:55,705:INFO:Declaring metric variables
2024-11-25 23:13:55,705:INFO:Importing untrained model
2024-11-25 23:13:55,705:INFO:Declaring custom model
2024-11-25 23:13:55,727:INFO:Naive Bayes Imported successfully
2024-11-25 23:13:55,755:INFO:Starting cross validation
2024-11-25 23:13:55,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:13:56,681:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:56,702:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:56,702:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:56,717:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:13:56,717:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:56,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:56,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:13:56,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:59,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:59,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:59,175:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:13:59,175:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:59,175:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:59,207:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:13:59,232:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:13:59,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:00,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:00,121:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:00,121:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:00,131:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:14:00,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:00,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:00,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:14:00,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:01,162:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:01,173:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:01,173:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:01,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:14:01,200:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:01,200:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:01,211:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:14:01,227:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:02,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:02,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:02,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:02,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:14:02,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:02,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:02,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-25 23:14:02,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:02,357:INFO:Calculating mean and std
2024-11-25 23:14:02,357:INFO:Creating metrics dataframe
2024-11-25 23:14:02,403:INFO:Finalizing model
2024-11-25 23:14:03,048:INFO:Uploading results into container
2024-11-25 23:14:03,048:INFO:Uploading model into container now
2024-11-25 23:14:03,048:INFO:_master_model_container: 15
2024-11-25 23:14:03,048:INFO:_display_container: 3
2024-11-25 23:14:03,048:INFO:GaussianNB(priors=None, var_smoothing=0.004)
2024-11-25 23:14:03,048:INFO:create_model() successfully completed......................................
2024-11-25 23:14:03,656:INFO:SubProcess create_model() end ==================================
2024-11-25 23:14:03,656:INFO:choose_better activated
2024-11-25 23:14:03,672:INFO:SubProcess create_model() called ==================================
2024-11-25 23:14:03,672:INFO:Initializing create_model()
2024-11-25 23:14:03,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:14:03,672:INFO:Checking exceptions
2024-11-25 23:14:03,686:INFO:Importing libraries
2024-11-25 23:14:03,686:INFO:Copying training dataset
2024-11-25 23:14:03,759:INFO:Defining folds
2024-11-25 23:14:03,761:INFO:Declaring metric variables
2024-11-25 23:14:03,761:INFO:Importing untrained model
2024-11-25 23:14:03,761:INFO:Declaring custom model
2024-11-25 23:14:03,761:INFO:Naive Bayes Imported successfully
2024-11-25 23:14:03,761:INFO:Starting cross validation
2024-11-25 23:14:03,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:14:04,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:04,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:04,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:04,994:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:05,014:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:05,304:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:06,901:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:06,943:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:06,968:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:07,076:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:07,129:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:07,139:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:08,120:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:08,120:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:08,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:08,218:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:08,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:08,289:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:09,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:09,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:09,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:09,478:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:09,494:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:09,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:10,455:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:10,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:10,498:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:10,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:10,605:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:10,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:14:10,660:INFO:Calculating mean and std
2024-11-25 23:14:10,660:INFO:Creating metrics dataframe
2024-11-25 23:14:10,660:INFO:Finalizing model
2024-11-25 23:14:11,254:INFO:Uploading results into container
2024-11-25 23:14:11,254:INFO:Uploading model into container now
2024-11-25 23:14:11,254:INFO:_master_model_container: 16
2024-11-25 23:14:11,254:INFO:_display_container: 4
2024-11-25 23:14:11,254:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-25 23:14:11,254:INFO:create_model() successfully completed......................................
2024-11-25 23:14:11,725:INFO:SubProcess create_model() end ==================================
2024-11-25 23:14:11,725:INFO:GaussianNB(priors=None, var_smoothing=1e-09) result for Accuracy is 0.7302
2024-11-25 23:14:11,725:INFO:GaussianNB(priors=None, var_smoothing=0.004) result for Accuracy is 0.7665
2024-11-25 23:14:11,725:INFO:GaussianNB(priors=None, var_smoothing=0.004) is best model
2024-11-25 23:14:11,725:INFO:choose_better completed
2024-11-25 23:14:11,916:INFO:_master_model_container: 16
2024-11-25 23:14:11,916:INFO:_display_container: 3
2024-11-25 23:14:11,916:INFO:GaussianNB(priors=None, var_smoothing=0.004)
2024-11-25 23:14:11,918:INFO:tune_model() successfully completed......................................
2024-11-25 23:20:54,053:INFO:Initializing predict_model()
2024-11-25 23:20:54,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E1333A7D0>, estimator=GaussianNB(priors=None, var_smoothing=0.004), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E135944A0>)
2024-11-25 23:20:54,053:INFO:Checking exceptions
2024-11-25 23:20:54,053:INFO:Preloading libraries
2024-11-25 23:20:54,057:INFO:Set up data.
2024-11-25 23:20:54,064:INFO:Set up index.
2024-11-25 23:51:23,511:INFO:PyCaret ClassificationExperiment
2024-11-25 23:51:23,513:INFO:Logging name: clf-default-name
2024-11-25 23:51:23,513:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-25 23:51:23,513:INFO:version 3.3.2
2024-11-25 23:51:23,513:INFO:Initializing setup()
2024-11-25 23:51:23,513:INFO:self.USI: c476
2024-11-25 23:51:23,513:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-25 23:51:23,514:INFO:Checking environment
2024-11-25 23:51:23,514:INFO:python_version: 3.11.9
2024-11-25 23:51:23,514:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-25 23:51:23,514:INFO:machine: AMD64
2024-11-25 23:51:23,514:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-25 23:51:23,518:INFO:Memory: svmem(total=4293971968, available=780591104, percent=81.8, used=3513380864, free=780591104)
2024-11-25 23:51:23,518:INFO:Physical Core: 2
2024-11-25 23:51:23,518:INFO:Logical Core: 2
2024-11-25 23:51:23,518:INFO:Checking libraries
2024-11-25 23:51:23,518:INFO:System:
2024-11-25 23:51:23,518:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-25 23:51:23,518:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-25 23:51:23,518:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-25 23:51:23,518:INFO:PyCaret required dependencies:
2024-11-25 23:51:23,518:INFO:                 pip: 24.3.1
2024-11-25 23:51:23,518:INFO:          setuptools: 65.5.0
2024-11-25 23:51:23,518:INFO:             pycaret: 3.3.2
2024-11-25 23:51:23,518:INFO:             IPython: 8.26.0
2024-11-25 23:51:23,518:INFO:          ipywidgets: 8.1.5
2024-11-25 23:51:23,518:INFO:                tqdm: 4.66.5
2024-11-25 23:51:23,518:INFO:               numpy: 1.26.4
2024-11-25 23:51:23,520:INFO:              pandas: 2.1.4
2024-11-25 23:51:23,520:INFO:              jinja2: 3.1.4
2024-11-25 23:51:23,520:INFO:               scipy: 1.11.4
2024-11-25 23:51:23,520:INFO:              joblib: 1.3.2
2024-11-25 23:51:23,520:INFO:             sklearn: 1.4.2
2024-11-25 23:51:23,520:INFO:                pyod: 2.0.2
2024-11-25 23:51:23,520:INFO:            imblearn: 0.12.4
2024-11-25 23:51:23,520:INFO:   category_encoders: 2.6.4
2024-11-25 23:51:23,520:INFO:            lightgbm: 4.5.0
2024-11-25 23:51:23,520:INFO:               numba: 0.60.0
2024-11-25 23:51:23,520:INFO:            requests: 2.32.3
2024-11-25 23:51:23,520:INFO:          matplotlib: 3.7.5
2024-11-25 23:51:23,520:INFO:          scikitplot: 0.3.7
2024-11-25 23:51:23,520:INFO:         yellowbrick: 1.5
2024-11-25 23:51:23,520:INFO:              plotly: 5.24.1
2024-11-25 23:51:23,520:INFO:    plotly-resampler: Not installed
2024-11-25 23:51:23,521:INFO:             kaleido: 0.2.1
2024-11-25 23:51:23,521:INFO:           schemdraw: 0.15
2024-11-25 23:51:23,521:INFO:         statsmodels: 0.14.3
2024-11-25 23:51:23,521:INFO:              sktime: 0.26.0
2024-11-25 23:51:23,521:INFO:               tbats: 1.1.3
2024-11-25 23:51:23,521:INFO:            pmdarima: 2.0.4
2024-11-25 23:51:23,521:INFO:              psutil: 6.0.0
2024-11-25 23:51:23,521:INFO:          markupsafe: 3.0.2
2024-11-25 23:51:23,521:INFO:             pickle5: Not installed
2024-11-25 23:51:23,521:INFO:         cloudpickle: 3.0.0
2024-11-25 23:51:23,521:INFO:         deprecation: 2.1.0
2024-11-25 23:51:23,521:INFO:              xxhash: 3.5.0
2024-11-25 23:51:23,521:INFO:           wurlitzer: Not installed
2024-11-25 23:51:23,521:INFO:PyCaret optional dependencies:
2024-11-25 23:51:23,521:INFO:                shap: 0.46.0
2024-11-25 23:51:23,521:INFO:           interpret: Not installed
2024-11-25 23:51:23,521:INFO:                umap: Not installed
2024-11-25 23:51:23,521:INFO:     ydata_profiling: Not installed
2024-11-25 23:51:23,521:INFO:  explainerdashboard: Not installed
2024-11-25 23:51:23,521:INFO:             autoviz: Not installed
2024-11-25 23:51:23,521:INFO:           fairlearn: Not installed
2024-11-25 23:51:23,521:INFO:          deepchecks: Not installed
2024-11-25 23:51:23,521:INFO:             xgboost: Not installed
2024-11-25 23:51:23,521:INFO:            catboost: Not installed
2024-11-25 23:51:23,521:INFO:              kmodes: Not installed
2024-11-25 23:51:23,521:INFO:             mlxtend: Not installed
2024-11-25 23:51:23,522:INFO:       statsforecast: Not installed
2024-11-25 23:51:23,522:INFO:        tune_sklearn: Not installed
2024-11-25 23:51:23,522:INFO:                 ray: Not installed
2024-11-25 23:51:23,522:INFO:            hyperopt: Not installed
2024-11-25 23:51:23,522:INFO:              optuna: 4.1.0
2024-11-25 23:51:23,522:INFO:               skopt: Not installed
2024-11-25 23:51:23,522:INFO:              mlflow: Not installed
2024-11-25 23:51:23,522:INFO:              gradio: Not installed
2024-11-25 23:51:23,522:INFO:             fastapi: Not installed
2024-11-25 23:51:23,522:INFO:             uvicorn: Not installed
2024-11-25 23:51:23,522:INFO:              m2cgen: Not installed
2024-11-25 23:51:23,522:INFO:           evidently: Not installed
2024-11-25 23:51:23,522:INFO:               fugue: Not installed
2024-11-25 23:51:23,522:INFO:           streamlit: Not installed
2024-11-25 23:51:23,522:INFO:             prophet: Not installed
2024-11-25 23:51:23,522:INFO:None
2024-11-25 23:51:23,522:INFO:Set up data.
2024-11-25 23:51:24,147:INFO:Set up folding strategy.
2024-11-25 23:51:24,147:INFO:Set up train/test split.
2024-11-25 23:51:24,311:INFO:Set up index.
2024-11-25 23:51:24,314:INFO:Assigning column types.
2024-11-25 23:51:24,412:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-25 23:51:24,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 23:51:24,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 23:51:24,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:24,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:25,178:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-25 23:51:25,178:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 23:51:25,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:25,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:25,318:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-25 23:51:25,553:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 23:51:25,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:25,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:25,679:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-25 23:51:25,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:25,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:25,788:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-25 23:51:26,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:26,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:26,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:26,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:26,696:INFO:Preparing preprocessing pipeline...
2024-11-25 23:51:26,725:INFO:Set up label encoding.
2024-11-25 23:51:26,725:INFO:Set up simple imputation.
2024-11-25 23:51:27,288:INFO:Finished creating preprocessing pipeline.
2024-11-25 23:51:27,350:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-25 23:51:27,373:INFO:Creating final display dataframe.
2024-11-25 23:51:28,913:INFO:Setup _display_container:                     Description             Value
0                    Session id              6917
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c476
2024-11-25 23:51:29,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:29,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:29,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:29,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-25 23:51:29,678:INFO:setup() successfully completed in 6.18s...............
2024-11-25 23:51:30,312:INFO:Initializing compare_models()
2024-11-25 23:51:30,313:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-25 23:51:30,315:INFO:Checking exceptions
2024-11-25 23:51:31,744:INFO:Preparing display monitor
2024-11-25 23:51:32,280:INFO:Initializing Logistic Regression
2024-11-25 23:51:32,280:INFO:Total runtime is 0.0 minutes
2024-11-25 23:51:32,292:INFO:SubProcess create_model() called ==================================
2024-11-25 23:51:32,296:INFO:Initializing create_model()
2024-11-25 23:51:32,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:51:32,296:INFO:Checking exceptions
2024-11-25 23:51:32,296:INFO:Importing libraries
2024-11-25 23:51:32,296:INFO:Copying training dataset
2024-11-25 23:51:32,972:INFO:Defining folds
2024-11-25 23:51:32,972:INFO:Declaring metric variables
2024-11-25 23:51:32,984:INFO:Importing untrained model
2024-11-25 23:51:32,992:INFO:Logistic Regression Imported successfully
2024-11-25 23:51:33,209:INFO:Starting cross validation
2024-11-25 23:51:33,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:52:12,202:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:12,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:12,328:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:12,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:12,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:12,524:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:14,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:14,713:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:14,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:15,400:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:15,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:15,605:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:17,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:17,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:17,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:17,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:17,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:18,265:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:19,977:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:20,081:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:20,174:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:20,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:20,494:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:20,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:22,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:22,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:22,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:22,613:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:22,698:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:22,776:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:22,861:INFO:Calculating mean and std
2024-11-25 23:52:22,884:INFO:Creating metrics dataframe
2024-11-25 23:52:22,893:INFO:Uploading results into container
2024-11-25 23:52:22,893:INFO:Uploading model into container now
2024-11-25 23:52:22,893:INFO:_master_model_container: 1
2024-11-25 23:52:22,893:INFO:_display_container: 2
2024-11-25 23:52:22,893:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6917, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-25 23:52:22,893:INFO:create_model() successfully completed......................................
2024-11-25 23:52:27,986:INFO:SubProcess create_model() end ==================================
2024-11-25 23:52:27,986:INFO:Creating metrics dataframe
2024-11-25 23:52:28,018:INFO:Initializing K Neighbors Classifier
2024-11-25 23:52:28,018:INFO:Total runtime is 0.9289663910865784 minutes
2024-11-25 23:52:28,049:INFO:SubProcess create_model() called ==================================
2024-11-25 23:52:28,049:INFO:Initializing create_model()
2024-11-25 23:52:28,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:52:28,049:INFO:Checking exceptions
2024-11-25 23:52:28,049:INFO:Importing libraries
2024-11-25 23:52:28,049:INFO:Copying training dataset
2024-11-25 23:52:28,221:INFO:Defining folds
2024-11-25 23:52:28,221:INFO:Declaring metric variables
2024-11-25 23:52:28,268:INFO:Importing untrained model
2024-11-25 23:52:28,268:INFO:K Neighbors Classifier Imported successfully
2024-11-25 23:52:28,389:INFO:Starting cross validation
2024-11-25 23:52:28,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:52:32,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:32,308:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:32,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:32,527:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:32,556:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:32,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:34,235:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:34,271:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:34,302:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:34,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:34,547:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:34,588:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:36,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:36,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:36,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:36,310:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:36,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:36,419:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:38,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:38,216:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:38,264:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:38,301:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:38,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:38,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:41,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:41,305:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:41,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:41,559:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:41,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:41,631:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:41,676:INFO:Calculating mean and std
2024-11-25 23:52:41,680:INFO:Creating metrics dataframe
2024-11-25 23:52:41,697:INFO:Uploading results into container
2024-11-25 23:52:41,700:INFO:Uploading model into container now
2024-11-25 23:52:41,700:INFO:_master_model_container: 2
2024-11-25 23:52:41,700:INFO:_display_container: 2
2024-11-25 23:52:41,701:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-25 23:52:41,701:INFO:create_model() successfully completed......................................
2024-11-25 23:52:42,127:INFO:SubProcess create_model() end ==================================
2024-11-25 23:52:42,127:INFO:Creating metrics dataframe
2024-11-25 23:52:42,158:INFO:Initializing Naive Bayes
2024-11-25 23:52:42,158:INFO:Total runtime is 1.164632785320282 minutes
2024-11-25 23:52:42,158:INFO:SubProcess create_model() called ==================================
2024-11-25 23:52:42,158:INFO:Initializing create_model()
2024-11-25 23:52:42,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:52:42,158:INFO:Checking exceptions
2024-11-25 23:52:42,158:INFO:Importing libraries
2024-11-25 23:52:42,158:INFO:Copying training dataset
2024-11-25 23:52:42,291:INFO:Defining folds
2024-11-25 23:52:42,291:INFO:Declaring metric variables
2024-11-25 23:52:42,331:INFO:Importing untrained model
2024-11-25 23:52:42,331:INFO:Naive Bayes Imported successfully
2024-11-25 23:52:42,357:INFO:Starting cross validation
2024-11-25 23:52:42,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:52:42,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:42,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:42,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:42,657:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:42,679:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:42,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,047:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,076:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,076:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,392:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:43,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:44,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:44,423:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:44,513:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:44,513:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:44,540:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:44,570:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:45,427:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:45,479:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:45,528:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:45,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:45,649:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:45,649:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:45,720:INFO:Calculating mean and std
2024-11-25 23:52:45,730:INFO:Creating metrics dataframe
2024-11-25 23:52:45,732:INFO:Uploading results into container
2024-11-25 23:52:45,734:INFO:Uploading model into container now
2024-11-25 23:52:45,735:INFO:_master_model_container: 3
2024-11-25 23:52:45,735:INFO:_display_container: 2
2024-11-25 23:52:45,735:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-25 23:52:45,735:INFO:create_model() successfully completed......................................
2024-11-25 23:52:46,155:INFO:SubProcess create_model() end ==================================
2024-11-25 23:52:46,155:INFO:Creating metrics dataframe
2024-11-25 23:52:46,187:INFO:Initializing Decision Tree Classifier
2024-11-25 23:52:46,187:INFO:Total runtime is 1.2317747076352439 minutes
2024-11-25 23:52:46,202:INFO:SubProcess create_model() called ==================================
2024-11-25 23:52:46,202:INFO:Initializing create_model()
2024-11-25 23:52:46,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:52:46,202:INFO:Checking exceptions
2024-11-25 23:52:46,202:INFO:Importing libraries
2024-11-25 23:52:46,202:INFO:Copying training dataset
2024-11-25 23:52:46,390:INFO:Defining folds
2024-11-25 23:52:46,390:INFO:Declaring metric variables
2024-11-25 23:52:46,439:INFO:Importing untrained model
2024-11-25 23:52:46,439:INFO:Decision Tree Classifier Imported successfully
2024-11-25 23:52:46,499:INFO:Starting cross validation
2024-11-25 23:52:46,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:52:52,347:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:52,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:53,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:53,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:53,207:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:53,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:56,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:56,464:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:56,521:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:56,521:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:56,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:56,679:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:58,425:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:58,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:58,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:58,531:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:58,557:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:52:58,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:01,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:01,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:01,623:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:01,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:01,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:01,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:04,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:04,347:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:04,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:04,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:04,434:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:04,582:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:04,738:INFO:Calculating mean and std
2024-11-25 23:53:04,741:INFO:Creating metrics dataframe
2024-11-25 23:53:04,748:INFO:Uploading results into container
2024-11-25 23:53:04,749:INFO:Uploading model into container now
2024-11-25 23:53:04,749:INFO:_master_model_container: 4
2024-11-25 23:53:04,749:INFO:_display_container: 2
2024-11-25 23:53:04,749:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6917, splitter='best')
2024-11-25 23:53:04,749:INFO:create_model() successfully completed......................................
2024-11-25 23:53:05,772:INFO:SubProcess create_model() end ==================================
2024-11-25 23:53:05,772:INFO:Creating metrics dataframe
2024-11-25 23:53:05,835:INFO:Initializing SVM - Linear Kernel
2024-11-25 23:53:05,835:INFO:Total runtime is 1.5592433015505474 minutes
2024-11-25 23:53:05,937:INFO:SubProcess create_model() called ==================================
2024-11-25 23:53:05,937:INFO:Initializing create_model()
2024-11-25 23:53:05,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:53:05,937:INFO:Checking exceptions
2024-11-25 23:53:05,937:INFO:Importing libraries
2024-11-25 23:53:05,937:INFO:Copying training dataset
2024-11-25 23:53:06,147:INFO:Defining folds
2024-11-25 23:53:06,147:INFO:Declaring metric variables
2024-11-25 23:53:06,182:INFO:Importing untrained model
2024-11-25 23:53:06,189:INFO:SVM - Linear Kernel Imported successfully
2024-11-25 23:53:06,210:INFO:Starting cross validation
2024-11-25 23:53:06,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:53:08,214:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:08,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:08,361:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:08,361:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:08,485:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:08,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:10,153:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:10,177:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:10,218:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:10,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:10,395:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:10,416:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,107:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,138:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:11,810:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,066:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,149:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,710:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,749:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,786:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:12,883:INFO:Calculating mean and std
2024-11-25 23:53:12,883:INFO:Creating metrics dataframe
2024-11-25 23:53:12,912:INFO:Uploading results into container
2024-11-25 23:53:12,914:INFO:Uploading model into container now
2024-11-25 23:53:12,917:INFO:_master_model_container: 5
2024-11-25 23:53:12,917:INFO:_display_container: 2
2024-11-25 23:53:12,917:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6917, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-25 23:53:12,917:INFO:create_model() successfully completed......................................
2024-11-25 23:53:13,536:INFO:SubProcess create_model() end ==================================
2024-11-25 23:53:13,536:INFO:Creating metrics dataframe
2024-11-25 23:53:13,539:INFO:Initializing Ridge Classifier
2024-11-25 23:53:13,539:INFO:Total runtime is 1.6876479784647624 minutes
2024-11-25 23:53:13,539:INFO:SubProcess create_model() called ==================================
2024-11-25 23:53:13,539:INFO:Initializing create_model()
2024-11-25 23:53:13,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:53:13,539:INFO:Checking exceptions
2024-11-25 23:53:13,550:INFO:Importing libraries
2024-11-25 23:53:13,550:INFO:Copying training dataset
2024-11-25 23:53:13,612:INFO:Defining folds
2024-11-25 23:53:13,612:INFO:Declaring metric variables
2024-11-25 23:53:13,629:INFO:Importing untrained model
2024-11-25 23:53:13,645:INFO:Ridge Classifier Imported successfully
2024-11-25 23:53:13,663:INFO:Starting cross validation
2024-11-25 23:53:13,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:53:13,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:13,886:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:13,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:13,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:13,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:13,921:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:14,312:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:14,320:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:14,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:14,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:14,391:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:14,422:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:15,522:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:15,541:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:15,598:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:15,642:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:15,679:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:15,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:16,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:16,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:16,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:16,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:16,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:16,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:17,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:17,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:17,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:17,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:17,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:17,114:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:17,182:INFO:Calculating mean and std
2024-11-25 23:53:17,182:INFO:Creating metrics dataframe
2024-11-25 23:53:17,182:INFO:Uploading results into container
2024-11-25 23:53:17,182:INFO:Uploading model into container now
2024-11-25 23:53:17,182:INFO:_master_model_container: 6
2024-11-25 23:53:17,182:INFO:_display_container: 2
2024-11-25 23:53:17,182:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6917, solver='auto',
                tol=0.0001)
2024-11-25 23:53:17,182:INFO:create_model() successfully completed......................................
2024-11-25 23:53:17,826:INFO:SubProcess create_model() end ==================================
2024-11-25 23:53:17,826:INFO:Creating metrics dataframe
2024-11-25 23:53:17,855:INFO:Initializing Random Forest Classifier
2024-11-25 23:53:17,855:INFO:Total runtime is 1.7595776359240214 minutes
2024-11-25 23:53:17,855:INFO:SubProcess create_model() called ==================================
2024-11-25 23:53:17,873:INFO:Initializing create_model()
2024-11-25 23:53:17,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:53:17,873:INFO:Checking exceptions
2024-11-25 23:53:17,873:INFO:Importing libraries
2024-11-25 23:53:17,873:INFO:Copying training dataset
2024-11-25 23:53:18,026:INFO:Defining folds
2024-11-25 23:53:18,026:INFO:Declaring metric variables
2024-11-25 23:53:18,036:INFO:Importing untrained model
2024-11-25 23:53:18,042:INFO:Random Forest Classifier Imported successfully
2024-11-25 23:53:18,060:INFO:Starting cross validation
2024-11-25 23:53:18,083:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:53:40,554:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:40,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:40,625:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:40,825:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:40,873:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:53:40,906:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:01,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:01,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:01,971:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:02,248:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:02,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:02,335:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:23,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:23,803:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:23,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:24,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:24,025:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:24,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:44,630:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:44,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:44,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:44,749:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:44,788:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:54:44,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:07,234:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:07,286:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:07,326:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:07,524:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:07,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:07,573:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:07,636:INFO:Calculating mean and std
2024-11-25 23:55:07,646:INFO:Creating metrics dataframe
2024-11-25 23:55:07,655:INFO:Uploading results into container
2024-11-25 23:55:07,659:INFO:Uploading model into container now
2024-11-25 23:55:07,665:INFO:_master_model_container: 7
2024-11-25 23:55:07,665:INFO:_display_container: 2
2024-11-25 23:55:07,669:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6917, verbose=0,
                       warm_start=False)
2024-11-25 23:55:07,669:INFO:create_model() successfully completed......................................
2024-11-25 23:55:08,185:INFO:SubProcess create_model() end ==================================
2024-11-25 23:55:08,185:INFO:Creating metrics dataframe
2024-11-25 23:55:08,197:INFO:Initializing Quadratic Discriminant Analysis
2024-11-25 23:55:08,197:INFO:Total runtime is 3.59861394961675 minutes
2024-11-25 23:55:08,197:INFO:SubProcess create_model() called ==================================
2024-11-25 23:55:08,197:INFO:Initializing create_model()
2024-11-25 23:55:08,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:55:08,197:INFO:Checking exceptions
2024-11-25 23:55:08,197:INFO:Importing libraries
2024-11-25 23:55:08,197:INFO:Copying training dataset
2024-11-25 23:55:08,431:INFO:Defining folds
2024-11-25 23:55:08,431:INFO:Declaring metric variables
2024-11-25 23:55:08,463:INFO:Importing untrained model
2024-11-25 23:55:08,503:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-25 23:55:08,555:INFO:Starting cross validation
2024-11-25 23:55:08,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:55:08,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:08,866:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:08,965:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:08,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,033:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,231:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:09,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:09,310:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:09,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:10,095:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:10,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:10,364:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:10,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:10,445:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:10,498:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:10,573:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:10,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:11,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:11,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:11,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:11,547:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:11,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:11,647:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:11,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:11,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:12,122:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:12,236:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-25 23:55:12,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:12,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:12,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:12,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:12,393:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:12,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:12,469:INFO:Calculating mean and std
2024-11-25 23:55:12,487:INFO:Creating metrics dataframe
2024-11-25 23:55:12,497:INFO:Uploading results into container
2024-11-25 23:55:12,497:INFO:Uploading model into container now
2024-11-25 23:55:12,497:INFO:_master_model_container: 8
2024-11-25 23:55:12,497:INFO:_display_container: 2
2024-11-25 23:55:12,497:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-25 23:55:12,497:INFO:create_model() successfully completed......................................
2024-11-25 23:55:12,956:INFO:SubProcess create_model() end ==================================
2024-11-25 23:55:12,956:INFO:Creating metrics dataframe
2024-11-25 23:55:12,967:INFO:Initializing Ada Boost Classifier
2024-11-25 23:55:12,967:INFO:Total runtime is 3.6781101942062375 minutes
2024-11-25 23:55:12,967:INFO:SubProcess create_model() called ==================================
2024-11-25 23:55:12,967:INFO:Initializing create_model()
2024-11-25 23:55:12,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:55:12,967:INFO:Checking exceptions
2024-11-25 23:55:12,967:INFO:Importing libraries
2024-11-25 23:55:12,967:INFO:Copying training dataset
2024-11-25 23:55:13,139:INFO:Defining folds
2024-11-25 23:55:13,139:INFO:Declaring metric variables
2024-11-25 23:55:13,210:INFO:Importing untrained model
2024-11-25 23:55:13,232:INFO:Ada Boost Classifier Imported successfully
2024-11-25 23:55:13,296:INFO:Starting cross validation
2024-11-25 23:55:13,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:55:13,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:13,554:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:20,286:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:20,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:20,343:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:20,366:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:20,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:20,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:20,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:20,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:25,891:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:25,946:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:25,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:26,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:26,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:26,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:26,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:26,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:32,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:32,213:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:32,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:32,302:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:32,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:32,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:32,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:32,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:38,648:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:38,680:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:38,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:38,879:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:38,901:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:38,911:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:38,922:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:39,064:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-25 23:55:44,296:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:44,326:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:44,368:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:44,486:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:44,496:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:44,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:55:44,598:INFO:Calculating mean and std
2024-11-25 23:55:44,598:INFO:Creating metrics dataframe
2024-11-25 23:55:44,607:INFO:Uploading results into container
2024-11-25 23:55:44,608:INFO:Uploading model into container now
2024-11-25 23:55:44,613:INFO:_master_model_container: 9
2024-11-25 23:55:44,617:INFO:_display_container: 2
2024-11-25 23:55:44,619:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6917)
2024-11-25 23:55:44,620:INFO:create_model() successfully completed......................................
2024-11-25 23:55:44,989:INFO:SubProcess create_model() end ==================================
2024-11-25 23:55:44,989:INFO:Creating metrics dataframe
2024-11-25 23:55:45,031:INFO:Initializing Gradient Boosting Classifier
2024-11-25 23:55:45,031:INFO:Total runtime is 4.212517233689626 minutes
2024-11-25 23:55:45,037:INFO:SubProcess create_model() called ==================================
2024-11-25 23:55:45,037:INFO:Initializing create_model()
2024-11-25 23:55:45,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:55:45,037:INFO:Checking exceptions
2024-11-25 23:55:45,037:INFO:Importing libraries
2024-11-25 23:55:45,037:INFO:Copying training dataset
2024-11-25 23:55:45,151:INFO:Defining folds
2024-11-25 23:55:45,153:INFO:Declaring metric variables
2024-11-25 23:55:45,161:INFO:Importing untrained model
2024-11-25 23:55:45,186:INFO:Gradient Boosting Classifier Imported successfully
2024-11-25 23:55:45,193:INFO:Starting cross validation
2024-11-25 23:55:45,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:56:23,331:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:56:23,338:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:56:23,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:56:23,406:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:56:23,452:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:56:23,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:07,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:07,749:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:07,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:08,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:08,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:08,653:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:58,474:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:58,501:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:58,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:58,618:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:58,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:57:58,694:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:23,205:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:23,217:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:23,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:23,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:23,413:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:23,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:46,772:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:46,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:46,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:47,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:47,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:47,382:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:47,439:INFO:Calculating mean and std
2024-11-25 23:58:47,439:INFO:Creating metrics dataframe
2024-11-25 23:58:47,451:INFO:Uploading results into container
2024-11-25 23:58:47,452:INFO:Uploading model into container now
2024-11-25 23:58:47,453:INFO:_master_model_container: 10
2024-11-25 23:58:47,453:INFO:_display_container: 2
2024-11-25 23:58:47,453:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6917, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-25 23:58:47,453:INFO:create_model() successfully completed......................................
2024-11-25 23:58:47,984:INFO:SubProcess create_model() end ==================================
2024-11-25 23:58:47,984:INFO:Creating metrics dataframe
2024-11-25 23:58:47,991:INFO:Initializing Linear Discriminant Analysis
2024-11-25 23:58:47,991:INFO:Total runtime is 7.261845882733663 minutes
2024-11-25 23:58:48,002:INFO:SubProcess create_model() called ==================================
2024-11-25 23:58:48,002:INFO:Initializing create_model()
2024-11-25 23:58:48,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:58:48,002:INFO:Checking exceptions
2024-11-25 23:58:48,002:INFO:Importing libraries
2024-11-25 23:58:48,002:INFO:Copying training dataset
2024-11-25 23:58:48,111:INFO:Defining folds
2024-11-25 23:58:48,111:INFO:Declaring metric variables
2024-11-25 23:58:48,131:INFO:Importing untrained model
2024-11-25 23:58:48,143:INFO:Linear Discriminant Analysis Imported successfully
2024-11-25 23:58:48,165:INFO:Starting cross validation
2024-11-25 23:58:48,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:58:48,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:48,645:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:48,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:48,678:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:48,678:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:48,695:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,020:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,087:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,694:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,729:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:49,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:51,765:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:52,097:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:52,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:52,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:52,534:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:52,707:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:52,977:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:53,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:53,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:53,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:53,114:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:53,127:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:58:53,181:INFO:Calculating mean and std
2024-11-25 23:58:53,181:INFO:Creating metrics dataframe
2024-11-25 23:58:53,198:INFO:Uploading results into container
2024-11-25 23:58:53,200:INFO:Uploading model into container now
2024-11-25 23:58:53,201:INFO:_master_model_container: 11
2024-11-25 23:58:53,201:INFO:_display_container: 2
2024-11-25 23:58:53,202:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-25 23:58:53,202:INFO:create_model() successfully completed......................................
2024-11-25 23:58:53,974:INFO:SubProcess create_model() end ==================================
2024-11-25 23:58:53,974:INFO:Creating metrics dataframe
2024-11-25 23:58:54,005:INFO:Initializing Extra Trees Classifier
2024-11-25 23:58:54,005:INFO:Total runtime is 7.362083446979523 minutes
2024-11-25 23:58:54,005:INFO:SubProcess create_model() called ==================================
2024-11-25 23:58:54,005:INFO:Initializing create_model()
2024-11-25 23:58:54,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-25 23:58:54,005:INFO:Checking exceptions
2024-11-25 23:58:54,005:INFO:Importing libraries
2024-11-25 23:58:54,005:INFO:Copying training dataset
2024-11-25 23:58:54,339:INFO:Defining folds
2024-11-25 23:58:54,339:INFO:Declaring metric variables
2024-11-25 23:58:54,360:INFO:Importing untrained model
2024-11-25 23:58:54,436:INFO:Extra Trees Classifier Imported successfully
2024-11-25 23:58:54,483:INFO:Starting cross validation
2024-11-25 23:58:54,485:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-25 23:59:08,181:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:08,260:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:08,345:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:08,371:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:08,435:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:08,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:20,069:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:20,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:20,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:20,717:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:20,796:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:20,850:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:36,217:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:36,249:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:36,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:36,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:36,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:36,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:45,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:45,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:45,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:45,904:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:45,914:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-25 23:59:45,914:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:04,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:04,929:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:05,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:05,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:05,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:05,883:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:05,965:INFO:Calculating mean and std
2024-11-26 00:00:06,001:INFO:Creating metrics dataframe
2024-11-26 00:00:06,001:INFO:Uploading results into container
2024-11-26 00:00:06,001:INFO:Uploading model into container now
2024-11-26 00:00:06,001:INFO:_master_model_container: 12
2024-11-26 00:00:06,001:INFO:_display_container: 2
2024-11-26 00:00:06,012:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6917, verbose=0,
                     warm_start=False)
2024-11-26 00:00:06,012:INFO:create_model() successfully completed......................................
2024-11-26 00:00:07,168:INFO:SubProcess create_model() end ==================================
2024-11-26 00:00:07,168:INFO:Creating metrics dataframe
2024-11-26 00:00:07,224:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 00:00:07,224:INFO:Total runtime is 8.582394444942475 minutes
2024-11-26 00:00:07,230:INFO:SubProcess create_model() called ==================================
2024-11-26 00:00:07,230:INFO:Initializing create_model()
2024-11-26 00:00:07,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:00:07,230:INFO:Checking exceptions
2024-11-26 00:00:07,230:INFO:Importing libraries
2024-11-26 00:00:07,230:INFO:Copying training dataset
2024-11-26 00:00:07,551:INFO:Defining folds
2024-11-26 00:00:07,551:INFO:Declaring metric variables
2024-11-26 00:00:07,575:INFO:Importing untrained model
2024-11-26 00:00:07,621:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 00:00:07,661:INFO:Starting cross validation
2024-11-26 00:00:07,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:00:13,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:13,534:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:13,576:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:14,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:14,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:14,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:17,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:17,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:17,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:17,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:17,890:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:17,900:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:22,463:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:22,502:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:22,647:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:24,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:24,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:24,397:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:27,356:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:27,414:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:27,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:28,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:28,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:28,116:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:29,913:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:29,935:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:29,973:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:30,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:30,503:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:30,537:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:30,611:INFO:Calculating mean and std
2024-11-26 00:00:30,611:INFO:Creating metrics dataframe
2024-11-26 00:00:30,611:INFO:Uploading results into container
2024-11-26 00:00:30,611:INFO:Uploading model into container now
2024-11-26 00:00:30,629:INFO:_master_model_container: 13
2024-11-26 00:00:30,629:INFO:_display_container: 2
2024-11-26 00:00:30,629:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6917, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 00:00:30,629:INFO:create_model() successfully completed......................................
2024-11-26 00:00:31,206:INFO:SubProcess create_model() end ==================================
2024-11-26 00:00:31,206:INFO:Creating metrics dataframe
2024-11-26 00:00:31,267:INFO:Initializing Dummy Classifier
2024-11-26 00:00:31,287:INFO:Total runtime is 8.983375382423402 minutes
2024-11-26 00:00:31,314:INFO:SubProcess create_model() called ==================================
2024-11-26 00:00:31,314:INFO:Initializing create_model()
2024-11-26 00:00:31,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E13226D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:00:31,314:INFO:Checking exceptions
2024-11-26 00:00:31,314:INFO:Importing libraries
2024-11-26 00:00:31,314:INFO:Copying training dataset
2024-11-26 00:00:31,518:INFO:Defining folds
2024-11-26 00:00:31,533:INFO:Declaring metric variables
2024-11-26 00:00:31,566:INFO:Importing untrained model
2024-11-26 00:00:31,605:INFO:Dummy Classifier Imported successfully
2024-11-26 00:00:31,639:INFO:Starting cross validation
2024-11-26 00:00:31,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:00:32,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,213:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,230:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:32,265:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:32,265:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,719:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:32,782:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:32,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:32,917:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:34,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:34,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:34,087:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:34,134:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:34,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:34,167:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:34,198:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:34,209:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:34,923:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:35,050:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:35,066:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:35,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:35,249:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:35,406:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:35,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:35,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:35,899:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:35,940:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:35,967:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:36,020:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:36,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:36,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:36,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:00:36,059:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:00:36,128:INFO:Calculating mean and std
2024-11-26 00:00:36,128:INFO:Creating metrics dataframe
2024-11-26 00:00:36,142:INFO:Uploading results into container
2024-11-26 00:00:36,142:INFO:Uploading model into container now
2024-11-26 00:00:36,142:INFO:_master_model_container: 14
2024-11-26 00:00:36,142:INFO:_display_container: 2
2024-11-26 00:00:36,142:INFO:DummyClassifier(constant=None, random_state=6917, strategy='prior')
2024-11-26 00:00:36,142:INFO:create_model() successfully completed......................................
2024-11-26 00:00:36,719:INFO:SubProcess create_model() end ==================================
2024-11-26 00:00:36,719:INFO:Creating metrics dataframe
2024-11-26 00:00:36,772:INFO:Initializing create_model()
2024-11-26 00:00:36,772:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6917, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:00:36,772:INFO:Checking exceptions
2024-11-26 00:00:36,785:INFO:Importing libraries
2024-11-26 00:00:36,785:INFO:Copying training dataset
2024-11-26 00:00:36,969:INFO:Defining folds
2024-11-26 00:00:36,969:INFO:Declaring metric variables
2024-11-26 00:00:36,969:INFO:Importing untrained model
2024-11-26 00:00:36,969:INFO:Declaring custom model
2024-11-26 00:00:36,969:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:00:36,969:INFO:Cross validation set to False
2024-11-26 00:00:36,969:INFO:Fitting Model
2024-11-26 00:00:44,462:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6917, verbose=0,
                     warm_start=False)
2024-11-26 00:00:44,462:INFO:create_model() successfully completed......................................
2024-11-26 00:00:45,109:INFO:_master_model_container: 14
2024-11-26 00:00:45,109:INFO:_display_container: 2
2024-11-26 00:00:45,109:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6917, verbose=0,
                     warm_start=False)
2024-11-26 00:00:45,109:INFO:compare_models() successfully completed......................................
2024-11-26 00:00:45,109:INFO:Initializing automl()
2024-11-26 00:00:45,109:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 00:00:45,109:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 00:00:45,109:INFO:Checking model 0
2024-11-26 00:00:45,109:INFO:Checking model 1
2024-11-26 00:00:45,109:INFO:Checking model 2
2024-11-26 00:00:45,109:INFO:Checking model 3
2024-11-26 00:00:45,109:INFO:Checking model 4
2024-11-26 00:00:45,109:INFO:Checking model 5
2024-11-26 00:00:45,109:INFO:Checking model 6
2024-11-26 00:00:45,109:INFO:Checking model 7
2024-11-26 00:00:45,109:INFO:Checking model 8
2024-11-26 00:00:45,109:INFO:Checking model 9
2024-11-26 00:00:45,109:INFO:Checking model 10
2024-11-26 00:00:45,109:INFO:Checking model 11
2024-11-26 00:00:45,109:INFO:Checking model 12
2024-11-26 00:00:45,109:INFO:Checking model 13
2024-11-26 00:00:45,109:INFO:Initializing create_model()
2024-11-26 00:00:45,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E187A1690>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6917, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:00:45,116:INFO:Checking exceptions
2024-11-26 00:00:45,116:INFO:Importing libraries
2024-11-26 00:00:45,116:INFO:Copying training dataset
2024-11-26 00:00:45,288:INFO:Defining folds
2024-11-26 00:00:45,288:INFO:Declaring metric variables
2024-11-26 00:00:45,288:INFO:Importing untrained model
2024-11-26 00:00:45,288:INFO:Declaring custom model
2024-11-26 00:00:45,288:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:00:45,288:INFO:Cross validation set to False
2024-11-26 00:00:45,288:INFO:Fitting Model
2024-11-26 00:00:53,905:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6917, verbose=0,
                     warm_start=False)
2024-11-26 00:00:53,905:INFO:create_model() successfully completed......................................
2024-11-26 00:00:54,925:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6917, verbose=0,
                     warm_start=False)
2024-11-26 00:00:54,946:INFO:automl() successfully completed......................................
2024-11-26 00:10:02,909:INFO:PyCaret ClassificationExperiment
2024-11-26 00:10:02,909:INFO:Logging name: clf-default-name
2024-11-26 00:10:02,909:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 00:10:02,909:INFO:version 3.3.2
2024-11-26 00:10:02,909:INFO:Initializing setup()
2024-11-26 00:10:02,909:INFO:self.USI: f366
2024-11-26 00:10:02,909:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-26 00:10:02,909:INFO:Checking environment
2024-11-26 00:10:02,909:INFO:python_version: 3.11.9
2024-11-26 00:10:02,909:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 00:10:02,909:INFO:machine: AMD64
2024-11-26 00:10:02,909:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 00:10:02,935:INFO:Memory: svmem(total=4293971968, available=572698624, percent=86.7, used=3721273344, free=572698624)
2024-11-26 00:10:02,936:INFO:Physical Core: 2
2024-11-26 00:10:02,936:INFO:Logical Core: 2
2024-11-26 00:10:02,936:INFO:Checking libraries
2024-11-26 00:10:02,936:INFO:System:
2024-11-26 00:10:02,936:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 00:10:02,937:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 00:10:02,937:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 00:10:02,937:INFO:PyCaret required dependencies:
2024-11-26 00:10:02,938:INFO:                 pip: 24.3.1
2024-11-26 00:10:02,938:INFO:          setuptools: 65.5.0
2024-11-26 00:10:02,938:INFO:             pycaret: 3.3.2
2024-11-26 00:10:02,938:INFO:             IPython: 8.26.0
2024-11-26 00:10:02,938:INFO:          ipywidgets: 8.1.5
2024-11-26 00:10:02,939:INFO:                tqdm: 4.66.5
2024-11-26 00:10:02,939:INFO:               numpy: 1.26.4
2024-11-26 00:10:02,939:INFO:              pandas: 2.1.4
2024-11-26 00:10:02,939:INFO:              jinja2: 3.1.4
2024-11-26 00:10:02,939:INFO:               scipy: 1.11.4
2024-11-26 00:10:02,939:INFO:              joblib: 1.3.2
2024-11-26 00:10:02,939:INFO:             sklearn: 1.4.2
2024-11-26 00:10:02,939:INFO:                pyod: 2.0.2
2024-11-26 00:10:02,939:INFO:            imblearn: 0.12.4
2024-11-26 00:10:02,939:INFO:   category_encoders: 2.6.4
2024-11-26 00:10:02,939:INFO:            lightgbm: 4.5.0
2024-11-26 00:10:02,939:INFO:               numba: 0.60.0
2024-11-26 00:10:02,939:INFO:            requests: 2.32.3
2024-11-26 00:10:02,939:INFO:          matplotlib: 3.7.5
2024-11-26 00:10:02,939:INFO:          scikitplot: 0.3.7
2024-11-26 00:10:02,939:INFO:         yellowbrick: 1.5
2024-11-26 00:10:02,939:INFO:              plotly: 5.24.1
2024-11-26 00:10:02,939:INFO:    plotly-resampler: Not installed
2024-11-26 00:10:02,939:INFO:             kaleido: 0.2.1
2024-11-26 00:10:02,939:INFO:           schemdraw: 0.15
2024-11-26 00:10:02,939:INFO:         statsmodels: 0.14.3
2024-11-26 00:10:02,939:INFO:              sktime: 0.26.0
2024-11-26 00:10:02,939:INFO:               tbats: 1.1.3
2024-11-26 00:10:02,939:INFO:            pmdarima: 2.0.4
2024-11-26 00:10:02,945:INFO:              psutil: 6.0.0
2024-11-26 00:10:02,946:INFO:          markupsafe: 3.0.2
2024-11-26 00:10:02,946:INFO:             pickle5: Not installed
2024-11-26 00:10:02,947:INFO:         cloudpickle: 3.0.0
2024-11-26 00:10:02,947:INFO:         deprecation: 2.1.0
2024-11-26 00:10:02,947:INFO:              xxhash: 3.5.0
2024-11-26 00:10:02,947:INFO:           wurlitzer: Not installed
2024-11-26 00:10:02,947:INFO:PyCaret optional dependencies:
2024-11-26 00:10:02,948:INFO:                shap: 0.46.0
2024-11-26 00:10:02,948:INFO:           interpret: Not installed
2024-11-26 00:10:02,948:INFO:                umap: Not installed
2024-11-26 00:10:02,948:INFO:     ydata_profiling: Not installed
2024-11-26 00:10:02,948:INFO:  explainerdashboard: Not installed
2024-11-26 00:10:02,948:INFO:             autoviz: Not installed
2024-11-26 00:10:02,948:INFO:           fairlearn: Not installed
2024-11-26 00:10:02,948:INFO:          deepchecks: Not installed
2024-11-26 00:10:02,948:INFO:             xgboost: Not installed
2024-11-26 00:10:02,948:INFO:            catboost: Not installed
2024-11-26 00:10:02,948:INFO:              kmodes: Not installed
2024-11-26 00:10:02,948:INFO:             mlxtend: Not installed
2024-11-26 00:10:02,948:INFO:       statsforecast: Not installed
2024-11-26 00:10:02,948:INFO:        tune_sklearn: Not installed
2024-11-26 00:10:02,948:INFO:                 ray: Not installed
2024-11-26 00:10:02,948:INFO:            hyperopt: Not installed
2024-11-26 00:10:02,948:INFO:              optuna: 4.1.0
2024-11-26 00:10:02,948:INFO:               skopt: Not installed
2024-11-26 00:10:02,948:INFO:              mlflow: Not installed
2024-11-26 00:10:02,948:INFO:              gradio: Not installed
2024-11-26 00:10:02,948:INFO:             fastapi: Not installed
2024-11-26 00:10:02,948:INFO:             uvicorn: Not installed
2024-11-26 00:10:02,948:INFO:              m2cgen: Not installed
2024-11-26 00:10:02,948:INFO:           evidently: Not installed
2024-11-26 00:10:02,948:INFO:               fugue: Not installed
2024-11-26 00:10:02,948:INFO:           streamlit: Not installed
2024-11-26 00:10:02,948:INFO:             prophet: Not installed
2024-11-26 00:10:02,948:INFO:None
2024-11-26 00:10:02,948:INFO:Set up data.
2024-11-26 00:10:03,208:INFO:Set up folding strategy.
2024-11-26 00:10:03,208:INFO:Set up train/test split.
2024-11-26 00:10:03,410:INFO:Set up index.
2024-11-26 00:10:03,410:INFO:Assigning column types.
2024-11-26 00:10:03,461:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 00:10:03,625:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 00:10:03,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:10:03,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:03,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:04,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 00:10:04,424:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:10:04,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:04,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:04,611:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 00:10:04,768:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:10:04,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:04,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:05,111:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:10:05,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:05,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:05,206:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 00:10:05,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:05,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:06,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:06,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:06,049:INFO:Preparing preprocessing pipeline...
2024-11-26 00:10:06,065:INFO:Set up label encoding.
2024-11-26 00:10:06,065:INFO:Set up simple imputation.
2024-11-26 00:10:06,330:INFO:Finished creating preprocessing pipeline.
2024-11-26 00:10:06,361:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 00:10:06,361:INFO:Creating final display dataframe.
2024-11-26 00:10:07,065:INFO:Setup _display_container:                     Description             Value
0                    Session id              4705
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              f366
2024-11-26 00:10:07,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:07,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:07,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:07,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:10:07,580:INFO:setup() successfully completed in 4.91s...............
2024-11-26 00:10:07,620:INFO:Initializing compare_models()
2024-11-26 00:10:07,620:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 00:10:07,620:INFO:Checking exceptions
2024-11-26 00:10:07,675:INFO:Preparing display monitor
2024-11-26 00:10:07,868:INFO:Initializing Logistic Regression
2024-11-26 00:10:07,868:INFO:Total runtime is 0.0 minutes
2024-11-26 00:10:07,893:INFO:SubProcess create_model() called ==================================
2024-11-26 00:10:07,893:INFO:Initializing create_model()
2024-11-26 00:10:07,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:10:07,893:INFO:Checking exceptions
2024-11-26 00:10:07,893:INFO:Importing libraries
2024-11-26 00:10:07,893:INFO:Copying training dataset
2024-11-26 00:10:08,344:INFO:Defining folds
2024-11-26 00:10:08,344:INFO:Declaring metric variables
2024-11-26 00:10:08,346:INFO:Importing untrained model
2024-11-26 00:10:08,363:INFO:Logistic Regression Imported successfully
2024-11-26 00:10:08,433:INFO:Starting cross validation
2024-11-26 00:10:08,433:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:10:24,136:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:24,183:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:24,223:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:24,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:24,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:24,403:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:25,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:25,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:25,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:26,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:26,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:26,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:26,887:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:26,953:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:27,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:27,108:INFO:Calculating mean and std
2024-11-26 00:10:27,108:INFO:Creating metrics dataframe
2024-11-26 00:10:27,122:INFO:Uploading results into container
2024-11-26 00:10:27,122:INFO:Uploading model into container now
2024-11-26 00:10:27,138:INFO:_master_model_container: 1
2024-11-26 00:10:27,138:INFO:_display_container: 2
2024-11-26 00:10:27,139:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4705, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 00:10:27,140:INFO:create_model() successfully completed......................................
2024-11-26 00:10:30,247:INFO:SubProcess create_model() end ==================================
2024-11-26 00:10:30,247:INFO:Creating metrics dataframe
2024-11-26 00:10:30,265:INFO:Initializing K Neighbors Classifier
2024-11-26 00:10:30,265:INFO:Total runtime is 0.37327768007914225 minutes
2024-11-26 00:10:30,300:INFO:SubProcess create_model() called ==================================
2024-11-26 00:10:30,301:INFO:Initializing create_model()
2024-11-26 00:10:30,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:10:30,301:INFO:Checking exceptions
2024-11-26 00:10:30,302:INFO:Importing libraries
2024-11-26 00:10:30,302:INFO:Copying training dataset
2024-11-26 00:10:30,445:INFO:Defining folds
2024-11-26 00:10:30,445:INFO:Declaring metric variables
2024-11-26 00:10:30,462:INFO:Importing untrained model
2024-11-26 00:10:30,479:INFO:K Neighbors Classifier Imported successfully
2024-11-26 00:10:30,505:INFO:Starting cross validation
2024-11-26 00:10:30,505:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:10:36,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:36,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:36,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:37,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:37,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:37,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:43,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:43,906:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:43,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:43,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:43,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:43,998:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:47,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:47,759:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:47,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:47,913:INFO:Calculating mean and std
2024-11-26 00:10:47,929:INFO:Creating metrics dataframe
2024-11-26 00:10:47,929:INFO:Uploading results into container
2024-11-26 00:10:47,929:INFO:Uploading model into container now
2024-11-26 00:10:47,929:INFO:_master_model_container: 2
2024-11-26 00:10:47,929:INFO:_display_container: 2
2024-11-26 00:10:47,944:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 00:10:47,944:INFO:create_model() successfully completed......................................
2024-11-26 00:10:48,929:INFO:SubProcess create_model() end ==================================
2024-11-26 00:10:48,929:INFO:Creating metrics dataframe
2024-11-26 00:10:48,963:INFO:Initializing Naive Bayes
2024-11-26 00:10:48,976:INFO:Total runtime is 0.6851340373357138 minutes
2024-11-26 00:10:49,148:INFO:SubProcess create_model() called ==================================
2024-11-26 00:10:49,148:INFO:Initializing create_model()
2024-11-26 00:10:49,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:10:49,148:INFO:Checking exceptions
2024-11-26 00:10:49,148:INFO:Importing libraries
2024-11-26 00:10:49,148:INFO:Copying training dataset
2024-11-26 00:10:49,305:INFO:Defining folds
2024-11-26 00:10:49,329:INFO:Declaring metric variables
2024-11-26 00:10:49,350:INFO:Importing untrained model
2024-11-26 00:10:49,352:INFO:Naive Bayes Imported successfully
2024-11-26 00:10:49,413:INFO:Starting cross validation
2024-11-26 00:10:49,413:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:10:49,825:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:49,835:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:49,880:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:50,111:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:50,176:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:50,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:50,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:50,630:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:50,665:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:51,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:51,477:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:51,567:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:52,940:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:53,165:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:53,303:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:10:53,571:INFO:Calculating mean and std
2024-11-26 00:10:53,571:INFO:Creating metrics dataframe
2024-11-26 00:10:53,571:INFO:Uploading results into container
2024-11-26 00:10:53,571:INFO:Uploading model into container now
2024-11-26 00:10:53,571:INFO:_master_model_container: 3
2024-11-26 00:10:53,571:INFO:_display_container: 2
2024-11-26 00:10:53,588:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 00:10:53,588:INFO:create_model() successfully completed......................................
2024-11-26 00:10:54,784:INFO:SubProcess create_model() end ==================================
2024-11-26 00:10:54,784:INFO:Creating metrics dataframe
2024-11-26 00:10:54,815:INFO:Initializing Decision Tree Classifier
2024-11-26 00:10:54,815:INFO:Total runtime is 0.7824527899424236 minutes
2024-11-26 00:10:54,834:INFO:SubProcess create_model() called ==================================
2024-11-26 00:10:54,834:INFO:Initializing create_model()
2024-11-26 00:10:54,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:10:54,834:INFO:Checking exceptions
2024-11-26 00:10:54,834:INFO:Importing libraries
2024-11-26 00:10:54,834:INFO:Copying training dataset
2024-11-26 00:10:55,070:INFO:Defining folds
2024-11-26 00:10:55,070:INFO:Declaring metric variables
2024-11-26 00:10:55,112:INFO:Importing untrained model
2024-11-26 00:10:55,131:INFO:Decision Tree Classifier Imported successfully
2024-11-26 00:10:55,182:INFO:Starting cross validation
2024-11-26 00:10:55,240:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:11:00,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:00,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:00,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:00,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:00,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:00,703:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:02,531:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:02,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:02,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:02,695:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:02,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:02,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:04,899:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:04,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:05,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:05,077:INFO:Calculating mean and std
2024-11-26 00:11:05,077:INFO:Creating metrics dataframe
2024-11-26 00:11:05,077:INFO:Uploading results into container
2024-11-26 00:11:05,077:INFO:Uploading model into container now
2024-11-26 00:11:05,077:INFO:_master_model_container: 4
2024-11-26 00:11:05,077:INFO:_display_container: 2
2024-11-26 00:11:05,077:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4705, splitter='best')
2024-11-26 00:11:05,077:INFO:create_model() successfully completed......................................
2024-11-26 00:11:05,577:INFO:SubProcess create_model() end ==================================
2024-11-26 00:11:05,577:INFO:Creating metrics dataframe
2024-11-26 00:11:05,593:INFO:Initializing SVM - Linear Kernel
2024-11-26 00:11:05,593:INFO:Total runtime is 0.9620785713195802 minutes
2024-11-26 00:11:05,608:INFO:SubProcess create_model() called ==================================
2024-11-26 00:11:05,608:INFO:Initializing create_model()
2024-11-26 00:11:05,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:11:05,608:INFO:Checking exceptions
2024-11-26 00:11:05,608:INFO:Importing libraries
2024-11-26 00:11:05,608:INFO:Copying training dataset
2024-11-26 00:11:05,782:INFO:Defining folds
2024-11-26 00:11:05,782:INFO:Declaring metric variables
2024-11-26 00:11:05,827:INFO:Importing untrained model
2024-11-26 00:11:05,851:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 00:11:05,881:INFO:Starting cross validation
2024-11-26 00:11:05,882:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:11:06,531:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:06,639:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:06,676:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:06,686:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:06,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:06,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:08,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:08,555:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:08,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:08,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:08,862:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:09,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:10,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:10,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:10,278:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:10,345:INFO:Calculating mean and std
2024-11-26 00:11:10,345:INFO:Creating metrics dataframe
2024-11-26 00:11:10,345:INFO:Uploading results into container
2024-11-26 00:11:10,345:INFO:Uploading model into container now
2024-11-26 00:11:10,364:INFO:_master_model_container: 5
2024-11-26 00:11:10,365:INFO:_display_container: 2
2024-11-26 00:11:10,372:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4705, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 00:11:10,380:INFO:create_model() successfully completed......................................
2024-11-26 00:11:10,798:INFO:SubProcess create_model() end ==================================
2024-11-26 00:11:10,798:INFO:Creating metrics dataframe
2024-11-26 00:11:10,829:INFO:Initializing Ridge Classifier
2024-11-26 00:11:10,829:INFO:Total runtime is 1.0493528525034588 minutes
2024-11-26 00:11:10,835:INFO:SubProcess create_model() called ==================================
2024-11-26 00:11:10,835:INFO:Initializing create_model()
2024-11-26 00:11:10,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:11:10,835:INFO:Checking exceptions
2024-11-26 00:11:10,835:INFO:Importing libraries
2024-11-26 00:11:10,845:INFO:Copying training dataset
2024-11-26 00:11:11,021:INFO:Defining folds
2024-11-26 00:11:11,022:INFO:Declaring metric variables
2024-11-26 00:11:11,046:INFO:Importing untrained model
2024-11-26 00:11:11,053:INFO:Ridge Classifier Imported successfully
2024-11-26 00:11:11,098:INFO:Starting cross validation
2024-11-26 00:11:11,100:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:11:11,504:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:11,504:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:11,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:11,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:11,681:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:11,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:11,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:11,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:12,025:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:12,051:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:12,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:12,105:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:12,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:12,936:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:12,995:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:13,154:INFO:Calculating mean and std
2024-11-26 00:11:13,163:INFO:Creating metrics dataframe
2024-11-26 00:11:13,167:INFO:Uploading results into container
2024-11-26 00:11:13,167:INFO:Uploading model into container now
2024-11-26 00:11:13,167:INFO:_master_model_container: 6
2024-11-26 00:11:13,167:INFO:_display_container: 2
2024-11-26 00:11:13,167:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4705, solver='auto',
                tol=0.0001)
2024-11-26 00:11:13,167:INFO:create_model() successfully completed......................................
2024-11-26 00:11:14,854:INFO:SubProcess create_model() end ==================================
2024-11-26 00:11:14,854:INFO:Creating metrics dataframe
2024-11-26 00:11:14,878:INFO:Initializing Random Forest Classifier
2024-11-26 00:11:14,880:INFO:Total runtime is 1.1168556849161786 minutes
2024-11-26 00:11:14,893:INFO:SubProcess create_model() called ==================================
2024-11-26 00:11:14,896:INFO:Initializing create_model()
2024-11-26 00:11:14,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:11:14,896:INFO:Checking exceptions
2024-11-26 00:11:14,907:INFO:Importing libraries
2024-11-26 00:11:14,907:INFO:Copying training dataset
2024-11-26 00:11:15,271:INFO:Defining folds
2024-11-26 00:11:15,271:INFO:Declaring metric variables
2024-11-26 00:11:15,297:INFO:Importing untrained model
2024-11-26 00:11:15,358:INFO:Random Forest Classifier Imported successfully
2024-11-26 00:11:15,387:INFO:Starting cross validation
2024-11-26 00:11:15,392:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:11:40,996:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:41,185:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:41,196:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:41,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:41,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:11:41,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:09,464:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:09,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:09,862:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:09,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:10,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:10,237:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:19,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:20,020:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:20,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:20,140:INFO:Calculating mean and std
2024-11-26 00:12:20,150:INFO:Creating metrics dataframe
2024-11-26 00:12:20,158:INFO:Uploading results into container
2024-11-26 00:12:20,160:INFO:Uploading model into container now
2024-11-26 00:12:20,161:INFO:_master_model_container: 7
2024-11-26 00:12:20,161:INFO:_display_container: 2
2024-11-26 00:12:20,162:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4705, verbose=0,
                       warm_start=False)
2024-11-26 00:12:20,162:INFO:create_model() successfully completed......................................
2024-11-26 00:12:20,609:INFO:SubProcess create_model() end ==================================
2024-11-26 00:12:20,609:INFO:Creating metrics dataframe
2024-11-26 00:12:20,656:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 00:12:20,656:INFO:Total runtime is 2.213130561510722 minutes
2024-11-26 00:12:20,656:INFO:SubProcess create_model() called ==================================
2024-11-26 00:12:20,656:INFO:Initializing create_model()
2024-11-26 00:12:20,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:12:20,656:INFO:Checking exceptions
2024-11-26 00:12:20,800:INFO:Importing libraries
2024-11-26 00:12:20,800:INFO:Copying training dataset
2024-11-26 00:12:21,047:INFO:Defining folds
2024-11-26 00:12:21,047:INFO:Declaring metric variables
2024-11-26 00:12:21,047:INFO:Importing untrained model
2024-11-26 00:12:21,047:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 00:12:21,156:INFO:Starting cross validation
2024-11-26 00:12:21,156:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:12:21,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:12:21,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:12:21,523:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:21,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:21,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:21,591:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:21,639:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:21,663:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:21,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:12:21,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:12:22,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:22,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:22,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:22,285:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:22,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:22,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:23,300:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:12:23,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:23,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:24,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:24,123:INFO:Calculating mean and std
2024-11-26 00:12:24,125:INFO:Creating metrics dataframe
2024-11-26 00:12:24,137:INFO:Uploading results into container
2024-11-26 00:12:24,139:INFO:Uploading model into container now
2024-11-26 00:12:24,139:INFO:_master_model_container: 8
2024-11-26 00:12:24,139:INFO:_display_container: 2
2024-11-26 00:12:24,139:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 00:12:24,139:INFO:create_model() successfully completed......................................
2024-11-26 00:12:24,634:INFO:SubProcess create_model() end ==================================
2024-11-26 00:12:24,635:INFO:Creating metrics dataframe
2024-11-26 00:12:24,671:INFO:Initializing Ada Boost Classifier
2024-11-26 00:12:24,675:INFO:Total runtime is 2.280104621251424 minutes
2024-11-26 00:12:24,682:INFO:SubProcess create_model() called ==================================
2024-11-26 00:12:24,682:INFO:Initializing create_model()
2024-11-26 00:12:24,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:12:24,682:INFO:Checking exceptions
2024-11-26 00:12:24,682:INFO:Importing libraries
2024-11-26 00:12:24,682:INFO:Copying training dataset
2024-11-26 00:12:24,807:INFO:Defining folds
2024-11-26 00:12:24,807:INFO:Declaring metric variables
2024-11-26 00:12:24,836:INFO:Importing untrained model
2024-11-26 00:12:24,860:INFO:Ada Boost Classifier Imported successfully
2024-11-26 00:12:24,906:INFO:Starting cross validation
2024-11-26 00:12:24,907:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:12:25,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:12:25,123:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:12:30,719:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:30,768:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:30,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:30,866:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:30,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:31,064:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:31,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:12:31,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:12:35,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:35,783:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:35,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:35,946:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:36,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:36,064:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:12:36,115:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:40,393:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:40,432:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:40,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:12:40,600:INFO:Calculating mean and std
2024-11-26 00:12:40,609:INFO:Creating metrics dataframe
2024-11-26 00:12:40,609:INFO:Uploading results into container
2024-11-26 00:12:40,609:INFO:Uploading model into container now
2024-11-26 00:12:40,609:INFO:_master_model_container: 9
2024-11-26 00:12:40,609:INFO:_display_container: 2
2024-11-26 00:12:40,609:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4705)
2024-11-26 00:12:40,609:INFO:create_model() successfully completed......................................
2024-11-26 00:12:41,031:INFO:SubProcess create_model() end ==================================
2024-11-26 00:12:41,032:INFO:Creating metrics dataframe
2024-11-26 00:12:41,078:INFO:Initializing Gradient Boosting Classifier
2024-11-26 00:12:41,078:INFO:Total runtime is 2.5534956852595014 minutes
2024-11-26 00:12:41,102:INFO:SubProcess create_model() called ==================================
2024-11-26 00:12:41,103:INFO:Initializing create_model()
2024-11-26 00:12:41,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:12:41,103:INFO:Checking exceptions
2024-11-26 00:12:41,103:INFO:Importing libraries
2024-11-26 00:12:41,103:INFO:Copying training dataset
2024-11-26 00:12:41,234:INFO:Defining folds
2024-11-26 00:12:41,234:INFO:Declaring metric variables
2024-11-26 00:12:41,234:INFO:Importing untrained model
2024-11-26 00:12:41,254:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 00:12:41,279:INFO:Starting cross validation
2024-11-26 00:12:41,284:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:13:07,330:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:07,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:07,399:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:07,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:07,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:07,464:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:29,753:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:29,820:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:29,888:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:30,206:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:30,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:30,339:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:50,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:50,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:50,625:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:50,730:INFO:Calculating mean and std
2024-11-26 00:13:50,730:INFO:Creating metrics dataframe
2024-11-26 00:13:50,730:INFO:Uploading results into container
2024-11-26 00:13:50,730:INFO:Uploading model into container now
2024-11-26 00:13:50,730:INFO:_master_model_container: 10
2024-11-26 00:13:50,730:INFO:_display_container: 2
2024-11-26 00:13:50,730:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4705, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 00:13:50,730:INFO:create_model() successfully completed......................................
2024-11-26 00:13:51,251:INFO:SubProcess create_model() end ==================================
2024-11-26 00:13:51,260:INFO:Creating metrics dataframe
2024-11-26 00:13:51,422:INFO:Initializing Linear Discriminant Analysis
2024-11-26 00:13:51,422:INFO:Total runtime is 3.725896489620209 minutes
2024-11-26 00:13:51,425:INFO:SubProcess create_model() called ==================================
2024-11-26 00:13:51,425:INFO:Initializing create_model()
2024-11-26 00:13:51,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:13:51,425:INFO:Checking exceptions
2024-11-26 00:13:51,432:INFO:Importing libraries
2024-11-26 00:13:51,432:INFO:Copying training dataset
2024-11-26 00:13:51,589:INFO:Defining folds
2024-11-26 00:13:51,589:INFO:Declaring metric variables
2024-11-26 00:13:51,589:INFO:Importing untrained model
2024-11-26 00:13:51,620:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 00:13:51,645:INFO:Starting cross validation
2024-11-26 00:13:51,649:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:13:51,964:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:51,987:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:52,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:52,085:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:52,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:52,195:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:52,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:52,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:53,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:53,087:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:53,376:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:53,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:53,959:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:54,086:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:54,143:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:13:54,538:INFO:Calculating mean and std
2024-11-26 00:13:54,547:INFO:Creating metrics dataframe
2024-11-26 00:13:54,549:INFO:Uploading results into container
2024-11-26 00:13:54,550:INFO:Uploading model into container now
2024-11-26 00:13:54,550:INFO:_master_model_container: 11
2024-11-26 00:13:54,550:INFO:_display_container: 2
2024-11-26 00:13:54,550:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 00:13:54,550:INFO:create_model() successfully completed......................................
2024-11-26 00:13:55,177:INFO:SubProcess create_model() end ==================================
2024-11-26 00:13:55,177:INFO:Creating metrics dataframe
2024-11-26 00:13:55,177:INFO:Initializing Extra Trees Classifier
2024-11-26 00:13:55,177:INFO:Total runtime is 3.7884783546129865 minutes
2024-11-26 00:13:55,194:INFO:SubProcess create_model() called ==================================
2024-11-26 00:13:55,194:INFO:Initializing create_model()
2024-11-26 00:13:55,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:13:55,194:INFO:Checking exceptions
2024-11-26 00:13:55,194:INFO:Importing libraries
2024-11-26 00:13:55,194:INFO:Copying training dataset
2024-11-26 00:13:55,377:INFO:Defining folds
2024-11-26 00:13:55,377:INFO:Declaring metric variables
2024-11-26 00:13:55,385:INFO:Importing untrained model
2024-11-26 00:13:55,396:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:13:55,396:INFO:Starting cross validation
2024-11-26 00:13:55,421:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:14:05,494:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:05,541:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:05,691:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:05,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:05,826:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:05,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:14,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:14,971:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:15,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:15,300:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:15,363:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:15,462:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:20,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:20,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:20,517:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:20,614:INFO:Calculating mean and std
2024-11-26 00:14:20,634:INFO:Creating metrics dataframe
2024-11-26 00:14:20,634:INFO:Uploading results into container
2024-11-26 00:14:20,634:INFO:Uploading model into container now
2024-11-26 00:14:20,634:INFO:_master_model_container: 12
2024-11-26 00:14:20,634:INFO:_display_container: 2
2024-11-26 00:14:20,645:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4705, verbose=0,
                     warm_start=False)
2024-11-26 00:14:20,645:INFO:create_model() successfully completed......................................
2024-11-26 00:14:21,091:INFO:SubProcess create_model() end ==================================
2024-11-26 00:14:21,091:INFO:Creating metrics dataframe
2024-11-26 00:14:21,113:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 00:14:21,113:INFO:Total runtime is 4.220743640263875 minutes
2024-11-26 00:14:21,113:INFO:SubProcess create_model() called ==================================
2024-11-26 00:14:21,113:INFO:Initializing create_model()
2024-11-26 00:14:21,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:14:21,113:INFO:Checking exceptions
2024-11-26 00:14:21,113:INFO:Importing libraries
2024-11-26 00:14:21,133:INFO:Copying training dataset
2024-11-26 00:14:21,271:INFO:Defining folds
2024-11-26 00:14:21,271:INFO:Declaring metric variables
2024-11-26 00:14:21,304:INFO:Importing untrained model
2024-11-26 00:14:21,346:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 00:14:21,346:INFO:Starting cross validation
2024-11-26 00:14:21,346:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:14:25,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:25,308:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:25,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:25,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:25,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:25,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:27,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:27,557:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:27,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:28,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:28,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:28,131:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:29,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:29,116:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:29,154:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:29,244:INFO:Calculating mean and std
2024-11-26 00:14:29,244:INFO:Creating metrics dataframe
2024-11-26 00:14:29,244:INFO:Uploading results into container
2024-11-26 00:14:29,244:INFO:Uploading model into container now
2024-11-26 00:14:29,244:INFO:_master_model_container: 13
2024-11-26 00:14:29,244:INFO:_display_container: 2
2024-11-26 00:14:29,244:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4705, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 00:14:29,244:INFO:create_model() successfully completed......................................
2024-11-26 00:14:29,698:INFO:SubProcess create_model() end ==================================
2024-11-26 00:14:29,698:INFO:Creating metrics dataframe
2024-11-26 00:14:29,728:INFO:Initializing Dummy Classifier
2024-11-26 00:14:29,728:INFO:Total runtime is 4.364325435956319 minutes
2024-11-26 00:14:29,728:INFO:SubProcess create_model() called ==================================
2024-11-26 00:14:29,728:INFO:Initializing create_model()
2024-11-26 00:14:29,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E22D33810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:14:29,728:INFO:Checking exceptions
2024-11-26 00:14:29,728:INFO:Importing libraries
2024-11-26 00:14:29,728:INFO:Copying training dataset
2024-11-26 00:14:29,980:INFO:Defining folds
2024-11-26 00:14:29,980:INFO:Declaring metric variables
2024-11-26 00:14:30,011:INFO:Importing untrained model
2024-11-26 00:14:30,030:INFO:Dummy Classifier Imported successfully
2024-11-26 00:14:30,092:INFO:Starting cross validation
2024-11-26 00:14:30,119:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:14:30,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,414:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:14:30,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:14:30,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,486:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,788:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,824:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,824:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:14:30,862:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:14:30,886:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:30,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:31,344:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:31,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:31,686:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:14:31,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:14:31,814:INFO:Calculating mean and std
2024-11-26 00:14:31,814:INFO:Creating metrics dataframe
2024-11-26 00:14:31,814:INFO:Uploading results into container
2024-11-26 00:14:31,814:INFO:Uploading model into container now
2024-11-26 00:14:31,814:INFO:_master_model_container: 14
2024-11-26 00:14:31,814:INFO:_display_container: 2
2024-11-26 00:14:31,814:INFO:DummyClassifier(constant=None, random_state=4705, strategy='prior')
2024-11-26 00:14:31,814:INFO:create_model() successfully completed......................................
2024-11-26 00:14:32,908:INFO:SubProcess create_model() end ==================================
2024-11-26 00:14:32,908:INFO:Creating metrics dataframe
2024-11-26 00:14:33,001:INFO:Initializing create_model()
2024-11-26 00:14:33,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4705, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:14:33,001:INFO:Checking exceptions
2024-11-26 00:14:33,096:INFO:Importing libraries
2024-11-26 00:14:33,096:INFO:Copying training dataset
2024-11-26 00:14:33,194:INFO:Defining folds
2024-11-26 00:14:33,194:INFO:Declaring metric variables
2024-11-26 00:14:33,194:INFO:Importing untrained model
2024-11-26 00:14:33,194:INFO:Declaring custom model
2024-11-26 00:14:33,194:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:14:33,194:INFO:Cross validation set to False
2024-11-26 00:14:33,194:INFO:Fitting Model
2024-11-26 00:14:38,456:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4705, verbose=0,
                     warm_start=False)
2024-11-26 00:14:38,459:INFO:create_model() successfully completed......................................
2024-11-26 00:14:39,043:INFO:_master_model_container: 14
2024-11-26 00:14:39,044:INFO:_display_container: 2
2024-11-26 00:14:39,059:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4705, verbose=0,
                     warm_start=False)
2024-11-26 00:14:39,061:INFO:compare_models() successfully completed......................................
2024-11-26 00:14:39,102:INFO:Initializing automl()
2024-11-26 00:14:39,103:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 00:14:39,103:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 00:14:39,103:INFO:Initializing create_model()
2024-11-26 00:14:39,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E132B2190>, estimator=None, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:14:39,104:INFO:Checking exceptions
2024-11-26 00:15:54,252:INFO:PyCaret ClassificationExperiment
2024-11-26 00:15:54,252:INFO:Logging name: clf-default-name
2024-11-26 00:15:54,252:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 00:15:54,252:INFO:version 3.3.2
2024-11-26 00:15:54,252:INFO:Initializing setup()
2024-11-26 00:15:54,252:INFO:self.USI: 7859
2024-11-26 00:15:54,252:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-26 00:15:54,253:INFO:Checking environment
2024-11-26 00:15:54,253:INFO:python_version: 3.11.9
2024-11-26 00:15:54,253:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 00:15:54,253:INFO:machine: AMD64
2024-11-26 00:15:54,253:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 00:15:54,256:INFO:Memory: svmem(total=4293971968, available=522088448, percent=87.8, used=3771883520, free=522088448)
2024-11-26 00:15:54,256:INFO:Physical Core: 2
2024-11-26 00:15:54,257:INFO:Logical Core: 2
2024-11-26 00:15:54,257:INFO:Checking libraries
2024-11-26 00:15:54,257:INFO:System:
2024-11-26 00:15:54,257:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 00:15:54,257:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 00:15:54,258:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 00:15:54,258:INFO:PyCaret required dependencies:
2024-11-26 00:15:54,258:INFO:                 pip: 24.3.1
2024-11-26 00:15:54,258:INFO:          setuptools: 65.5.0
2024-11-26 00:15:54,258:INFO:             pycaret: 3.3.2
2024-11-26 00:15:54,258:INFO:             IPython: 8.26.0
2024-11-26 00:15:54,258:INFO:          ipywidgets: 8.1.5
2024-11-26 00:15:54,258:INFO:                tqdm: 4.66.5
2024-11-26 00:15:54,258:INFO:               numpy: 1.26.4
2024-11-26 00:15:54,258:INFO:              pandas: 2.1.4
2024-11-26 00:15:54,258:INFO:              jinja2: 3.1.4
2024-11-26 00:15:54,258:INFO:               scipy: 1.11.4
2024-11-26 00:15:54,258:INFO:              joblib: 1.3.2
2024-11-26 00:15:54,258:INFO:             sklearn: 1.4.2
2024-11-26 00:15:54,258:INFO:                pyod: 2.0.2
2024-11-26 00:15:54,258:INFO:            imblearn: 0.12.4
2024-11-26 00:15:54,275:INFO:   category_encoders: 2.6.4
2024-11-26 00:15:54,284:INFO:            lightgbm: 4.5.0
2024-11-26 00:15:54,288:INFO:               numba: 0.60.0
2024-11-26 00:15:54,288:INFO:            requests: 2.32.3
2024-11-26 00:15:54,288:INFO:          matplotlib: 3.7.5
2024-11-26 00:15:54,288:INFO:          scikitplot: 0.3.7
2024-11-26 00:15:54,289:INFO:         yellowbrick: 1.5
2024-11-26 00:15:54,289:INFO:              plotly: 5.24.1
2024-11-26 00:15:54,289:INFO:    plotly-resampler: Not installed
2024-11-26 00:15:54,290:INFO:             kaleido: 0.2.1
2024-11-26 00:15:54,290:INFO:           schemdraw: 0.15
2024-11-26 00:15:54,290:INFO:         statsmodels: 0.14.3
2024-11-26 00:15:54,290:INFO:              sktime: 0.26.0
2024-11-26 00:15:54,290:INFO:               tbats: 1.1.3
2024-11-26 00:15:54,290:INFO:            pmdarima: 2.0.4
2024-11-26 00:15:54,290:INFO:              psutil: 6.0.0
2024-11-26 00:15:54,291:INFO:          markupsafe: 3.0.2
2024-11-26 00:15:54,291:INFO:             pickle5: Not installed
2024-11-26 00:15:54,292:INFO:         cloudpickle: 3.0.0
2024-11-26 00:15:54,292:INFO:         deprecation: 2.1.0
2024-11-26 00:15:54,292:INFO:              xxhash: 3.5.0
2024-11-26 00:15:54,292:INFO:           wurlitzer: Not installed
2024-11-26 00:15:54,292:INFO:PyCaret optional dependencies:
2024-11-26 00:15:54,293:INFO:                shap: 0.46.0
2024-11-26 00:15:54,295:INFO:           interpret: Not installed
2024-11-26 00:15:54,295:INFO:                umap: Not installed
2024-11-26 00:15:54,295:INFO:     ydata_profiling: Not installed
2024-11-26 00:15:54,296:INFO:  explainerdashboard: Not installed
2024-11-26 00:15:54,297:INFO:             autoviz: Not installed
2024-11-26 00:15:54,297:INFO:           fairlearn: Not installed
2024-11-26 00:15:54,297:INFO:          deepchecks: Not installed
2024-11-26 00:15:54,297:INFO:             xgboost: Not installed
2024-11-26 00:15:54,297:INFO:            catboost: Not installed
2024-11-26 00:15:54,297:INFO:              kmodes: Not installed
2024-11-26 00:15:54,297:INFO:             mlxtend: Not installed
2024-11-26 00:15:54,297:INFO:       statsforecast: Not installed
2024-11-26 00:15:54,297:INFO:        tune_sklearn: Not installed
2024-11-26 00:15:54,297:INFO:                 ray: Not installed
2024-11-26 00:15:54,297:INFO:            hyperopt: Not installed
2024-11-26 00:15:54,297:INFO:              optuna: 4.1.0
2024-11-26 00:15:54,297:INFO:               skopt: Not installed
2024-11-26 00:15:54,297:INFO:              mlflow: Not installed
2024-11-26 00:15:54,297:INFO:              gradio: Not installed
2024-11-26 00:15:54,297:INFO:             fastapi: Not installed
2024-11-26 00:15:54,297:INFO:             uvicorn: Not installed
2024-11-26 00:15:54,297:INFO:              m2cgen: Not installed
2024-11-26 00:15:54,297:INFO:           evidently: Not installed
2024-11-26 00:15:54,297:INFO:               fugue: Not installed
2024-11-26 00:15:54,297:INFO:           streamlit: Not installed
2024-11-26 00:15:54,297:INFO:             prophet: Not installed
2024-11-26 00:15:54,297:INFO:None
2024-11-26 00:15:54,297:INFO:Set up data.
2024-11-26 00:15:54,413:INFO:Set up folding strategy.
2024-11-26 00:15:54,413:INFO:Set up train/test split.
2024-11-26 00:15:54,550:INFO:Set up index.
2024-11-26 00:15:54,551:INFO:Assigning column types.
2024-11-26 00:15:54,891:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 00:15:55,131:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 00:15:55,147:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:15:55,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:55,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:56,271:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 00:15:56,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:15:56,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:56,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:56,420:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 00:15:56,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:15:56,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:56,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:56,727:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:15:56,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:56,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:56,892:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 00:15:57,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:57,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:57,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:57,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:57,835:INFO:Preparing preprocessing pipeline...
2024-11-26 00:15:57,850:INFO:Set up label encoding.
2024-11-26 00:15:57,850:INFO:Set up simple imputation.
2024-11-26 00:15:58,287:INFO:Finished creating preprocessing pipeline.
2024-11-26 00:15:58,303:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 00:15:58,303:INFO:Creating final display dataframe.
2024-11-26 00:15:59,162:INFO:Setup _display_container:                     Description             Value
0                    Session id               581
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              7859
2024-11-26 00:15:59,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:59,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:59,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:59,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:15:59,710:INFO:setup() successfully completed in 5.48s...............
2024-11-26 00:15:59,710:INFO:Initializing compare_models()
2024-11-26 00:15:59,710:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 00:15:59,710:INFO:Checking exceptions
2024-11-26 00:15:59,749:INFO:Preparing display monitor
2024-11-26 00:15:59,906:INFO:Initializing Logistic Regression
2024-11-26 00:15:59,908:INFO:Total runtime is 2.8793017069498698e-05 minutes
2024-11-26 00:15:59,910:INFO:SubProcess create_model() called ==================================
2024-11-26 00:15:59,911:INFO:Initializing create_model()
2024-11-26 00:15:59,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:15:59,911:INFO:Checking exceptions
2024-11-26 00:15:59,911:INFO:Importing libraries
2024-11-26 00:15:59,911:INFO:Copying training dataset
2024-11-26 00:15:59,944:INFO:Defining folds
2024-11-26 00:15:59,944:INFO:Declaring metric variables
2024-11-26 00:15:59,967:INFO:Importing untrained model
2024-11-26 00:15:59,970:INFO:Logistic Regression Imported successfully
2024-11-26 00:15:59,976:INFO:Starting cross validation
2024-11-26 00:15:59,977:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:16:03,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:03,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:03,145:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:03,161:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:03,448:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:03,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:05,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:05,967:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:06,066:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:06,076:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:06,121:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:06,191:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:07,073:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:07,159:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:07,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:07,350:INFO:Calculating mean and std
2024-11-26 00:16:07,362:INFO:Creating metrics dataframe
2024-11-26 00:16:07,379:INFO:Uploading results into container
2024-11-26 00:16:07,379:INFO:Uploading model into container now
2024-11-26 00:16:07,380:INFO:_master_model_container: 1
2024-11-26 00:16:07,380:INFO:_display_container: 2
2024-11-26 00:16:07,381:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=581, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 00:16:07,381:INFO:create_model() successfully completed......................................
2024-11-26 00:16:07,891:INFO:SubProcess create_model() end ==================================
2024-11-26 00:16:07,891:INFO:Creating metrics dataframe
2024-11-26 00:16:07,908:INFO:Initializing K Neighbors Classifier
2024-11-26 00:16:07,908:INFO:Total runtime is 0.13336522579193116 minutes
2024-11-26 00:16:07,923:INFO:SubProcess create_model() called ==================================
2024-11-26 00:16:07,923:INFO:Initializing create_model()
2024-11-26 00:16:07,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:16:07,923:INFO:Checking exceptions
2024-11-26 00:16:07,923:INFO:Importing libraries
2024-11-26 00:16:07,923:INFO:Copying training dataset
2024-11-26 00:16:08,023:INFO:Defining folds
2024-11-26 00:16:08,023:INFO:Declaring metric variables
2024-11-26 00:16:08,033:INFO:Importing untrained model
2024-11-26 00:16:08,051:INFO:K Neighbors Classifier Imported successfully
2024-11-26 00:16:08,063:INFO:Starting cross validation
2024-11-26 00:16:08,063:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:16:12,602:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:12,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:12,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:12,668:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:12,743:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:12,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:16,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:16,299:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:16,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:16,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:16,400:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:16,451:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:19,105:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:19,157:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:19,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:19,290:INFO:Calculating mean and std
2024-11-26 00:16:19,290:INFO:Creating metrics dataframe
2024-11-26 00:16:19,321:INFO:Uploading results into container
2024-11-26 00:16:19,322:INFO:Uploading model into container now
2024-11-26 00:16:19,325:INFO:_master_model_container: 2
2024-11-26 00:16:19,325:INFO:_display_container: 2
2024-11-26 00:16:19,326:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 00:16:19,326:INFO:create_model() successfully completed......................................
2024-11-26 00:16:19,822:INFO:SubProcess create_model() end ==================================
2024-11-26 00:16:19,822:INFO:Creating metrics dataframe
2024-11-26 00:16:19,838:INFO:Initializing Naive Bayes
2024-11-26 00:16:19,838:INFO:Total runtime is 0.33218845129013064 minutes
2024-11-26 00:16:19,878:INFO:SubProcess create_model() called ==================================
2024-11-26 00:16:19,880:INFO:Initializing create_model()
2024-11-26 00:16:19,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:16:19,880:INFO:Checking exceptions
2024-11-26 00:16:19,880:INFO:Importing libraries
2024-11-26 00:16:19,881:INFO:Copying training dataset
2024-11-26 00:16:20,024:INFO:Defining folds
2024-11-26 00:16:20,024:INFO:Declaring metric variables
2024-11-26 00:16:20,045:INFO:Importing untrained model
2024-11-26 00:16:20,051:INFO:Naive Bayes Imported successfully
2024-11-26 00:16:20,101:INFO:Starting cross validation
2024-11-26 00:16:20,101:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:16:20,582:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:20,591:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:20,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:20,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:20,753:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:20,772:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:21,091:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:21,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:21,157:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:21,231:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:21,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:21,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:22,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:22,209:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:22,332:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:23,015:INFO:Calculating mean and std
2024-11-26 00:16:23,044:INFO:Creating metrics dataframe
2024-11-26 00:16:23,057:INFO:Uploading results into container
2024-11-26 00:16:23,057:INFO:Uploading model into container now
2024-11-26 00:16:23,063:INFO:_master_model_container: 3
2024-11-26 00:16:23,063:INFO:_display_container: 2
2024-11-26 00:16:23,063:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 00:16:23,063:INFO:create_model() successfully completed......................................
2024-11-26 00:16:23,610:INFO:SubProcess create_model() end ==================================
2024-11-26 00:16:23,610:INFO:Creating metrics dataframe
2024-11-26 00:16:23,625:INFO:Initializing Decision Tree Classifier
2024-11-26 00:16:23,626:INFO:Total runtime is 0.3953332940737407 minutes
2024-11-26 00:16:23,638:INFO:SubProcess create_model() called ==================================
2024-11-26 00:16:23,640:INFO:Initializing create_model()
2024-11-26 00:16:23,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:16:23,640:INFO:Checking exceptions
2024-11-26 00:16:23,640:INFO:Importing libraries
2024-11-26 00:16:23,640:INFO:Copying training dataset
2024-11-26 00:16:23,750:INFO:Defining folds
2024-11-26 00:16:23,750:INFO:Declaring metric variables
2024-11-26 00:16:23,775:INFO:Importing untrained model
2024-11-26 00:16:23,783:INFO:Decision Tree Classifier Imported successfully
2024-11-26 00:16:23,799:INFO:Starting cross validation
2024-11-26 00:16:23,802:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:16:26,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:26,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:26,930:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:27,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:27,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:27,190:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:28,781:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:28,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:28,939:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:29,138:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:29,211:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:29,295:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:30,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:30,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:30,555:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:30,684:INFO:Calculating mean and std
2024-11-26 00:16:30,684:INFO:Creating metrics dataframe
2024-11-26 00:16:30,684:INFO:Uploading results into container
2024-11-26 00:16:30,709:INFO:Uploading model into container now
2024-11-26 00:16:30,710:INFO:_master_model_container: 4
2024-11-26 00:16:30,715:INFO:_display_container: 2
2024-11-26 00:16:30,717:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=581, splitter='best')
2024-11-26 00:16:30,717:INFO:create_model() successfully completed......................................
2024-11-26 00:16:31,166:INFO:SubProcess create_model() end ==================================
2024-11-26 00:16:31,166:INFO:Creating metrics dataframe
2024-11-26 00:16:31,205:INFO:Initializing SVM - Linear Kernel
2024-11-26 00:16:31,206:INFO:Total runtime is 0.521656862894694 minutes
2024-11-26 00:16:31,212:INFO:SubProcess create_model() called ==================================
2024-11-26 00:16:31,212:INFO:Initializing create_model()
2024-11-26 00:16:31,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:16:31,212:INFO:Checking exceptions
2024-11-26 00:16:31,212:INFO:Importing libraries
2024-11-26 00:16:31,212:INFO:Copying training dataset
2024-11-26 00:16:31,387:INFO:Defining folds
2024-11-26 00:16:31,387:INFO:Declaring metric variables
2024-11-26 00:16:31,433:INFO:Importing untrained model
2024-11-26 00:16:31,433:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 00:16:31,472:INFO:Starting cross validation
2024-11-26 00:16:31,480:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:16:32,137:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:32,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:32,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:32,256:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:32,266:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:32,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:34,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:34,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:34,446:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:34,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:34,574:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:34,640:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:35,211:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:35,277:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:35,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:35,396:INFO:Calculating mean and std
2024-11-26 00:16:35,429:INFO:Creating metrics dataframe
2024-11-26 00:16:35,429:INFO:Uploading results into container
2024-11-26 00:16:35,429:INFO:Uploading model into container now
2024-11-26 00:16:35,429:INFO:_master_model_container: 5
2024-11-26 00:16:35,429:INFO:_display_container: 2
2024-11-26 00:16:35,429:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=581, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 00:16:35,429:INFO:create_model() successfully completed......................................
2024-11-26 00:16:35,912:INFO:SubProcess create_model() end ==================================
2024-11-26 00:16:35,912:INFO:Creating metrics dataframe
2024-11-26 00:16:35,950:INFO:Initializing Ridge Classifier
2024-11-26 00:16:35,950:INFO:Total runtime is 0.6007247487703959 minutes
2024-11-26 00:16:35,950:INFO:SubProcess create_model() called ==================================
2024-11-26 00:16:35,950:INFO:Initializing create_model()
2024-11-26 00:16:35,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:16:35,950:INFO:Checking exceptions
2024-11-26 00:16:35,950:INFO:Importing libraries
2024-11-26 00:16:35,950:INFO:Copying training dataset
2024-11-26 00:16:36,121:INFO:Defining folds
2024-11-26 00:16:36,121:INFO:Declaring metric variables
2024-11-26 00:16:36,130:INFO:Importing untrained model
2024-11-26 00:16:36,162:INFO:Ridge Classifier Imported successfully
2024-11-26 00:16:36,217:INFO:Starting cross validation
2024-11-26 00:16:36,219:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:16:36,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:36,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:36,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:36,589:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:36,634:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:36,634:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:37,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:37,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:37,235:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:37,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:37,421:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:37,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:38,211:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:38,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:38,460:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:16:39,119:INFO:Calculating mean and std
2024-11-26 00:16:39,163:INFO:Creating metrics dataframe
2024-11-26 00:16:39,169:INFO:Uploading results into container
2024-11-26 00:16:39,169:INFO:Uploading model into container now
2024-11-26 00:16:39,169:INFO:_master_model_container: 6
2024-11-26 00:16:39,169:INFO:_display_container: 2
2024-11-26 00:16:39,169:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=581, solver='auto',
                tol=0.0001)
2024-11-26 00:16:39,169:INFO:create_model() successfully completed......................................
2024-11-26 00:16:39,696:INFO:SubProcess create_model() end ==================================
2024-11-26 00:16:39,696:INFO:Creating metrics dataframe
2024-11-26 00:16:39,733:INFO:Initializing Random Forest Classifier
2024-11-26 00:16:39,733:INFO:Total runtime is 0.663784118493398 minutes
2024-11-26 00:16:39,743:INFO:SubProcess create_model() called ==================================
2024-11-26 00:16:39,743:INFO:Initializing create_model()
2024-11-26 00:16:39,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:16:39,743:INFO:Checking exceptions
2024-11-26 00:16:39,743:INFO:Importing libraries
2024-11-26 00:16:39,743:INFO:Copying training dataset
2024-11-26 00:16:39,964:INFO:Defining folds
2024-11-26 00:16:39,964:INFO:Declaring metric variables
2024-11-26 00:16:39,996:INFO:Importing untrained model
2024-11-26 00:16:40,052:INFO:Random Forest Classifier Imported successfully
2024-11-26 00:16:40,071:INFO:Starting cross validation
2024-11-26 00:16:40,071:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:17:02,481:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:02,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:02,866:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:03,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:03,130:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:03,202:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:23,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:23,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:23,922:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:23,933:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:23,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:24,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:33,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:33,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:33,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:33,532:INFO:Calculating mean and std
2024-11-26 00:17:33,579:INFO:Creating metrics dataframe
2024-11-26 00:17:33,579:INFO:Uploading results into container
2024-11-26 00:17:33,598:INFO:Uploading model into container now
2024-11-26 00:17:33,598:INFO:_master_model_container: 7
2024-11-26 00:17:33,598:INFO:_display_container: 2
2024-11-26 00:17:33,598:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=581, verbose=0,
                       warm_start=False)
2024-11-26 00:17:33,598:INFO:create_model() successfully completed......................................
2024-11-26 00:17:34,084:INFO:SubProcess create_model() end ==================================
2024-11-26 00:17:34,084:INFO:Creating metrics dataframe
2024-11-26 00:17:34,125:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 00:17:34,125:INFO:Total runtime is 1.5703128139177958 minutes
2024-11-26 00:17:34,135:INFO:SubProcess create_model() called ==================================
2024-11-26 00:17:34,135:INFO:Initializing create_model()
2024-11-26 00:17:34,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:17:34,135:INFO:Checking exceptions
2024-11-26 00:17:34,135:INFO:Importing libraries
2024-11-26 00:17:34,135:INFO:Copying training dataset
2024-11-26 00:17:34,261:INFO:Defining folds
2024-11-26 00:17:34,262:INFO:Declaring metric variables
2024-11-26 00:17:34,279:INFO:Importing untrained model
2024-11-26 00:17:34,298:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 00:17:34,298:INFO:Starting cross validation
2024-11-26 00:17:34,298:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:17:34,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:17:34,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:17:34,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:34,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:34,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:34,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:34,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:34,866:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:35,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:17:35,136:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:17:35,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:35,240:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:35,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:35,297:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:35,319:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:35,347:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:35,761:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:17:35,888:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:36,112:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:36,422:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:36,675:INFO:Calculating mean and std
2024-11-26 00:17:36,679:INFO:Creating metrics dataframe
2024-11-26 00:17:36,685:INFO:Uploading results into container
2024-11-26 00:17:36,685:INFO:Uploading model into container now
2024-11-26 00:17:36,686:INFO:_master_model_container: 8
2024-11-26 00:17:36,686:INFO:_display_container: 2
2024-11-26 00:17:36,687:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 00:17:36,687:INFO:create_model() successfully completed......................................
2024-11-26 00:17:37,618:INFO:SubProcess create_model() end ==================================
2024-11-26 00:17:37,618:INFO:Creating metrics dataframe
2024-11-26 00:17:37,665:INFO:Initializing Ada Boost Classifier
2024-11-26 00:17:37,665:INFO:Total runtime is 1.629310921827952 minutes
2024-11-26 00:17:37,680:INFO:SubProcess create_model() called ==================================
2024-11-26 00:17:37,680:INFO:Initializing create_model()
2024-11-26 00:17:37,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:17:37,680:INFO:Checking exceptions
2024-11-26 00:17:37,680:INFO:Importing libraries
2024-11-26 00:17:37,680:INFO:Copying training dataset
2024-11-26 00:17:37,821:INFO:Defining folds
2024-11-26 00:17:37,821:INFO:Declaring metric variables
2024-11-26 00:17:37,848:INFO:Importing untrained model
2024-11-26 00:17:37,868:INFO:Ada Boost Classifier Imported successfully
2024-11-26 00:17:37,868:INFO:Starting cross validation
2024-11-26 00:17:37,889:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:17:38,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:17:38,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:17:44,497:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:44,580:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:44,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:44,655:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:44,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:44,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:44,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:17:45,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:17:49,444:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:49,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:49,535:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:49,643:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:49,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:49,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:49,730:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:17:54,196:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:54,258:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:54,305:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:17:54,368:INFO:Calculating mean and std
2024-11-26 00:17:54,414:INFO:Creating metrics dataframe
2024-11-26 00:17:54,421:INFO:Uploading results into container
2024-11-26 00:17:54,422:INFO:Uploading model into container now
2024-11-26 00:17:54,424:INFO:_master_model_container: 9
2024-11-26 00:17:54,424:INFO:_display_container: 2
2024-11-26 00:17:54,430:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=581)
2024-11-26 00:17:54,430:INFO:create_model() successfully completed......................................
2024-11-26 00:17:54,837:INFO:SubProcess create_model() end ==================================
2024-11-26 00:17:54,838:INFO:Creating metrics dataframe
2024-11-26 00:17:54,852:INFO:Initializing Gradient Boosting Classifier
2024-11-26 00:17:54,852:INFO:Total runtime is 1.915755041440328 minutes
2024-11-26 00:17:54,869:INFO:SubProcess create_model() called ==================================
2024-11-26 00:17:54,869:INFO:Initializing create_model()
2024-11-26 00:17:54,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:17:54,869:INFO:Checking exceptions
2024-11-26 00:17:54,869:INFO:Importing libraries
2024-11-26 00:17:54,869:INFO:Copying training dataset
2024-11-26 00:17:55,013:INFO:Defining folds
2024-11-26 00:17:55,013:INFO:Declaring metric variables
2024-11-26 00:17:55,070:INFO:Importing untrained model
2024-11-26 00:17:55,070:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 00:17:55,135:INFO:Starting cross validation
2024-11-26 00:17:55,135:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:18:22,653:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:22,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:22,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:23,528:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:23,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:23,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:45,935:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:45,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:46,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:47,149:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:47,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:18:47,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:06,527:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:06,599:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:06,642:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:06,778:INFO:Calculating mean and std
2024-11-26 00:19:06,778:INFO:Creating metrics dataframe
2024-11-26 00:19:06,812:INFO:Uploading results into container
2024-11-26 00:19:06,812:INFO:Uploading model into container now
2024-11-26 00:19:06,815:INFO:_master_model_container: 10
2024-11-26 00:19:06,815:INFO:_display_container: 2
2024-11-26 00:19:06,815:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=581, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 00:19:06,816:INFO:create_model() successfully completed......................................
2024-11-26 00:19:07,307:INFO:SubProcess create_model() end ==================================
2024-11-26 00:19:07,307:INFO:Creating metrics dataframe
2024-11-26 00:19:07,343:INFO:Initializing Linear Discriminant Analysis
2024-11-26 00:19:07,343:INFO:Total runtime is 3.1239434043566385 minutes
2024-11-26 00:19:07,343:INFO:SubProcess create_model() called ==================================
2024-11-26 00:19:07,343:INFO:Initializing create_model()
2024-11-26 00:19:07,343:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:19:07,343:INFO:Checking exceptions
2024-11-26 00:19:07,343:INFO:Importing libraries
2024-11-26 00:19:07,343:INFO:Copying training dataset
2024-11-26 00:19:07,480:INFO:Defining folds
2024-11-26 00:19:07,480:INFO:Declaring metric variables
2024-11-26 00:19:07,488:INFO:Importing untrained model
2024-11-26 00:19:07,500:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 00:19:07,510:INFO:Starting cross validation
2024-11-26 00:19:07,510:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:19:08,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:08,064:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:08,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:08,111:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:08,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:08,161:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:08,811:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:09,135:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:09,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:09,332:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:09,510:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:09,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:10,453:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:10,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:10,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:10,917:INFO:Calculating mean and std
2024-11-26 00:19:10,922:INFO:Creating metrics dataframe
2024-11-26 00:19:10,933:INFO:Uploading results into container
2024-11-26 00:19:10,941:INFO:Uploading model into container now
2024-11-26 00:19:10,945:INFO:_master_model_container: 11
2024-11-26 00:19:10,953:INFO:_display_container: 2
2024-11-26 00:19:10,955:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 00:19:10,955:INFO:create_model() successfully completed......................................
2024-11-26 00:19:11,443:INFO:SubProcess create_model() end ==================================
2024-11-26 00:19:11,443:INFO:Creating metrics dataframe
2024-11-26 00:19:11,474:INFO:Initializing Extra Trees Classifier
2024-11-26 00:19:11,474:INFO:Total runtime is 3.192794036865234 minutes
2024-11-26 00:19:11,486:INFO:SubProcess create_model() called ==================================
2024-11-26 00:19:11,486:INFO:Initializing create_model()
2024-11-26 00:19:11,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:19:11,486:INFO:Checking exceptions
2024-11-26 00:19:11,486:INFO:Importing libraries
2024-11-26 00:19:11,486:INFO:Copying training dataset
2024-11-26 00:19:11,625:INFO:Defining folds
2024-11-26 00:19:11,625:INFO:Declaring metric variables
2024-11-26 00:19:11,648:INFO:Importing untrained model
2024-11-26 00:19:11,663:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:19:11,713:INFO:Starting cross validation
2024-11-26 00:19:11,714:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:19:22,285:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:22,407:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:22,407:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:22,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:22,521:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:22,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:31,657:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:31,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:31,850:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:31,860:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:31,904:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:31,995:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:36,869:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:36,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:37,003:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:37,083:INFO:Calculating mean and std
2024-11-26 00:19:37,085:INFO:Creating metrics dataframe
2024-11-26 00:19:37,156:INFO:Uploading results into container
2024-11-26 00:19:37,156:INFO:Uploading model into container now
2024-11-26 00:19:37,156:INFO:_master_model_container: 12
2024-11-26 00:19:37,156:INFO:_display_container: 2
2024-11-26 00:19:37,156:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=581, verbose=0,
                     warm_start=False)
2024-11-26 00:19:37,156:INFO:create_model() successfully completed......................................
2024-11-26 00:19:37,868:INFO:SubProcess create_model() end ==================================
2024-11-26 00:19:37,868:INFO:Creating metrics dataframe
2024-11-26 00:19:37,903:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 00:19:37,903:INFO:Total runtime is 3.6332831104596455 minutes
2024-11-26 00:19:37,919:INFO:SubProcess create_model() called ==================================
2024-11-26 00:19:37,919:INFO:Initializing create_model()
2024-11-26 00:19:37,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:19:37,919:INFO:Checking exceptions
2024-11-26 00:19:37,919:INFO:Importing libraries
2024-11-26 00:19:37,919:INFO:Copying training dataset
2024-11-26 00:19:38,185:INFO:Defining folds
2024-11-26 00:19:38,185:INFO:Declaring metric variables
2024-11-26 00:19:38,196:INFO:Importing untrained model
2024-11-26 00:19:38,201:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 00:19:38,247:INFO:Starting cross validation
2024-11-26 00:19:38,247:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:19:42,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:42,388:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:42,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:42,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:42,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:43,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:45,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:45,305:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:45,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:45,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:45,710:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:45,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:46,872:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:46,915:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:46,967:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:47,091:INFO:Calculating mean and std
2024-11-26 00:19:47,096:INFO:Creating metrics dataframe
2024-11-26 00:19:47,124:INFO:Uploading results into container
2024-11-26 00:19:47,124:INFO:Uploading model into container now
2024-11-26 00:19:47,124:INFO:_master_model_container: 13
2024-11-26 00:19:47,124:INFO:_display_container: 2
2024-11-26 00:19:47,129:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=581, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 00:19:47,129:INFO:create_model() successfully completed......................................
2024-11-26 00:19:47,592:INFO:SubProcess create_model() end ==================================
2024-11-26 00:19:47,592:INFO:Creating metrics dataframe
2024-11-26 00:19:47,598:INFO:Initializing Dummy Classifier
2024-11-26 00:19:47,598:INFO:Total runtime is 3.794864972432454 minutes
2024-11-26 00:19:47,598:INFO:SubProcess create_model() called ==================================
2024-11-26 00:19:47,598:INFO:Initializing create_model()
2024-11-26 00:19:47,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E175E2490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:19:47,598:INFO:Checking exceptions
2024-11-26 00:19:47,598:INFO:Importing libraries
2024-11-26 00:19:47,598:INFO:Copying training dataset
2024-11-26 00:19:47,740:INFO:Defining folds
2024-11-26 00:19:47,740:INFO:Declaring metric variables
2024-11-26 00:19:47,740:INFO:Importing untrained model
2024-11-26 00:19:47,785:INFO:Dummy Classifier Imported successfully
2024-11-26 00:19:47,785:INFO:Starting cross validation
2024-11-26 00:19:47,808:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 00:19:48,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,114:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,187:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,204:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:19:48,249:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:19:48,249:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,556:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,556:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:19:48,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:19:48,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:48,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:49,186:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:49,451:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:19:49,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:19:49,604:INFO:Calculating mean and std
2024-11-26 00:19:49,604:INFO:Creating metrics dataframe
2024-11-26 00:19:49,604:INFO:Uploading results into container
2024-11-26 00:19:49,604:INFO:Uploading model into container now
2024-11-26 00:19:49,604:INFO:_master_model_container: 14
2024-11-26 00:19:49,604:INFO:_display_container: 2
2024-11-26 00:19:49,604:INFO:DummyClassifier(constant=None, random_state=581, strategy='prior')
2024-11-26 00:19:49,604:INFO:create_model() successfully completed......................................
2024-11-26 00:19:50,744:INFO:SubProcess create_model() end ==================================
2024-11-26 00:19:50,744:INFO:Creating metrics dataframe
2024-11-26 00:19:50,819:INFO:Initializing create_model()
2024-11-26 00:19:50,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=581, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:19:50,819:INFO:Checking exceptions
2024-11-26 00:19:50,840:INFO:Importing libraries
2024-11-26 00:19:50,840:INFO:Copying training dataset
2024-11-26 00:19:51,065:INFO:Defining folds
2024-11-26 00:19:51,065:INFO:Declaring metric variables
2024-11-26 00:19:51,065:INFO:Importing untrained model
2024-11-26 00:19:51,065:INFO:Declaring custom model
2024-11-26 00:19:51,065:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:19:51,065:INFO:Cross validation set to False
2024-11-26 00:19:51,065:INFO:Fitting Model
2024-11-26 00:19:56,959:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=581, verbose=0,
                     warm_start=False)
2024-11-26 00:19:56,959:INFO:create_model() successfully completed......................................
2024-11-26 00:19:57,664:INFO:_master_model_container: 14
2024-11-26 00:19:57,665:INFO:_display_container: 2
2024-11-26 00:19:57,665:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=581, verbose=0,
                     warm_start=False)
2024-11-26 00:19:57,665:INFO:compare_models() successfully completed......................................
2024-11-26 00:19:57,708:INFO:Initializing automl()
2024-11-26 00:19:57,708:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 00:19:57,708:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 00:19:57,708:INFO:Initializing create_model()
2024-11-26 00:19:57,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E13211F50>, estimator=None, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:19:57,708:INFO:Checking exceptions
2024-11-26 00:20:39,735:INFO:PyCaret ClassificationExperiment
2024-11-26 00:20:39,735:INFO:Logging name: clf-default-name
2024-11-26 00:20:39,735:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 00:20:39,735:INFO:version 3.3.2
2024-11-26 00:20:39,735:INFO:Initializing setup()
2024-11-26 00:20:39,735:INFO:self.USI: 62e5
2024-11-26 00:20:39,735:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-26 00:20:39,735:INFO:Checking environment
2024-11-26 00:20:39,735:INFO:python_version: 3.11.9
2024-11-26 00:20:39,735:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 00:20:39,735:INFO:machine: AMD64
2024-11-26 00:20:39,735:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 00:20:39,760:INFO:Memory: svmem(total=4293971968, available=586027008, percent=86.4, used=3707944960, free=586027008)
2024-11-26 00:20:39,760:INFO:Physical Core: 2
2024-11-26 00:20:39,760:INFO:Logical Core: 2
2024-11-26 00:20:39,760:INFO:Checking libraries
2024-11-26 00:20:39,760:INFO:System:
2024-11-26 00:20:39,760:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 00:20:39,760:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 00:20:39,760:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 00:20:39,760:INFO:PyCaret required dependencies:
2024-11-26 00:20:39,760:INFO:                 pip: 24.3.1
2024-11-26 00:20:39,760:INFO:          setuptools: 65.5.0
2024-11-26 00:20:39,760:INFO:             pycaret: 3.3.2
2024-11-26 00:20:39,760:INFO:             IPython: 8.26.0
2024-11-26 00:20:39,760:INFO:          ipywidgets: 8.1.5
2024-11-26 00:20:39,760:INFO:                tqdm: 4.66.5
2024-11-26 00:20:39,760:INFO:               numpy: 1.26.4
2024-11-26 00:20:39,760:INFO:              pandas: 2.1.4
2024-11-26 00:20:39,760:INFO:              jinja2: 3.1.4
2024-11-26 00:20:39,760:INFO:               scipy: 1.11.4
2024-11-26 00:20:39,760:INFO:              joblib: 1.3.2
2024-11-26 00:20:39,760:INFO:             sklearn: 1.4.2
2024-11-26 00:20:39,760:INFO:                pyod: 2.0.2
2024-11-26 00:20:39,762:INFO:            imblearn: 0.12.4
2024-11-26 00:20:39,762:INFO:   category_encoders: 2.6.4
2024-11-26 00:20:39,762:INFO:            lightgbm: 4.5.0
2024-11-26 00:20:39,762:INFO:               numba: 0.60.0
2024-11-26 00:20:39,762:INFO:            requests: 2.32.3
2024-11-26 00:20:39,762:INFO:          matplotlib: 3.7.5
2024-11-26 00:20:39,762:INFO:          scikitplot: 0.3.7
2024-11-26 00:20:39,762:INFO:         yellowbrick: 1.5
2024-11-26 00:20:39,762:INFO:              plotly: 5.24.1
2024-11-26 00:20:39,762:INFO:    plotly-resampler: Not installed
2024-11-26 00:20:39,762:INFO:             kaleido: 0.2.1
2024-11-26 00:20:39,762:INFO:           schemdraw: 0.15
2024-11-26 00:20:39,762:INFO:         statsmodels: 0.14.3
2024-11-26 00:20:39,763:INFO:              sktime: 0.26.0
2024-11-26 00:20:39,763:INFO:               tbats: 1.1.3
2024-11-26 00:20:39,763:INFO:            pmdarima: 2.0.4
2024-11-26 00:20:39,763:INFO:              psutil: 6.0.0
2024-11-26 00:20:39,763:INFO:          markupsafe: 3.0.2
2024-11-26 00:20:39,763:INFO:             pickle5: Not installed
2024-11-26 00:20:39,763:INFO:         cloudpickle: 3.0.0
2024-11-26 00:20:39,763:INFO:         deprecation: 2.1.0
2024-11-26 00:20:39,763:INFO:              xxhash: 3.5.0
2024-11-26 00:20:39,763:INFO:           wurlitzer: Not installed
2024-11-26 00:20:39,763:INFO:PyCaret optional dependencies:
2024-11-26 00:20:39,763:INFO:                shap: 0.46.0
2024-11-26 00:20:39,764:INFO:           interpret: Not installed
2024-11-26 00:20:39,764:INFO:                umap: Not installed
2024-11-26 00:20:39,764:INFO:     ydata_profiling: Not installed
2024-11-26 00:20:39,764:INFO:  explainerdashboard: Not installed
2024-11-26 00:20:39,764:INFO:             autoviz: Not installed
2024-11-26 00:20:39,764:INFO:           fairlearn: Not installed
2024-11-26 00:20:39,764:INFO:          deepchecks: Not installed
2024-11-26 00:20:39,764:INFO:             xgboost: Not installed
2024-11-26 00:20:39,764:INFO:            catboost: Not installed
2024-11-26 00:20:39,764:INFO:              kmodes: Not installed
2024-11-26 00:20:39,764:INFO:             mlxtend: Not installed
2024-11-26 00:20:39,764:INFO:       statsforecast: Not installed
2024-11-26 00:20:39,764:INFO:        tune_sklearn: Not installed
2024-11-26 00:20:39,764:INFO:                 ray: Not installed
2024-11-26 00:20:39,764:INFO:            hyperopt: Not installed
2024-11-26 00:20:39,764:INFO:              optuna: 4.1.0
2024-11-26 00:20:39,764:INFO:               skopt: Not installed
2024-11-26 00:20:39,764:INFO:              mlflow: Not installed
2024-11-26 00:20:39,764:INFO:              gradio: Not installed
2024-11-26 00:20:39,764:INFO:             fastapi: Not installed
2024-11-26 00:20:39,764:INFO:             uvicorn: Not installed
2024-11-26 00:20:39,764:INFO:              m2cgen: Not installed
2024-11-26 00:20:39,764:INFO:           evidently: Not installed
2024-11-26 00:20:39,764:INFO:               fugue: Not installed
2024-11-26 00:20:39,764:INFO:           streamlit: Not installed
2024-11-26 00:20:39,764:INFO:             prophet: Not installed
2024-11-26 00:20:39,764:INFO:None
2024-11-26 00:20:39,764:INFO:Set up data.
2024-11-26 00:20:40,017:INFO:Set up folding strategy.
2024-11-26 00:20:40,017:INFO:Set up train/test split.
2024-11-26 00:20:40,361:INFO:Set up index.
2024-11-26 00:20:40,361:INFO:Assigning column types.
2024-11-26 00:20:40,533:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 00:20:41,271:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 00:20:41,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:20:41,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:41,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:41,798:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 00:20:41,798:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:20:41,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:41,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:41,954:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 00:20:42,126:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:20:42,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:42,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:43,142:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 00:20:43,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:43,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:43,345:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 00:20:43,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:43,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:44,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:44,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:44,048:INFO:Preparing preprocessing pipeline...
2024-11-26 00:20:44,095:INFO:Set up label encoding.
2024-11-26 00:20:44,095:INFO:Set up simple imputation.
2024-11-26 00:20:44,345:INFO:Finished creating preprocessing pipeline.
2024-11-26 00:20:44,345:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 00:20:44,345:INFO:Creating final display dataframe.
2024-11-26 00:20:45,595:INFO:Setup _display_container:                     Description             Value
0                    Session id              7241
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              62e5
2024-11-26 00:20:45,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:45,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:46,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:46,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 00:20:46,189:INFO:setup() successfully completed in 6.46s...............
2024-11-26 00:20:46,189:INFO:Initializing compare_models()
2024-11-26 00:20:46,189:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 00:20:46,189:INFO:Checking exceptions
2024-11-26 00:20:46,251:INFO:Preparing display monitor
2024-11-26 00:20:46,477:INFO:Initializing Logistic Regression
2024-11-26 00:20:46,477:INFO:Total runtime is 1.4722347259521484e-05 minutes
2024-11-26 00:20:46,495:INFO:SubProcess create_model() called ==================================
2024-11-26 00:20:46,495:INFO:Initializing create_model()
2024-11-26 00:20:46,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:20:46,497:INFO:Checking exceptions
2024-11-26 00:20:46,497:INFO:Importing libraries
2024-11-26 00:20:46,497:INFO:Copying training dataset
2024-11-26 00:20:46,767:INFO:Defining folds
2024-11-26 00:20:46,767:INFO:Declaring metric variables
2024-11-26 00:20:46,784:INFO:Importing untrained model
2024-11-26 00:20:46,803:INFO:Logistic Regression Imported successfully
2024-11-26 00:20:46,875:INFO:Starting cross validation
2024-11-26 00:20:47,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:20:49,377:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:49,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:49,581:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:49,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:49,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:49,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:52,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:52,118:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:52,145:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:52,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:52,249:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:52,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:53,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:53,301:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:53,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:53,608:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:53,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:53,695:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:54,665:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:54,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:54,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:54,752:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:54,799:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:54,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:55,551:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:55,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:55,632:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:55,780:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:55,819:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:55,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:55,917:INFO:Calculating mean and std
2024-11-26 00:20:55,917:INFO:Creating metrics dataframe
2024-11-26 00:20:55,917:INFO:Uploading results into container
2024-11-26 00:20:55,917:INFO:Uploading model into container now
2024-11-26 00:20:55,917:INFO:_master_model_container: 1
2024-11-26 00:20:55,917:INFO:_display_container: 2
2024-11-26 00:20:55,917:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7241, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 00:20:55,917:INFO:create_model() successfully completed......................................
2024-11-26 00:20:56,433:INFO:SubProcess create_model() end ==================================
2024-11-26 00:20:56,433:INFO:Creating metrics dataframe
2024-11-26 00:20:56,448:INFO:Initializing K Neighbors Classifier
2024-11-26 00:20:56,448:INFO:Total runtime is 0.1661980628967285 minutes
2024-11-26 00:20:56,448:INFO:SubProcess create_model() called ==================================
2024-11-26 00:20:56,448:INFO:Initializing create_model()
2024-11-26 00:20:56,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:20:56,448:INFO:Checking exceptions
2024-11-26 00:20:56,448:INFO:Importing libraries
2024-11-26 00:20:56,448:INFO:Copying training dataset
2024-11-26 00:20:56,630:INFO:Defining folds
2024-11-26 00:20:56,630:INFO:Declaring metric variables
2024-11-26 00:20:56,636:INFO:Importing untrained model
2024-11-26 00:20:56,636:INFO:K Neighbors Classifier Imported successfully
2024-11-26 00:20:56,718:INFO:Starting cross validation
2024-11-26 00:20:56,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:20:59,927:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:59,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:59,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:20:59,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:00,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:00,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:02,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:02,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:02,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:02,156:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:02,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:02,213:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:03,922:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:03,949:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:04,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:04,175:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:04,237:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:04,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:05,720:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:05,765:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:05,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:05,895:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:05,906:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:05,959:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:07,742:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:07,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:07,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:07,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:07,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:07,903:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:07,997:INFO:Calculating mean and std
2024-11-26 00:21:08,002:INFO:Creating metrics dataframe
2024-11-26 00:21:08,014:INFO:Uploading results into container
2024-11-26 00:21:08,015:INFO:Uploading model into container now
2024-11-26 00:21:08,017:INFO:_master_model_container: 2
2024-11-26 00:21:08,017:INFO:_display_container: 2
2024-11-26 00:21:08,018:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 00:21:08,018:INFO:create_model() successfully completed......................................
2024-11-26 00:21:08,505:INFO:SubProcess create_model() end ==================================
2024-11-26 00:21:08,505:INFO:Creating metrics dataframe
2024-11-26 00:21:08,531:INFO:Initializing Naive Bayes
2024-11-26 00:21:08,531:INFO:Total runtime is 0.3675755103429158 minutes
2024-11-26 00:21:08,538:INFO:SubProcess create_model() called ==================================
2024-11-26 00:21:08,540:INFO:Initializing create_model()
2024-11-26 00:21:08,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:21:08,540:INFO:Checking exceptions
2024-11-26 00:21:08,540:INFO:Importing libraries
2024-11-26 00:21:08,540:INFO:Copying training dataset
2024-11-26 00:21:08,646:INFO:Defining folds
2024-11-26 00:21:08,646:INFO:Declaring metric variables
2024-11-26 00:21:08,661:INFO:Importing untrained model
2024-11-26 00:21:08,707:INFO:Naive Bayes Imported successfully
2024-11-26 00:21:08,739:INFO:Starting cross validation
2024-11-26 00:21:08,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:21:09,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,069:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,069:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,288:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,320:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,391:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,422:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,740:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,740:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:09,776:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:10,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:10,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:10,540:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:10,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:10,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:11,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:11,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:11,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:11,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:12,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:12,118:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:12,118:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:12,185:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:12,205:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:12,254:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:12,295:INFO:Calculating mean and std
2024-11-26 00:21:12,295:INFO:Creating metrics dataframe
2024-11-26 00:21:12,326:INFO:Uploading results into container
2024-11-26 00:21:12,329:INFO:Uploading model into container now
2024-11-26 00:21:12,334:INFO:_master_model_container: 3
2024-11-26 00:21:12,334:INFO:_display_container: 2
2024-11-26 00:21:12,337:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 00:21:12,338:INFO:create_model() successfully completed......................................
2024-11-26 00:21:12,716:INFO:SubProcess create_model() end ==================================
2024-11-26 00:21:12,716:INFO:Creating metrics dataframe
2024-11-26 00:21:12,753:INFO:Initializing Decision Tree Classifier
2024-11-26 00:21:12,753:INFO:Total runtime is 0.4379392345746358 minutes
2024-11-26 00:21:12,763:INFO:SubProcess create_model() called ==================================
2024-11-26 00:21:12,763:INFO:Initializing create_model()
2024-11-26 00:21:12,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:21:12,763:INFO:Checking exceptions
2024-11-26 00:21:12,763:INFO:Importing libraries
2024-11-26 00:21:12,763:INFO:Copying training dataset
2024-11-26 00:21:12,922:INFO:Defining folds
2024-11-26 00:21:12,923:INFO:Declaring metric variables
2024-11-26 00:21:12,967:INFO:Importing untrained model
2024-11-26 00:21:12,985:INFO:Decision Tree Classifier Imported successfully
2024-11-26 00:21:13,005:INFO:Starting cross validation
2024-11-26 00:21:13,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:21:16,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:16,318:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:16,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:16,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:16,406:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:16,441:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:18,193:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:18,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:18,315:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:18,398:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:18,434:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:18,444:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:20,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:20,713:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:20,802:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:21,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:21,400:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:21,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:23,269:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:23,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:23,498:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:24,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:24,158:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:24,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:25,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:25,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:25,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:26,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:26,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:26,654:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:26,772:INFO:Calculating mean and std
2024-11-26 00:21:26,821:INFO:Creating metrics dataframe
2024-11-26 00:21:26,821:INFO:Uploading results into container
2024-11-26 00:21:26,821:INFO:Uploading model into container now
2024-11-26 00:21:26,838:INFO:_master_model_container: 4
2024-11-26 00:21:26,838:INFO:_display_container: 2
2024-11-26 00:21:26,840:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7241, splitter='best')
2024-11-26 00:21:26,840:INFO:create_model() successfully completed......................................
2024-11-26 00:21:27,536:INFO:SubProcess create_model() end ==================================
2024-11-26 00:21:27,536:INFO:Creating metrics dataframe
2024-11-26 00:21:27,564:INFO:Initializing SVM - Linear Kernel
2024-11-26 00:21:27,564:INFO:Total runtime is 0.6847968061765035 minutes
2024-11-26 00:21:27,572:INFO:SubProcess create_model() called ==================================
2024-11-26 00:21:27,572:INFO:Initializing create_model()
2024-11-26 00:21:27,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:21:27,573:INFO:Checking exceptions
2024-11-26 00:21:27,573:INFO:Importing libraries
2024-11-26 00:21:27,573:INFO:Copying training dataset
2024-11-26 00:21:27,708:INFO:Defining folds
2024-11-26 00:21:27,708:INFO:Declaring metric variables
2024-11-26 00:21:27,734:INFO:Importing untrained model
2024-11-26 00:21:27,754:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 00:21:27,817:INFO:Starting cross validation
2024-11-26 00:21:27,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:21:28,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:28,596:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:28,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:28,682:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:28,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:28,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:30,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:30,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:30,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:30,573:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:30,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:30,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:32,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:32,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:32,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:32,119:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:32,159:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:32,176:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,115:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,308:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,332:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,398:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,766:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,803:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:33,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:34,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:34,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:34,047:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:34,094:INFO:Calculating mean and std
2024-11-26 00:21:34,099:INFO:Creating metrics dataframe
2024-11-26 00:21:34,109:INFO:Uploading results into container
2024-11-26 00:21:34,109:INFO:Uploading model into container now
2024-11-26 00:21:34,109:INFO:_master_model_container: 5
2024-11-26 00:21:34,109:INFO:_display_container: 2
2024-11-26 00:21:34,121:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7241, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 00:21:34,121:INFO:create_model() successfully completed......................................
2024-11-26 00:21:34,606:INFO:SubProcess create_model() end ==================================
2024-11-26 00:21:34,606:INFO:Creating metrics dataframe
2024-11-26 00:21:34,622:INFO:Initializing Ridge Classifier
2024-11-26 00:21:34,622:INFO:Total runtime is 0.8024350206057231 minutes
2024-11-26 00:21:34,622:INFO:SubProcess create_model() called ==================================
2024-11-26 00:21:34,622:INFO:Initializing create_model()
2024-11-26 00:21:34,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:21:34,622:INFO:Checking exceptions
2024-11-26 00:21:34,622:INFO:Importing libraries
2024-11-26 00:21:34,622:INFO:Copying training dataset
2024-11-26 00:21:34,762:INFO:Defining folds
2024-11-26 00:21:34,762:INFO:Declaring metric variables
2024-11-26 00:21:34,795:INFO:Importing untrained model
2024-11-26 00:21:34,809:INFO:Ridge Classifier Imported successfully
2024-11-26 00:21:34,840:INFO:Starting cross validation
2024-11-26 00:21:34,861:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:21:35,122:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,135:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,162:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,167:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,513:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,566:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,594:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,594:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:35,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:36,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:36,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:36,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:36,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:36,472:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:36,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:36,946:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:36,991:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:37,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:37,039:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:37,087:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:37,168:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:37,940:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:37,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:38,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:38,021:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:38,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:38,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:21:38,116:INFO:Calculating mean and std
2024-11-26 00:21:38,116:INFO:Creating metrics dataframe
2024-11-26 00:21:38,116:INFO:Uploading results into container
2024-11-26 00:21:38,116:INFO:Uploading model into container now
2024-11-26 00:21:38,116:INFO:_master_model_container: 6
2024-11-26 00:21:38,116:INFO:_display_container: 2
2024-11-26 00:21:38,116:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7241, solver='auto',
                tol=0.0001)
2024-11-26 00:21:38,116:INFO:create_model() successfully completed......................................
2024-11-26 00:21:38,833:INFO:SubProcess create_model() end ==================================
2024-11-26 00:21:38,833:INFO:Creating metrics dataframe
2024-11-26 00:21:38,849:INFO:Initializing Random Forest Classifier
2024-11-26 00:21:38,849:INFO:Total runtime is 0.8728757858276368 minutes
2024-11-26 00:21:38,849:INFO:SubProcess create_model() called ==================================
2024-11-26 00:21:38,849:INFO:Initializing create_model()
2024-11-26 00:21:38,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:21:38,867:INFO:Checking exceptions
2024-11-26 00:21:38,867:INFO:Importing libraries
2024-11-26 00:21:38,867:INFO:Copying training dataset
2024-11-26 00:21:38,989:INFO:Defining folds
2024-11-26 00:21:38,989:INFO:Declaring metric variables
2024-11-26 00:21:39,005:INFO:Importing untrained model
2024-11-26 00:21:39,005:INFO:Random Forest Classifier Imported successfully
2024-11-26 00:21:39,025:INFO:Starting cross validation
2024-11-26 00:21:39,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:22:01,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:01,420:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:01,482:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:01,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:01,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:01,741:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:21,744:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:21,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:21,938:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:21,952:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:21,963:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:22,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:45,288:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:45,300:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:45,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:45,534:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:45,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:22:45,608:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:06,388:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:06,450:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:06,535:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:06,675:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:06,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:06,707:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:25,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:26,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:26,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:26,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:26,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:26,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:26,138:INFO:Calculating mean and std
2024-11-26 00:23:26,138:INFO:Creating metrics dataframe
2024-11-26 00:23:26,164:INFO:Uploading results into container
2024-11-26 00:23:26,165:INFO:Uploading model into container now
2024-11-26 00:23:26,167:INFO:_master_model_container: 7
2024-11-26 00:23:26,167:INFO:_display_container: 2
2024-11-26 00:23:26,169:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7241, verbose=0,
                       warm_start=False)
2024-11-26 00:23:26,169:INFO:create_model() successfully completed......................................
2024-11-26 00:23:26,615:INFO:SubProcess create_model() end ==================================
2024-11-26 00:23:26,620:INFO:Creating metrics dataframe
2024-11-26 00:23:26,620:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 00:23:26,620:INFO:Total runtime is 2.669060472647349 minutes
2024-11-26 00:23:26,635:INFO:SubProcess create_model() called ==================================
2024-11-26 00:23:26,635:INFO:Initializing create_model()
2024-11-26 00:23:26,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:23:26,635:INFO:Checking exceptions
2024-11-26 00:23:26,635:INFO:Importing libraries
2024-11-26 00:23:26,635:INFO:Copying training dataset
2024-11-26 00:23:26,809:INFO:Defining folds
2024-11-26 00:23:26,809:INFO:Declaring metric variables
2024-11-26 00:23:26,809:INFO:Importing untrained model
2024-11-26 00:23:26,828:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 00:23:26,843:INFO:Starting cross validation
2024-11-26 00:23:26,844:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:23:27,163:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:27,204:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:27,308:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,333:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,344:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,377:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,607:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:27,642:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:27,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,743:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,743:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,775:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:27,816:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:28,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:28,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:28,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:29,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:29,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:29,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:29,174:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:29,296:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:30,108:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:30,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,595:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:30,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 00:23:30,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,794:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:30,878:INFO:Calculating mean and std
2024-11-26 00:23:30,878:INFO:Creating metrics dataframe
2024-11-26 00:23:30,878:INFO:Uploading results into container
2024-11-26 00:23:30,878:INFO:Uploading model into container now
2024-11-26 00:23:30,878:INFO:_master_model_container: 8
2024-11-26 00:23:30,878:INFO:_display_container: 2
2024-11-26 00:23:30,878:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 00:23:30,878:INFO:create_model() successfully completed......................................
2024-11-26 00:23:31,376:INFO:SubProcess create_model() end ==================================
2024-11-26 00:23:31,376:INFO:Creating metrics dataframe
2024-11-26 00:23:31,391:INFO:Initializing Ada Boost Classifier
2024-11-26 00:23:31,394:INFO:Total runtime is 2.748629522323608 minutes
2024-11-26 00:23:31,407:INFO:SubProcess create_model() called ==================================
2024-11-26 00:23:31,407:INFO:Initializing create_model()
2024-11-26 00:23:31,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:23:31,407:INFO:Checking exceptions
2024-11-26 00:23:31,407:INFO:Importing libraries
2024-11-26 00:23:31,407:INFO:Copying training dataset
2024-11-26 00:23:31,626:INFO:Defining folds
2024-11-26 00:23:31,626:INFO:Declaring metric variables
2024-11-26 00:23:31,626:INFO:Importing untrained model
2024-11-26 00:23:31,661:INFO:Ada Boost Classifier Imported successfully
2024-11-26 00:23:31,696:INFO:Starting cross validation
2024-11-26 00:23:31,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:23:31,968:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:31,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:39,220:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:39,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:39,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:39,304:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:39,304:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:39,332:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:39,445:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:39,497:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:45,089:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:45,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:45,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:45,242:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:45,289:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:45,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:45,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:45,567:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:51,121:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:51,146:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:51,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:51,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:51,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:51,423:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:51,442:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:51,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:56,801:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:56,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:56,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:57,103:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:23:57,173:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:57,205:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:57,220:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:23:57,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 00:24:03,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:03,132:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:03,185:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:04,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:04,368:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:04,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:04,506:INFO:Calculating mean and std
2024-11-26 00:24:04,506:INFO:Creating metrics dataframe
2024-11-26 00:24:04,506:INFO:Uploading results into container
2024-11-26 00:24:04,506:INFO:Uploading model into container now
2024-11-26 00:24:04,506:INFO:_master_model_container: 9
2024-11-26 00:24:04,506:INFO:_display_container: 2
2024-11-26 00:24:04,506:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7241)
2024-11-26 00:24:04,506:INFO:create_model() successfully completed......................................
2024-11-26 00:24:05,053:INFO:SubProcess create_model() end ==================================
2024-11-26 00:24:05,053:INFO:Creating metrics dataframe
2024-11-26 00:24:05,084:INFO:Initializing Gradient Boosting Classifier
2024-11-26 00:24:05,084:INFO:Total runtime is 3.3101299842198686 minutes
2024-11-26 00:24:05,100:INFO:SubProcess create_model() called ==================================
2024-11-26 00:24:05,100:INFO:Initializing create_model()
2024-11-26 00:24:05,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:24:05,100:INFO:Checking exceptions
2024-11-26 00:24:05,100:INFO:Importing libraries
2024-11-26 00:24:05,100:INFO:Copying training dataset
2024-11-26 00:24:05,313:INFO:Defining folds
2024-11-26 00:24:05,314:INFO:Declaring metric variables
2024-11-26 00:24:05,322:INFO:Importing untrained model
2024-11-26 00:24:05,334:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 00:24:05,334:INFO:Starting cross validation
2024-11-26 00:24:05,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:24:35,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:35,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:35,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:35,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:35,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:24:35,368:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:01,115:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:01,145:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:01,155:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:01,371:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:01,392:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:01,398:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:26,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:26,957:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:27,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:27,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:27,400:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:27,454:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:52,902:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:52,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:52,989:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:53,344:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:53,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:25:53,407:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:23,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:23,301:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:23,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:23,730:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:23,746:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:23,772:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:23,837:INFO:Calculating mean and std
2024-11-26 00:26:23,837:INFO:Creating metrics dataframe
2024-11-26 00:26:23,863:INFO:Uploading results into container
2024-11-26 00:26:23,864:INFO:Uploading model into container now
2024-11-26 00:26:23,865:INFO:_master_model_container: 10
2024-11-26 00:26:23,865:INFO:_display_container: 2
2024-11-26 00:26:23,866:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7241, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 00:26:23,866:INFO:create_model() successfully completed......................................
2024-11-26 00:26:24,478:INFO:SubProcess create_model() end ==================================
2024-11-26 00:26:24,478:INFO:Creating metrics dataframe
2024-11-26 00:26:24,509:INFO:Initializing Linear Discriminant Analysis
2024-11-26 00:26:24,509:INFO:Total runtime is 5.633886154492696 minutes
2024-11-26 00:26:24,509:INFO:SubProcess create_model() called ==================================
2024-11-26 00:26:24,509:INFO:Initializing create_model()
2024-11-26 00:26:24,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:26:24,509:INFO:Checking exceptions
2024-11-26 00:26:24,509:INFO:Importing libraries
2024-11-26 00:26:24,509:INFO:Copying training dataset
2024-11-26 00:26:24,728:INFO:Defining folds
2024-11-26 00:26:24,728:INFO:Declaring metric variables
2024-11-26 00:26:24,769:INFO:Importing untrained model
2024-11-26 00:26:24,798:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 00:26:24,807:INFO:Starting cross validation
2024-11-26 00:26:24,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:26:25,635:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:25,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:25,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:25,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:25,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:25,886:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:27,095:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:27,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:27,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:27,319:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:27,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:27,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:28,463:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:28,788:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:28,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,119:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,151:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,240:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,529:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,842:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:29,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:30,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:30,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:30,160:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:30,181:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:30,232:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:30,277:INFO:Calculating mean and std
2024-11-26 00:26:30,301:INFO:Creating metrics dataframe
2024-11-26 00:26:30,320:INFO:Uploading results into container
2024-11-26 00:26:30,320:INFO:Uploading model into container now
2024-11-26 00:26:30,320:INFO:_master_model_container: 11
2024-11-26 00:26:30,320:INFO:_display_container: 2
2024-11-26 00:26:30,320:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 00:26:30,320:INFO:create_model() successfully completed......................................
2024-11-26 00:26:30,758:INFO:SubProcess create_model() end ==================================
2024-11-26 00:26:30,758:INFO:Creating metrics dataframe
2024-11-26 00:26:30,805:INFO:Initializing Extra Trees Classifier
2024-11-26 00:26:30,805:INFO:Total runtime is 5.738806168238322 minutes
2024-11-26 00:26:30,820:INFO:SubProcess create_model() called ==================================
2024-11-26 00:26:30,820:INFO:Initializing create_model()
2024-11-26 00:26:30,820:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:26:30,820:INFO:Checking exceptions
2024-11-26 00:26:30,820:INFO:Importing libraries
2024-11-26 00:26:30,820:INFO:Copying training dataset
2024-11-26 00:26:30,961:INFO:Defining folds
2024-11-26 00:26:30,961:INFO:Declaring metric variables
2024-11-26 00:26:30,993:INFO:Importing untrained model
2024-11-26 00:26:30,993:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:26:31,024:INFO:Starting cross validation
2024-11-26 00:26:31,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:26:42,910:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:42,998:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:43,077:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:43,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:43,108:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:43,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:53,293:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:53,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:53,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:53,459:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:53,494:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:26:53,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:02,907:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:02,996:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:03,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:03,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:03,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:03,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:13,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:13,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:13,530:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:13,537:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:13,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:13,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:24,219:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:24,321:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:24,445:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:24,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:24,556:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:24,581:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:24,649:INFO:Calculating mean and std
2024-11-26 00:27:24,649:INFO:Creating metrics dataframe
2024-11-26 00:27:24,685:INFO:Uploading results into container
2024-11-26 00:27:24,695:INFO:Uploading model into container now
2024-11-26 00:27:24,697:INFO:_master_model_container: 12
2024-11-26 00:27:24,697:INFO:_display_container: 2
2024-11-26 00:27:24,697:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False)
2024-11-26 00:27:24,697:INFO:create_model() successfully completed......................................
2024-11-26 00:27:25,201:INFO:SubProcess create_model() end ==================================
2024-11-26 00:27:25,201:INFO:Creating metrics dataframe
2024-11-26 00:27:25,249:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 00:27:25,249:INFO:Total runtime is 6.646214413642884 minutes
2024-11-26 00:27:25,260:INFO:SubProcess create_model() called ==================================
2024-11-26 00:27:25,260:INFO:Initializing create_model()
2024-11-26 00:27:25,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:27:25,260:INFO:Checking exceptions
2024-11-26 00:27:25,260:INFO:Importing libraries
2024-11-26 00:27:25,260:INFO:Copying training dataset
2024-11-26 00:27:25,459:INFO:Defining folds
2024-11-26 00:27:25,459:INFO:Declaring metric variables
2024-11-26 00:27:25,459:INFO:Importing untrained model
2024-11-26 00:27:25,503:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 00:27:25,539:INFO:Starting cross validation
2024-11-26 00:27:25,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:27:29,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:29,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:29,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:29,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:29,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:29,131:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:31,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:31,382:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:31,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:31,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:31,643:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:31,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:33,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:33,956:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:33,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:34,846:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:34,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:34,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:38,397:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:38,410:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:38,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:39,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:39,086:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:39,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:40,728:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:40,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:40,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:41,122:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:41,149:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:41,167:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:41,197:INFO:Calculating mean and std
2024-11-26 00:27:41,230:INFO:Creating metrics dataframe
2024-11-26 00:27:41,240:INFO:Uploading results into container
2024-11-26 00:27:41,240:INFO:Uploading model into container now
2024-11-26 00:27:41,240:INFO:_master_model_container: 13
2024-11-26 00:27:41,240:INFO:_display_container: 2
2024-11-26 00:27:41,240:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7241, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 00:27:41,240:INFO:create_model() successfully completed......................................
2024-11-26 00:27:41,708:INFO:SubProcess create_model() end ==================================
2024-11-26 00:27:41,708:INFO:Creating metrics dataframe
2024-11-26 00:27:41,739:INFO:Initializing Dummy Classifier
2024-11-26 00:27:41,739:INFO:Total runtime is 6.921041218439739 minutes
2024-11-26 00:27:41,755:INFO:SubProcess create_model() called ==================================
2024-11-26 00:27:41,755:INFO:Initializing create_model()
2024-11-26 00:27:41,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E17E3F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:27:41,755:INFO:Checking exceptions
2024-11-26 00:27:41,755:INFO:Importing libraries
2024-11-26 00:27:41,755:INFO:Copying training dataset
2024-11-26 00:27:41,900:INFO:Defining folds
2024-11-26 00:27:41,900:INFO:Declaring metric variables
2024-11-26 00:27:41,905:INFO:Importing untrained model
2024-11-26 00:27:41,911:INFO:Dummy Classifier Imported successfully
2024-11-26 00:27:41,911:INFO:Starting cross validation
2024-11-26 00:27:41,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 00:27:42,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,249:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,260:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,260:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:42,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:42,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,540:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,540:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,552:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:42,576:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:42,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,820:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,820:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:42,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:42,854:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:42,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:43,306:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:43,337:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:43,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:43,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:43,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:43,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:43,767:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:43,767:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:44,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:44,288:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:44,288:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:44,306:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:44,306:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:44,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:44,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 00:27:44,431:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 00:27:44,626:INFO:Calculating mean and std
2024-11-26 00:27:44,644:INFO:Creating metrics dataframe
2024-11-26 00:27:44,644:INFO:Uploading results into container
2024-11-26 00:27:44,660:INFO:Uploading model into container now
2024-11-26 00:27:44,660:INFO:_master_model_container: 14
2024-11-26 00:27:44,660:INFO:_display_container: 2
2024-11-26 00:27:44,660:INFO:DummyClassifier(constant=None, random_state=7241, strategy='prior')
2024-11-26 00:27:44,660:INFO:create_model() successfully completed......................................
2024-11-26 00:27:45,566:INFO:SubProcess create_model() end ==================================
2024-11-26 00:27:45,566:INFO:Creating metrics dataframe
2024-11-26 00:27:45,646:INFO:Initializing create_model()
2024-11-26 00:27:45,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:27:45,646:INFO:Checking exceptions
2024-11-26 00:27:45,646:INFO:Importing libraries
2024-11-26 00:27:45,646:INFO:Copying training dataset
2024-11-26 00:27:45,799:INFO:Defining folds
2024-11-26 00:27:45,799:INFO:Declaring metric variables
2024-11-26 00:27:45,799:INFO:Importing untrained model
2024-11-26 00:27:45,799:INFO:Declaring custom model
2024-11-26 00:27:45,799:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:27:45,799:INFO:Cross validation set to False
2024-11-26 00:27:45,799:INFO:Fitting Model
2024-11-26 00:27:51,393:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False)
2024-11-26 00:27:51,394:INFO:create_model() successfully completed......................................
2024-11-26 00:27:52,102:INFO:_master_model_container: 14
2024-11-26 00:27:52,102:INFO:_display_container: 2
2024-11-26 00:27:52,104:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False)
2024-11-26 00:27:52,104:INFO:compare_models() successfully completed......................................
2024-11-26 00:27:52,174:INFO:Initializing automl()
2024-11-26 00:27:52,175:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 00:27:52,175:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 00:27:52,175:INFO:Checking model 0
2024-11-26 00:27:52,179:INFO:Checking model 1
2024-11-26 00:27:52,179:INFO:Checking model 2
2024-11-26 00:27:52,179:INFO:Checking model 3
2024-11-26 00:27:52,179:INFO:Checking model 4
2024-11-26 00:27:52,179:INFO:Checking model 5
2024-11-26 00:27:52,179:INFO:Checking model 6
2024-11-26 00:27:52,179:INFO:Checking model 7
2024-11-26 00:27:52,179:INFO:Checking model 8
2024-11-26 00:27:52,194:INFO:Checking model 9
2024-11-26 00:27:52,194:INFO:Checking model 10
2024-11-26 00:27:52,194:INFO:Checking model 11
2024-11-26 00:27:52,194:INFO:Checking model 12
2024-11-26 00:27:52,194:INFO:Checking model 13
2024-11-26 00:27:52,240:INFO:Initializing create_model()
2024-11-26 00:27:52,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 00:27:52,240:INFO:Checking exceptions
2024-11-26 00:27:52,240:INFO:Importing libraries
2024-11-26 00:27:52,240:INFO:Copying training dataset
2024-11-26 00:27:52,506:INFO:Defining folds
2024-11-26 00:27:52,506:INFO:Declaring metric variables
2024-11-26 00:27:52,506:INFO:Importing untrained model
2024-11-26 00:27:52,506:INFO:Declaring custom model
2024-11-26 00:27:52,506:INFO:Extra Trees Classifier Imported successfully
2024-11-26 00:27:52,506:INFO:Cross validation set to False
2024-11-26 00:27:52,506:INFO:Fitting Model
2024-11-26 00:27:59,151:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False)
2024-11-26 00:27:59,151:INFO:create_model() successfully completed......................................
2024-11-26 00:27:59,915:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False)
2024-11-26 00:27:59,915:INFO:automl() successfully completed......................................
2024-11-26 00:28:10,987:INFO:Initializing predict_model()
2024-11-26 00:28:10,987:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E1351BC40>)
2024-11-26 00:28:10,987:INFO:Checking exceptions
2024-11-26 00:28:10,987:INFO:Preloading libraries
2024-11-26 00:28:10,987:INFO:Set up data.
2024-11-26 00:28:11,079:INFO:Set up index.
2024-11-26 00:29:44,695:INFO:Initializing predict_model()
2024-11-26 00:29:44,696:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E18729300>)
2024-11-26 00:29:44,696:INFO:Checking exceptions
2024-11-26 00:29:44,696:INFO:Preloading libraries
2024-11-26 00:29:44,698:INFO:Set up data.
2024-11-26 00:29:44,709:INFO:Set up index.
2024-11-26 00:29:53,421:INFO:Initializing predict_model()
2024-11-26 00:29:53,421:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E16AFDBC0>)
2024-11-26 00:29:53,421:INFO:Checking exceptions
2024-11-26 00:29:53,421:INFO:Preloading libraries
2024-11-26 00:29:53,425:INFO:Set up data.
2024-11-26 00:29:53,443:INFO:Set up index.
2024-11-26 00:31:32,285:INFO:Initializing predict_model()
2024-11-26 00:31:32,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E195C29D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7241, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E28539EE0>)
2024-11-26 00:31:32,285:INFO:Checking exceptions
2024-11-26 00:31:32,286:INFO:Preloading libraries
2024-11-26 00:31:32,290:INFO:Set up data.
2024-11-26 00:31:32,303:INFO:Set up index.
2024-11-26 08:25:26,500:INFO:PyCaret ClassificationExperiment
2024-11-26 08:25:26,501:INFO:Logging name: clf-default-name
2024-11-26 08:25:26,501:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 08:25:26,501:INFO:version 3.3.2
2024-11-26 08:25:26,501:INFO:Initializing setup()
2024-11-26 08:25:26,501:INFO:self.USI: e383
2024-11-26 08:25:26,501:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'y', 'gpu_param', 'n_jobs_param', 'target_param', 'exp_id', 'log_plots_param', 'fold_groups_param', 'X_train', 'seed', 'X_test', 'USI', 'pipeline', 'memory', 'X', 'fix_imbalance', '_available_plots', 'data', 'logging_param', 'idx', 'y_train', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'y_test'}
2024-11-26 08:25:26,501:INFO:Checking environment
2024-11-26 08:25:26,501:INFO:python_version: 3.11.9
2024-11-26 08:25:26,501:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 08:25:26,501:INFO:machine: AMD64
2024-11-26 08:25:26,501:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 08:25:26,505:INFO:Memory: svmem(total=4293971968, available=1070850048, percent=75.1, used=3223121920, free=1070850048)
2024-11-26 08:25:26,505:INFO:Physical Core: 2
2024-11-26 08:25:26,505:INFO:Logical Core: 2
2024-11-26 08:25:26,505:INFO:Checking libraries
2024-11-26 08:25:26,505:INFO:System:
2024-11-26 08:25:26,505:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 08:25:26,505:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 08:25:26,505:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 08:25:26,505:INFO:PyCaret required dependencies:
2024-11-26 08:25:26,505:INFO:                 pip: 24.3.1
2024-11-26 08:25:26,505:INFO:          setuptools: 65.5.0
2024-11-26 08:25:26,505:INFO:             pycaret: 3.3.2
2024-11-26 08:25:26,505:INFO:             IPython: 8.26.0
2024-11-26 08:25:26,505:INFO:          ipywidgets: 8.1.5
2024-11-26 08:25:26,505:INFO:                tqdm: 4.66.5
2024-11-26 08:25:26,505:INFO:               numpy: 1.26.4
2024-11-26 08:25:26,507:INFO:              pandas: 2.1.4
2024-11-26 08:25:26,507:INFO:              jinja2: 3.1.4
2024-11-26 08:25:26,507:INFO:               scipy: 1.11.4
2024-11-26 08:25:26,507:INFO:              joblib: 1.3.2
2024-11-26 08:25:26,507:INFO:             sklearn: 1.4.2
2024-11-26 08:25:26,507:INFO:                pyod: 2.0.2
2024-11-26 08:25:26,507:INFO:            imblearn: 0.12.4
2024-11-26 08:25:26,507:INFO:   category_encoders: 2.6.4
2024-11-26 08:25:26,507:INFO:            lightgbm: 4.5.0
2024-11-26 08:25:26,507:INFO:               numba: 0.60.0
2024-11-26 08:25:26,507:INFO:            requests: 2.32.3
2024-11-26 08:25:26,507:INFO:          matplotlib: 3.7.5
2024-11-26 08:25:26,507:INFO:          scikitplot: 0.3.7
2024-11-26 08:25:26,507:INFO:         yellowbrick: 1.5
2024-11-26 08:25:26,507:INFO:              plotly: 5.24.1
2024-11-26 08:25:26,508:INFO:    plotly-resampler: Not installed
2024-11-26 08:25:26,508:INFO:             kaleido: 0.2.1
2024-11-26 08:25:26,508:INFO:           schemdraw: 0.15
2024-11-26 08:25:26,508:INFO:         statsmodels: 0.14.3
2024-11-26 08:25:26,508:INFO:              sktime: 0.26.0
2024-11-26 08:25:26,508:INFO:               tbats: 1.1.3
2024-11-26 08:25:26,508:INFO:            pmdarima: 2.0.4
2024-11-26 08:25:26,508:INFO:              psutil: 6.0.0
2024-11-26 08:25:26,508:INFO:          markupsafe: 3.0.2
2024-11-26 08:25:26,508:INFO:             pickle5: Not installed
2024-11-26 08:25:26,508:INFO:         cloudpickle: 3.0.0
2024-11-26 08:25:26,508:INFO:         deprecation: 2.1.0
2024-11-26 08:25:26,508:INFO:              xxhash: 3.5.0
2024-11-26 08:25:26,508:INFO:           wurlitzer: Not installed
2024-11-26 08:25:26,508:INFO:PyCaret optional dependencies:
2024-11-26 08:25:26,509:INFO:                shap: 0.46.0
2024-11-26 08:25:26,509:INFO:           interpret: Not installed
2024-11-26 08:25:26,509:INFO:                umap: Not installed
2024-11-26 08:25:26,509:INFO:     ydata_profiling: Not installed
2024-11-26 08:25:26,509:INFO:  explainerdashboard: Not installed
2024-11-26 08:25:26,509:INFO:             autoviz: Not installed
2024-11-26 08:25:26,509:INFO:           fairlearn: Not installed
2024-11-26 08:25:26,509:INFO:          deepchecks: Not installed
2024-11-26 08:25:26,509:INFO:             xgboost: Not installed
2024-11-26 08:25:26,509:INFO:            catboost: Not installed
2024-11-26 08:25:26,509:INFO:              kmodes: Not installed
2024-11-26 08:25:26,509:INFO:             mlxtend: Not installed
2024-11-26 08:25:26,510:INFO:       statsforecast: Not installed
2024-11-26 08:25:26,510:INFO:        tune_sklearn: Not installed
2024-11-26 08:25:26,510:INFO:                 ray: Not installed
2024-11-26 08:25:26,510:INFO:            hyperopt: Not installed
2024-11-26 08:25:26,510:INFO:              optuna: 4.1.0
2024-11-26 08:25:26,510:INFO:               skopt: Not installed
2024-11-26 08:25:26,510:INFO:              mlflow: Not installed
2024-11-26 08:25:26,510:INFO:              gradio: Not installed
2024-11-26 08:25:26,510:INFO:             fastapi: Not installed
2024-11-26 08:25:26,510:INFO:             uvicorn: Not installed
2024-11-26 08:25:26,510:INFO:              m2cgen: Not installed
2024-11-26 08:25:26,510:INFO:           evidently: Not installed
2024-11-26 08:25:26,510:INFO:               fugue: Not installed
2024-11-26 08:25:26,510:INFO:           streamlit: Not installed
2024-11-26 08:25:26,510:INFO:             prophet: Not installed
2024-11-26 08:25:26,510:INFO:None
2024-11-26 08:25:26,510:INFO:Set up data.
2024-11-26 08:25:26,603:INFO:Set up folding strategy.
2024-11-26 08:25:26,603:INFO:Set up train/test split.
2024-11-26 08:25:26,730:INFO:Set up index.
2024-11-26 08:25:26,730:INFO:Assigning column types.
2024-11-26 08:25:26,836:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 08:25:26,946:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 08:25:26,946:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 08:25:27,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:27,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:27,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 08:25:27,226:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 08:25:27,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:27,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:27,289:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 08:25:27,461:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 08:25:27,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:27,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:27,649:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 08:25:27,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:27,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:27,695:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 08:25:28,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:28,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:29,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:29,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:29,133:INFO:Preparing preprocessing pipeline...
2024-11-26 08:25:29,152:INFO:Set up label encoding.
2024-11-26 08:25:29,152:INFO:Set up simple imputation.
2024-11-26 08:25:29,274:INFO:Finished creating preprocessing pipeline.
2024-11-26 08:25:29,297:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 08:25:29,297:INFO:Creating final display dataframe.
2024-11-26 08:25:29,920:INFO:Setup _display_container:                     Description             Value
0                    Session id              4025
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              e383
2024-11-26 08:25:30,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:30,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:30,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:30,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 08:25:30,383:INFO:setup() successfully completed in 4.06s...............
2024-11-26 08:25:30,383:INFO:Initializing compare_models()
2024-11-26 08:25:30,383:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 08:25:30,383:INFO:Checking exceptions
2024-11-26 08:25:30,461:INFO:Preparing display monitor
2024-11-26 08:25:30,648:INFO:Initializing Logistic Regression
2024-11-26 08:25:30,648:INFO:Total runtime is 0.0 minutes
2024-11-26 08:25:30,680:INFO:SubProcess create_model() called ==================================
2024-11-26 08:25:30,680:INFO:Initializing create_model()
2024-11-26 08:25:30,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:25:30,680:INFO:Checking exceptions
2024-11-26 08:25:30,680:INFO:Importing libraries
2024-11-26 08:25:30,680:INFO:Copying training dataset
2024-11-26 08:25:30,945:INFO:Defining folds
2024-11-26 08:25:30,945:INFO:Declaring metric variables
2024-11-26 08:25:30,961:INFO:Importing untrained model
2024-11-26 08:25:30,961:INFO:Logistic Regression Imported successfully
2024-11-26 08:25:30,976:INFO:Starting cross validation
2024-11-26 08:25:30,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:25:42,410:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:42,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:42,527:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:42,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:42,554:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:42,642:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:43,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:43,780:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:43,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:43,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:43,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:43,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:44,836:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:44,879:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:44,949:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:45,025:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:45,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:45,130:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:46,118:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:46,154:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:46,223:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:46,223:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:46,297:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:46,388:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:47,674:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:47,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:47,782:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:47,842:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:47,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:47,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:47,966:INFO:Calculating mean and std
2024-11-26 08:25:47,966:INFO:Creating metrics dataframe
2024-11-26 08:25:47,966:INFO:Uploading results into container
2024-11-26 08:25:47,966:INFO:Uploading model into container now
2024-11-26 08:25:47,966:INFO:_master_model_container: 1
2024-11-26 08:25:47,966:INFO:_display_container: 2
2024-11-26 08:25:47,966:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4025, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 08:25:47,966:INFO:create_model() successfully completed......................................
2024-11-26 08:25:52,887:INFO:SubProcess create_model() end ==================================
2024-11-26 08:25:52,887:INFO:Creating metrics dataframe
2024-11-26 08:25:52,918:INFO:Initializing K Neighbors Classifier
2024-11-26 08:25:52,918:INFO:Total runtime is 0.3711561401685079 minutes
2024-11-26 08:25:52,938:INFO:SubProcess create_model() called ==================================
2024-11-26 08:25:52,938:INFO:Initializing create_model()
2024-11-26 08:25:52,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:25:52,938:INFO:Checking exceptions
2024-11-26 08:25:52,938:INFO:Importing libraries
2024-11-26 08:25:52,938:INFO:Copying training dataset
2024-11-26 08:25:53,031:INFO:Defining folds
2024-11-26 08:25:53,031:INFO:Declaring metric variables
2024-11-26 08:25:53,063:INFO:Importing untrained model
2024-11-26 08:25:53,074:INFO:K Neighbors Classifier Imported successfully
2024-11-26 08:25:53,105:INFO:Starting cross validation
2024-11-26 08:25:53,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:25:56,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:56,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:56,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:56,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:56,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:56,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:59,038:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:59,069:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:59,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:59,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:59,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:25:59,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:01,531:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:01,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:01,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:01,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:01,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:01,683:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:03,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:03,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:03,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:03,805:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:03,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:03,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:05,319:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:05,364:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:05,398:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:05,441:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:05,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:05,524:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:05,595:INFO:Calculating mean and std
2024-11-26 08:26:05,608:INFO:Creating metrics dataframe
2024-11-26 08:26:05,608:INFO:Uploading results into container
2024-11-26 08:26:05,608:INFO:Uploading model into container now
2024-11-26 08:26:05,608:INFO:_master_model_container: 2
2024-11-26 08:26:05,608:INFO:_display_container: 2
2024-11-26 08:26:05,608:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 08:26:05,608:INFO:create_model() successfully completed......................................
2024-11-26 08:26:08,097:INFO:SubProcess create_model() end ==================================
2024-11-26 08:26:08,097:INFO:Creating metrics dataframe
2024-11-26 08:26:08,107:INFO:Initializing Naive Bayes
2024-11-26 08:26:08,107:INFO:Total runtime is 0.6243154287338257 minutes
2024-11-26 08:26:08,107:INFO:SubProcess create_model() called ==================================
2024-11-26 08:26:08,107:INFO:Initializing create_model()
2024-11-26 08:26:08,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:26:08,107:INFO:Checking exceptions
2024-11-26 08:26:08,107:INFO:Importing libraries
2024-11-26 08:26:08,107:INFO:Copying training dataset
2024-11-26 08:26:08,233:INFO:Defining folds
2024-11-26 08:26:08,233:INFO:Declaring metric variables
2024-11-26 08:26:08,267:INFO:Importing untrained model
2024-11-26 08:26:08,284:INFO:Naive Bayes Imported successfully
2024-11-26 08:26:08,310:INFO:Starting cross validation
2024-11-26 08:26:08,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:26:08,678:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:08,678:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:08,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:08,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:08,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:08,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,120:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,141:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,552:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,668:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,679:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,698:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:09,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:10,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:10,444:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:10,457:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:10,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:10,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:10,621:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:11,576:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:11,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:11,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:11,625:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:11,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:11,668:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:11,733:INFO:Calculating mean and std
2024-11-26 08:26:11,738:INFO:Creating metrics dataframe
2024-11-26 08:26:11,752:INFO:Uploading results into container
2024-11-26 08:26:11,753:INFO:Uploading model into container now
2024-11-26 08:26:11,753:INFO:_master_model_container: 3
2024-11-26 08:26:11,753:INFO:_display_container: 2
2024-11-26 08:26:11,753:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 08:26:11,753:INFO:create_model() successfully completed......................................
2024-11-26 08:26:12,267:INFO:SubProcess create_model() end ==================================
2024-11-26 08:26:12,267:INFO:Creating metrics dataframe
2024-11-26 08:26:12,284:INFO:Initializing Decision Tree Classifier
2024-11-26 08:26:12,284:INFO:Total runtime is 0.6939335147539775 minutes
2024-11-26 08:26:12,300:INFO:SubProcess create_model() called ==================================
2024-11-26 08:26:12,300:INFO:Initializing create_model()
2024-11-26 08:26:12,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:26:12,300:INFO:Checking exceptions
2024-11-26 08:26:12,300:INFO:Importing libraries
2024-11-26 08:26:12,300:INFO:Copying training dataset
2024-11-26 08:26:12,397:INFO:Defining folds
2024-11-26 08:26:12,397:INFO:Declaring metric variables
2024-11-26 08:26:12,430:INFO:Importing untrained model
2024-11-26 08:26:12,439:INFO:Decision Tree Classifier Imported successfully
2024-11-26 08:26:12,478:INFO:Starting cross validation
2024-11-26 08:26:12,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:26:16,242:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:16,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:16,337:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:16,457:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:16,552:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:16,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:18,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:18,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:18,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:19,315:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:19,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:19,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:21,279:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:21,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:21,339:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:21,706:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:21,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:21,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:23,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:23,687:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:23,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:24,264:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:24,299:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:24,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:26,136:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:26,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:26,242:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:26,624:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:26,647:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:26,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:26,750:INFO:Calculating mean and std
2024-11-26 08:26:26,750:INFO:Creating metrics dataframe
2024-11-26 08:26:26,750:INFO:Uploading results into container
2024-11-26 08:26:26,750:INFO:Uploading model into container now
2024-11-26 08:26:26,750:INFO:_master_model_container: 4
2024-11-26 08:26:26,769:INFO:_display_container: 2
2024-11-26 08:26:26,769:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4025, splitter='best')
2024-11-26 08:26:26,779:INFO:create_model() successfully completed......................................
2024-11-26 08:26:27,391:INFO:SubProcess create_model() end ==================================
2024-11-26 08:26:27,391:INFO:Creating metrics dataframe
2024-11-26 08:26:27,428:INFO:Initializing SVM - Linear Kernel
2024-11-26 08:26:27,428:INFO:Total runtime is 0.9463292201360067 minutes
2024-11-26 08:26:27,436:INFO:SubProcess create_model() called ==================================
2024-11-26 08:26:27,436:INFO:Initializing create_model()
2024-11-26 08:26:27,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:26:27,436:INFO:Checking exceptions
2024-11-26 08:26:27,436:INFO:Importing libraries
2024-11-26 08:26:27,436:INFO:Copying training dataset
2024-11-26 08:26:27,561:INFO:Defining folds
2024-11-26 08:26:27,561:INFO:Declaring metric variables
2024-11-26 08:26:27,578:INFO:Importing untrained model
2024-11-26 08:26:27,597:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 08:26:27,627:INFO:Starting cross validation
2024-11-26 08:26:27,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:26:28,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:28,895:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:28,943:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:28,970:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:29,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:30,913:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:30,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:30,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,206:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,703:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,890:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,923:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:31,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:32,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:32,602:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:32,632:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:32,728:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:32,774:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:32,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:33,555:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:33,581:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:33,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:33,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:33,690:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:33,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:33,757:INFO:Calculating mean and std
2024-11-26 08:26:33,757:INFO:Creating metrics dataframe
2024-11-26 08:26:33,757:INFO:Uploading results into container
2024-11-26 08:26:33,757:INFO:Uploading model into container now
2024-11-26 08:26:33,757:INFO:_master_model_container: 5
2024-11-26 08:26:33,757:INFO:_display_container: 2
2024-11-26 08:26:33,757:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4025, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 08:26:33,757:INFO:create_model() successfully completed......................................
2024-11-26 08:26:34,351:INFO:SubProcess create_model() end ==================================
2024-11-26 08:26:34,351:INFO:Creating metrics dataframe
2024-11-26 08:26:34,383:INFO:Initializing Ridge Classifier
2024-11-26 08:26:34,383:INFO:Total runtime is 1.0622429728507996 minutes
2024-11-26 08:26:34,414:INFO:SubProcess create_model() called ==================================
2024-11-26 08:26:34,414:INFO:Initializing create_model()
2024-11-26 08:26:34,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:26:34,414:INFO:Checking exceptions
2024-11-26 08:26:34,414:INFO:Importing libraries
2024-11-26 08:26:34,414:INFO:Copying training dataset
2024-11-26 08:26:34,523:INFO:Defining folds
2024-11-26 08:26:34,523:INFO:Declaring metric variables
2024-11-26 08:26:34,554:INFO:Importing untrained model
2024-11-26 08:26:34,575:INFO:Ridge Classifier Imported successfully
2024-11-26 08:26:34,585:INFO:Starting cross validation
2024-11-26 08:26:34,585:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:26:35,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,123:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,566:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,580:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:35,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:36,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:36,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:36,134:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:36,134:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:36,227:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:36,248:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,191:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,210:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,210:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,412:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,515:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,566:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:26:37,622:INFO:Calculating mean and std
2024-11-26 08:26:37,622:INFO:Creating metrics dataframe
2024-11-26 08:26:37,622:INFO:Uploading results into container
2024-11-26 08:26:37,622:INFO:Uploading model into container now
2024-11-26 08:26:37,622:INFO:_master_model_container: 6
2024-11-26 08:26:37,622:INFO:_display_container: 2
2024-11-26 08:26:37,622:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4025, solver='auto',
                tol=0.0001)
2024-11-26 08:26:37,622:INFO:create_model() successfully completed......................................
2024-11-26 08:26:38,139:INFO:SubProcess create_model() end ==================================
2024-11-26 08:26:38,139:INFO:Creating metrics dataframe
2024-11-26 08:26:38,234:INFO:Initializing Random Forest Classifier
2024-11-26 08:26:38,234:INFO:Total runtime is 1.1264214833577475 minutes
2024-11-26 08:26:38,249:INFO:SubProcess create_model() called ==================================
2024-11-26 08:26:38,249:INFO:Initializing create_model()
2024-11-26 08:26:38,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:26:38,249:INFO:Checking exceptions
2024-11-26 08:26:38,249:INFO:Importing libraries
2024-11-26 08:26:38,249:INFO:Copying training dataset
2024-11-26 08:26:38,486:INFO:Defining folds
2024-11-26 08:26:38,486:INFO:Declaring metric variables
2024-11-26 08:26:38,497:INFO:Importing untrained model
2024-11-26 08:26:38,521:INFO:Random Forest Classifier Imported successfully
2024-11-26 08:26:38,548:INFO:Starting cross validation
2024-11-26 08:26:38,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:27:06,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:06,996:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:07,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:07,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:07,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:07,187:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:32,459:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:32,550:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:32,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:33,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:33,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:34,069:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:58,709:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:58,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:58,765:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:59,039:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:59,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:27:59,173:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:25,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:25,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:25,770:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:25,971:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:26,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:26,090:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:49,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:49,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:49,742:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:49,787:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:49,803:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:49,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:49,880:INFO:Calculating mean and std
2024-11-26 08:28:49,885:INFO:Creating metrics dataframe
2024-11-26 08:28:49,895:INFO:Uploading results into container
2024-11-26 08:28:49,897:INFO:Uploading model into container now
2024-11-26 08:28:49,898:INFO:_master_model_container: 7
2024-11-26 08:28:49,898:INFO:_display_container: 2
2024-11-26 08:28:49,899:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4025, verbose=0,
                       warm_start=False)
2024-11-26 08:28:49,899:INFO:create_model() successfully completed......................................
2024-11-26 08:28:50,513:INFO:SubProcess create_model() end ==================================
2024-11-26 08:28:50,514:INFO:Creating metrics dataframe
2024-11-26 08:28:50,525:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 08:28:50,526:INFO:Total runtime is 3.3312908768653875 minutes
2024-11-26 08:28:50,532:INFO:SubProcess create_model() called ==================================
2024-11-26 08:28:50,533:INFO:Initializing create_model()
2024-11-26 08:28:50,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:28:50,533:INFO:Checking exceptions
2024-11-26 08:28:50,533:INFO:Importing libraries
2024-11-26 08:28:50,535:INFO:Copying training dataset
2024-11-26 08:28:50,617:INFO:Defining folds
2024-11-26 08:28:50,617:INFO:Declaring metric variables
2024-11-26 08:28:50,621:INFO:Importing untrained model
2024-11-26 08:28:50,644:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 08:28:50,660:INFO:Starting cross validation
2024-11-26 08:28:50,673:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:28:51,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:51,073:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:51,192:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:51,201:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:51,242:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:51,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:51,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:51,293:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:51,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:51,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:51,931:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:51,998:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:52,020:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:52,076:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:52,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:52,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:52,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:52,432:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:52,469:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:52,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:52,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:52,867:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,095:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,262:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:53,364:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:53,397:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,448:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,468:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,521:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,710:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:53,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 08:28:53,787:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:28:53,919:INFO:Calculating mean and std
2024-11-26 08:28:53,928:INFO:Creating metrics dataframe
2024-11-26 08:28:53,930:INFO:Uploading results into container
2024-11-26 08:28:53,931:INFO:Uploading model into container now
2024-11-26 08:28:53,934:INFO:_master_model_container: 8
2024-11-26 08:28:53,934:INFO:_display_container: 2
2024-11-26 08:28:53,935:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 08:28:53,936:INFO:create_model() successfully completed......................................
2024-11-26 08:28:54,394:INFO:SubProcess create_model() end ==================================
2024-11-26 08:28:54,394:INFO:Creating metrics dataframe
2024-11-26 08:28:54,431:INFO:Initializing Ada Boost Classifier
2024-11-26 08:28:54,431:INFO:Total runtime is 3.396367307504019 minutes
2024-11-26 08:28:54,449:INFO:SubProcess create_model() called ==================================
2024-11-26 08:28:54,456:INFO:Initializing create_model()
2024-11-26 08:28:54,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:28:54,456:INFO:Checking exceptions
2024-11-26 08:28:54,456:INFO:Importing libraries
2024-11-26 08:28:54,456:INFO:Copying training dataset
2024-11-26 08:28:54,555:INFO:Defining folds
2024-11-26 08:28:54,556:INFO:Declaring metric variables
2024-11-26 08:28:54,580:INFO:Importing untrained model
2024-11-26 08:28:54,588:INFO:Ada Boost Classifier Imported successfully
2024-11-26 08:28:54,614:INFO:Starting cross validation
2024-11-26 08:28:54,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:28:54,798:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:28:54,798:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:02,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:02,254:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:02,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:02,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:02,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:02,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:02,569:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:02,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:09,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:09,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:09,151:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:09,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:09,333:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:09,366:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:09,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:09,523:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:15,931:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:15,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:16,001:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:16,168:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:16,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:16,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:16,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:16,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:22,340:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:22,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:22,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:22,663:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:22,684:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:22,708:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:22,745:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:22,946:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 08:29:28,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:28,136:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:28,172:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:28,429:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:28,469:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:28,500:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:28,560:INFO:Calculating mean and std
2024-11-26 08:29:28,564:INFO:Creating metrics dataframe
2024-11-26 08:29:28,585:INFO:Uploading results into container
2024-11-26 08:29:28,586:INFO:Uploading model into container now
2024-11-26 08:29:28,587:INFO:_master_model_container: 9
2024-11-26 08:29:28,588:INFO:_display_container: 2
2024-11-26 08:29:28,590:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4025)
2024-11-26 08:29:28,590:INFO:create_model() successfully completed......................................
2024-11-26 08:29:29,031:INFO:SubProcess create_model() end ==================================
2024-11-26 08:29:29,031:INFO:Creating metrics dataframe
2024-11-26 08:29:29,061:INFO:Initializing Gradient Boosting Classifier
2024-11-26 08:29:29,062:INFO:Total runtime is 3.9735641360282905 minutes
2024-11-26 08:29:29,072:INFO:SubProcess create_model() called ==================================
2024-11-26 08:29:29,072:INFO:Initializing create_model()
2024-11-26 08:29:29,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:29:29,075:INFO:Checking exceptions
2024-11-26 08:29:29,075:INFO:Importing libraries
2024-11-26 08:29:29,075:INFO:Copying training dataset
2024-11-26 08:29:29,169:INFO:Defining folds
2024-11-26 08:29:29,171:INFO:Declaring metric variables
2024-11-26 08:29:29,192:INFO:Importing untrained model
2024-11-26 08:29:29,203:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 08:29:29,237:INFO:Starting cross validation
2024-11-26 08:29:29,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:29:59,324:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:59,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:59,393:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:59,862:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:59,888:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:29:59,917:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:27,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:27,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:27,320:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:28,328:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:28,361:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:28,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:55,897:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:55,915:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:55,938:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:57,651:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:57,714:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:30:57,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:24,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:24,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:24,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:27,366:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:27,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:27,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:52,656:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:52,676:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:52,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:55,167:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:55,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:55,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:55,289:INFO:Calculating mean and std
2024-11-26 08:31:55,316:INFO:Creating metrics dataframe
2024-11-26 08:31:55,325:INFO:Uploading results into container
2024-11-26 08:31:55,329:INFO:Uploading model into container now
2024-11-26 08:31:55,331:INFO:_master_model_container: 10
2024-11-26 08:31:55,331:INFO:_display_container: 2
2024-11-26 08:31:55,333:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4025, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 08:31:55,334:INFO:create_model() successfully completed......................................
2024-11-26 08:31:55,886:INFO:SubProcess create_model() end ==================================
2024-11-26 08:31:55,887:INFO:Creating metrics dataframe
2024-11-26 08:31:55,915:INFO:Initializing Linear Discriminant Analysis
2024-11-26 08:31:55,915:INFO:Total runtime is 6.42110741933187 minutes
2024-11-26 08:31:55,936:INFO:SubProcess create_model() called ==================================
2024-11-26 08:31:55,937:INFO:Initializing create_model()
2024-11-26 08:31:55,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:31:55,941:INFO:Checking exceptions
2024-11-26 08:31:55,942:INFO:Importing libraries
2024-11-26 08:31:55,942:INFO:Copying training dataset
2024-11-26 08:31:56,029:INFO:Defining folds
2024-11-26 08:31:56,029:INFO:Declaring metric variables
2024-11-26 08:31:56,053:INFO:Importing untrained model
2024-11-26 08:31:56,068:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 08:31:56,105:INFO:Starting cross validation
2024-11-26 08:31:56,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:31:56,534:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:56,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:56,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:56,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:56,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:56,589:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:57,143:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:57,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:57,254:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:57,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:57,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:57,468:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:58,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:58,170:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:58,195:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:58,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:58,310:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:58,801:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:59,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:59,680:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:59,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:59,703:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:59,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:31:59,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:00,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:00,172:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:00,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:00,242:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:00,256:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:00,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:00,311:INFO:Calculating mean and std
2024-11-26 08:32:00,314:INFO:Creating metrics dataframe
2024-11-26 08:32:00,323:INFO:Uploading results into container
2024-11-26 08:32:00,326:INFO:Uploading model into container now
2024-11-26 08:32:00,326:INFO:_master_model_container: 11
2024-11-26 08:32:00,327:INFO:_display_container: 2
2024-11-26 08:32:00,327:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 08:32:00,327:INFO:create_model() successfully completed......................................
2024-11-26 08:32:00,883:INFO:SubProcess create_model() end ==================================
2024-11-26 08:32:00,883:INFO:Creating metrics dataframe
2024-11-26 08:32:00,907:INFO:Initializing Extra Trees Classifier
2024-11-26 08:32:00,908:INFO:Total runtime is 6.504321404298148 minutes
2024-11-26 08:32:00,916:INFO:SubProcess create_model() called ==================================
2024-11-26 08:32:00,916:INFO:Initializing create_model()
2024-11-26 08:32:00,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:32:00,917:INFO:Checking exceptions
2024-11-26 08:32:00,917:INFO:Importing libraries
2024-11-26 08:32:00,917:INFO:Copying training dataset
2024-11-26 08:32:01,005:INFO:Defining folds
2024-11-26 08:32:01,014:INFO:Declaring metric variables
2024-11-26 08:32:01,034:INFO:Importing untrained model
2024-11-26 08:32:01,056:INFO:Extra Trees Classifier Imported successfully
2024-11-26 08:32:01,095:INFO:Starting cross validation
2024-11-26 08:32:01,103:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:32:11,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:11,270:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:11,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:11,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:11,632:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:11,689:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:22,751:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:22,821:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:22,866:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:23,025:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:23,089:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:23,132:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:34,602:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:34,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:34,753:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:34,765:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:34,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:34,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:42,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:42,988:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:43,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:43,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:43,149:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:43,240:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:54,745:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:54,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:54,907:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:54,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:55,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:55,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:55,131:INFO:Calculating mean and std
2024-11-26 08:32:55,135:INFO:Creating metrics dataframe
2024-11-26 08:32:55,144:INFO:Uploading results into container
2024-11-26 08:32:55,145:INFO:Uploading model into container now
2024-11-26 08:32:55,146:INFO:_master_model_container: 12
2024-11-26 08:32:55,146:INFO:_display_container: 2
2024-11-26 08:32:55,147:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False)
2024-11-26 08:32:55,147:INFO:create_model() successfully completed......................................
2024-11-26 08:32:55,768:INFO:SubProcess create_model() end ==================================
2024-11-26 08:32:55,768:INFO:Creating metrics dataframe
2024-11-26 08:32:55,785:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 08:32:55,785:INFO:Total runtime is 7.418943488597871 minutes
2024-11-26 08:32:55,792:INFO:SubProcess create_model() called ==================================
2024-11-26 08:32:55,792:INFO:Initializing create_model()
2024-11-26 08:32:55,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:32:55,796:INFO:Checking exceptions
2024-11-26 08:32:55,796:INFO:Importing libraries
2024-11-26 08:32:55,796:INFO:Copying training dataset
2024-11-26 08:32:55,891:INFO:Defining folds
2024-11-26 08:32:55,891:INFO:Declaring metric variables
2024-11-26 08:32:55,900:INFO:Importing untrained model
2024-11-26 08:32:55,906:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 08:32:55,917:INFO:Starting cross validation
2024-11-26 08:32:55,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:32:59,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:59,687:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:59,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:59,705:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:59,742:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:32:59,746:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:02,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:02,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:02,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:02,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:02,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:02,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:06,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:06,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:06,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:07,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:07,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:07,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:09,007:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:09,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:09,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:09,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:09,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:09,925:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:11,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:11,315:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:11,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:11,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:11,682:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:11,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:11,738:INFO:Calculating mean and std
2024-11-26 08:33:11,742:INFO:Creating metrics dataframe
2024-11-26 08:33:11,751:INFO:Uploading results into container
2024-11-26 08:33:11,759:INFO:Uploading model into container now
2024-11-26 08:33:11,763:INFO:_master_model_container: 13
2024-11-26 08:33:11,763:INFO:_display_container: 2
2024-11-26 08:33:11,765:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4025, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 08:33:11,765:INFO:create_model() successfully completed......................................
2024-11-26 08:33:12,257:INFO:SubProcess create_model() end ==================================
2024-11-26 08:33:12,259:INFO:Creating metrics dataframe
2024-11-26 08:33:12,284:INFO:Initializing Dummy Classifier
2024-11-26 08:33:12,285:INFO:Total runtime is 7.693942650159201 minutes
2024-11-26 08:33:12,295:INFO:SubProcess create_model() called ==================================
2024-11-26 08:33:12,295:INFO:Initializing create_model()
2024-11-26 08:33:12,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020E5E8DEF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:33:12,296:INFO:Checking exceptions
2024-11-26 08:33:12,296:INFO:Importing libraries
2024-11-26 08:33:12,296:INFO:Copying training dataset
2024-11-26 08:33:12,379:INFO:Defining folds
2024-11-26 08:33:12,379:INFO:Declaring metric variables
2024-11-26 08:33:12,385:INFO:Importing untrained model
2024-11-26 08:33:12,396:INFO:Dummy Classifier Imported successfully
2024-11-26 08:33:12,418:INFO:Starting cross validation
2024-11-26 08:33:12,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 08:33:12,639:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,639:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:12,675:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:12,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,687:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,964:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,971:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:12,995:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:13,001:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:13,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,302:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,330:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:13,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,345:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:13,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,763:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,796:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,809:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:13,816:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:13,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:13,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:14,123:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:14,239:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:14,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:14,425:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:14,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:14,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:14,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 08:33:14,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 08:33:14,896:INFO:Calculating mean and std
2024-11-26 08:33:14,898:INFO:Creating metrics dataframe
2024-11-26 08:33:14,902:INFO:Uploading results into container
2024-11-26 08:33:14,902:INFO:Uploading model into container now
2024-11-26 08:33:14,903:INFO:_master_model_container: 14
2024-11-26 08:33:14,905:INFO:_display_container: 2
2024-11-26 08:33:14,908:INFO:DummyClassifier(constant=None, random_state=4025, strategy='prior')
2024-11-26 08:33:14,908:INFO:create_model() successfully completed......................................
2024-11-26 08:33:15,437:INFO:SubProcess create_model() end ==================================
2024-11-26 08:33:15,437:INFO:Creating metrics dataframe
2024-11-26 08:33:15,497:INFO:Initializing create_model()
2024-11-26 08:33:15,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:33:15,499:INFO:Checking exceptions
2024-11-26 08:33:15,503:INFO:Importing libraries
2024-11-26 08:33:15,503:INFO:Copying training dataset
2024-11-26 08:33:15,592:INFO:Defining folds
2024-11-26 08:33:15,592:INFO:Declaring metric variables
2024-11-26 08:33:15,592:INFO:Importing untrained model
2024-11-26 08:33:15,592:INFO:Declaring custom model
2024-11-26 08:33:15,592:INFO:Extra Trees Classifier Imported successfully
2024-11-26 08:33:15,592:INFO:Cross validation set to False
2024-11-26 08:33:15,592:INFO:Fitting Model
2024-11-26 08:33:21,741:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False)
2024-11-26 08:33:21,742:INFO:create_model() successfully completed......................................
2024-11-26 08:33:22,363:INFO:_master_model_container: 14
2024-11-26 08:33:22,363:INFO:_display_container: 2
2024-11-26 08:33:22,363:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False)
2024-11-26 08:33:22,363:INFO:compare_models() successfully completed......................................
2024-11-26 08:33:22,378:INFO:Initializing automl()
2024-11-26 08:33:22,378:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 08:33:22,379:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 08:33:22,379:INFO:Checking model 0
2024-11-26 08:33:22,379:INFO:Checking model 1
2024-11-26 08:33:22,379:INFO:Checking model 2
2024-11-26 08:33:22,379:INFO:Checking model 3
2024-11-26 08:33:22,379:INFO:Checking model 4
2024-11-26 08:33:22,379:INFO:Checking model 5
2024-11-26 08:33:22,379:INFO:Checking model 6
2024-11-26 08:33:22,381:INFO:Checking model 7
2024-11-26 08:33:22,383:INFO:Checking model 8
2024-11-26 08:33:22,383:INFO:Checking model 9
2024-11-26 08:33:22,385:INFO:Checking model 10
2024-11-26 08:33:22,386:INFO:Checking model 11
2024-11-26 08:33:22,386:INFO:Checking model 12
2024-11-26 08:33:22,387:INFO:Checking model 13
2024-11-26 08:33:22,389:INFO:Initializing create_model()
2024-11-26 08:33:22,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 08:33:22,390:INFO:Checking exceptions
2024-11-26 08:33:22,399:INFO:Importing libraries
2024-11-26 08:33:22,400:INFO:Copying training dataset
2024-11-26 08:33:22,571:INFO:Defining folds
2024-11-26 08:33:22,572:INFO:Declaring metric variables
2024-11-26 08:33:22,572:INFO:Importing untrained model
2024-11-26 08:33:22,573:INFO:Declaring custom model
2024-11-26 08:33:22,577:INFO:Extra Trees Classifier Imported successfully
2024-11-26 08:33:22,580:INFO:Cross validation set to False
2024-11-26 08:33:22,581:INFO:Fitting Model
2024-11-26 08:33:29,403:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False)
2024-11-26 08:33:29,403:INFO:create_model() successfully completed......................................
2024-11-26 08:33:30,475:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False)
2024-11-26 08:33:30,476:INFO:automl() successfully completed......................................
2024-11-26 08:33:30,727:INFO:Initializing predict_model()
2024-11-26 08:33:30,727:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E5DC649A0>)
2024-11-26 08:33:30,727:INFO:Checking exceptions
2024-11-26 08:33:30,727:INFO:Preloading libraries
2024-11-26 08:33:30,731:INFO:Set up data.
2024-11-26 08:33:30,779:INFO:Set up index.
2024-11-26 09:03:59,327:INFO:Initializing plot_model()
2024-11-26 09:03:59,329:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-26 09:03:59,329:INFO:Checking exceptions
2024-11-26 09:03:59,912:INFO:Preloading libraries
2024-11-26 09:04:01,608:INFO:Copying training dataset
2024-11-26 09:04:01,768:INFO:Plot type: feature
2024-11-26 09:04:01,768:WARNING:No coef_ found. Trying feature_importances_
2024-11-26 09:04:05,642:INFO:Visual Rendered Successfully
2024-11-26 09:04:08,853:INFO:plot_model() successfully completed......................................
2024-11-26 09:04:25,037:INFO:Initializing plot_model()
2024-11-26 09:04:25,037:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-26 09:04:25,037:INFO:Checking exceptions
2024-11-26 09:04:25,190:INFO:Preloading libraries
2024-11-26 09:04:26,238:INFO:Copying training dataset
2024-11-26 09:04:26,238:INFO:Plot type: auc
2024-11-26 09:04:29,189:INFO:Fitting Model
2024-11-26 09:04:29,205:INFO:Scoring test/hold-out set
2024-11-26 09:04:31,005:INFO:Visual Rendered Successfully
2024-11-26 09:04:31,818:INFO:plot_model() successfully completed......................................
2024-11-26 09:06:35,876:INFO:Initializing predict_model()
2024-11-26 09:06:35,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E5DC67D80>)
2024-11-26 09:06:35,876:INFO:Checking exceptions
2024-11-26 09:06:35,876:INFO:Preloading libraries
2024-11-26 09:06:35,880:INFO:Set up data.
2024-11-26 09:06:35,886:INFO:Set up index.
2024-11-26 09:06:41,273:INFO:Initializing predict_model()
2024-11-26 09:06:41,273:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E5E348E50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4025, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E5E2A85E0>)
2024-11-26 09:06:41,273:INFO:Checking exceptions
2024-11-26 09:06:41,273:INFO:Preloading libraries
2024-11-26 09:06:41,273:INFO:Set up data.
2024-11-26 09:06:41,307:INFO:Set up index.
2024-11-26 09:17:43,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-26 09:17:43,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-26 09:17:43,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-26 09:17:43,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-26 09:50:35,213:INFO:PyCaret ClassificationExperiment
2024-11-26 09:50:35,215:INFO:Logging name: clf-default-name
2024-11-26 09:50:35,215:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 09:50:35,215:INFO:version 3.3.2
2024-11-26 09:50:35,215:INFO:Initializing setup()
2024-11-26 09:50:35,215:INFO:self.USI: 767a
2024-11-26 09:50:35,215:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 09:50:35,215:INFO:Checking environment
2024-11-26 09:50:35,215:INFO:python_version: 3.11.9
2024-11-26 09:50:35,217:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 09:50:35,217:INFO:machine: AMD64
2024-11-26 09:50:35,217:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 09:50:35,221:INFO:Memory: svmem(total=4293971968, available=1320886272, percent=69.2, used=2973085696, free=1320886272)
2024-11-26 09:50:35,221:INFO:Physical Core: 2
2024-11-26 09:50:35,221:INFO:Logical Core: 2
2024-11-26 09:50:35,221:INFO:Checking libraries
2024-11-26 09:50:35,221:INFO:System:
2024-11-26 09:50:35,221:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 09:50:35,222:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 09:50:35,222:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 09:50:35,222:INFO:PyCaret required dependencies:
2024-11-26 09:50:35,360:INFO:                 pip: 24.3.1
2024-11-26 09:50:35,360:INFO:          setuptools: 65.5.0
2024-11-26 09:50:35,360:INFO:             pycaret: 3.3.2
2024-11-26 09:50:35,360:INFO:             IPython: 8.26.0
2024-11-26 09:50:35,360:INFO:          ipywidgets: 8.1.5
2024-11-26 09:50:35,360:INFO:                tqdm: 4.66.5
2024-11-26 09:50:35,360:INFO:               numpy: 1.26.4
2024-11-26 09:50:35,361:INFO:              pandas: 2.1.4
2024-11-26 09:50:35,361:INFO:              jinja2: 3.1.4
2024-11-26 09:50:35,361:INFO:               scipy: 1.11.4
2024-11-26 09:50:35,361:INFO:              joblib: 1.3.2
2024-11-26 09:50:35,361:INFO:             sklearn: 1.4.2
2024-11-26 09:50:35,361:INFO:                pyod: 2.0.2
2024-11-26 09:50:35,361:INFO:            imblearn: 0.12.4
2024-11-26 09:50:35,361:INFO:   category_encoders: 2.6.4
2024-11-26 09:50:35,361:INFO:            lightgbm: 4.5.0
2024-11-26 09:50:35,362:INFO:               numba: 0.60.0
2024-11-26 09:50:35,362:INFO:            requests: 2.32.3
2024-11-26 09:50:35,362:INFO:          matplotlib: 3.7.5
2024-11-26 09:50:35,362:INFO:          scikitplot: 0.3.7
2024-11-26 09:50:35,362:INFO:         yellowbrick: 1.5
2024-11-26 09:50:35,362:INFO:              plotly: 5.24.1
2024-11-26 09:50:35,362:INFO:    plotly-resampler: Not installed
2024-11-26 09:50:35,362:INFO:             kaleido: 0.2.1
2024-11-26 09:50:35,362:INFO:           schemdraw: 0.15
2024-11-26 09:50:35,362:INFO:         statsmodels: 0.14.3
2024-11-26 09:50:35,362:INFO:              sktime: 0.26.0
2024-11-26 09:50:35,363:INFO:               tbats: 1.1.3
2024-11-26 09:50:35,363:INFO:            pmdarima: 2.0.4
2024-11-26 09:50:35,363:INFO:              psutil: 6.0.0
2024-11-26 09:50:35,363:INFO:          markupsafe: 3.0.2
2024-11-26 09:50:35,363:INFO:             pickle5: Not installed
2024-11-26 09:50:35,363:INFO:         cloudpickle: 3.0.0
2024-11-26 09:50:35,363:INFO:         deprecation: 2.1.0
2024-11-26 09:50:35,363:INFO:              xxhash: 3.5.0
2024-11-26 09:50:35,363:INFO:           wurlitzer: Not installed
2024-11-26 09:50:35,363:INFO:PyCaret optional dependencies:
2024-11-26 09:50:35,399:INFO:                shap: 0.46.0
2024-11-26 09:50:35,399:INFO:           interpret: Not installed
2024-11-26 09:50:35,399:INFO:                umap: Not installed
2024-11-26 09:50:35,399:INFO:     ydata_profiling: Not installed
2024-11-26 09:50:35,399:INFO:  explainerdashboard: Not installed
2024-11-26 09:50:35,399:INFO:             autoviz: Not installed
2024-11-26 09:50:35,399:INFO:           fairlearn: Not installed
2024-11-26 09:50:35,399:INFO:          deepchecks: Not installed
2024-11-26 09:50:35,399:INFO:             xgboost: Not installed
2024-11-26 09:50:35,399:INFO:            catboost: Not installed
2024-11-26 09:50:35,399:INFO:              kmodes: Not installed
2024-11-26 09:50:35,399:INFO:             mlxtend: Not installed
2024-11-26 09:50:35,399:INFO:       statsforecast: Not installed
2024-11-26 09:50:35,399:INFO:        tune_sklearn: Not installed
2024-11-26 09:50:35,399:INFO:                 ray: Not installed
2024-11-26 09:50:35,399:INFO:            hyperopt: Not installed
2024-11-26 09:50:35,399:INFO:              optuna: 4.1.0
2024-11-26 09:50:35,399:INFO:               skopt: Not installed
2024-11-26 09:50:35,399:INFO:              mlflow: Not installed
2024-11-26 09:50:35,399:INFO:              gradio: Not installed
2024-11-26 09:50:35,399:INFO:             fastapi: Not installed
2024-11-26 09:50:35,399:INFO:             uvicorn: Not installed
2024-11-26 09:50:35,399:INFO:              m2cgen: Not installed
2024-11-26 09:50:35,399:INFO:           evidently: Not installed
2024-11-26 09:50:35,399:INFO:               fugue: Not installed
2024-11-26 09:50:35,399:INFO:           streamlit: Not installed
2024-11-26 09:50:35,399:INFO:             prophet: Not installed
2024-11-26 09:50:35,399:INFO:None
2024-11-26 09:50:35,399:INFO:Set up data.
2024-11-26 09:50:35,474:INFO:Set up folding strategy.
2024-11-26 09:50:35,474:INFO:Set up train/test split.
2024-11-26 09:50:35,568:INFO:Set up index.
2024-11-26 09:50:35,577:INFO:Assigning column types.
2024-11-26 09:50:35,672:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 09:50:35,812:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 09:50:35,830:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 09:50:36,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:36,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:36,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 09:50:36,436:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 09:50:36,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:36,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:36,498:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 09:50:36,586:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 09:50:36,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:36,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:36,906:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 09:50:37,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:37,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:37,184:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 09:50:37,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:37,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:37,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:37,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:37,515:INFO:Preparing preprocessing pipeline...
2024-11-26 09:50:37,543:INFO:Set up label encoding.
2024-11-26 09:50:37,543:INFO:Set up simple imputation.
2024-11-26 09:50:37,819:INFO:Finished creating preprocessing pipeline.
2024-11-26 09:50:37,856:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 09:50:37,856:INFO:Creating final display dataframe.
2024-11-26 09:50:38,460:INFO:Setup _display_container:                     Description             Value
0                    Session id              3298
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              767a
2024-11-26 09:50:38,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:38,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:38,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:38,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:50:38,920:INFO:setup() successfully completed in 3.94s...............
2024-11-26 09:50:38,920:INFO:Initializing compare_models()
2024-11-26 09:50:38,920:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 09:50:38,920:INFO:Checking exceptions
2024-11-26 09:50:39,020:INFO:Preparing display monitor
2024-11-26 09:50:39,189:INFO:Initializing Logistic Regression
2024-11-26 09:50:39,189:INFO:Total runtime is 2.6114781697591145e-05 minutes
2024-11-26 09:50:39,218:INFO:SubProcess create_model() called ==================================
2024-11-26 09:50:39,297:INFO:Initializing create_model()
2024-11-26 09:50:39,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:50:39,298:INFO:Checking exceptions
2024-11-26 09:50:39,298:INFO:Importing libraries
2024-11-26 09:50:39,298:INFO:Copying training dataset
2024-11-26 09:50:39,455:INFO:Defining folds
2024-11-26 09:50:39,455:INFO:Declaring metric variables
2024-11-26 09:50:39,473:INFO:Importing untrained model
2024-11-26 09:50:39,482:INFO:Logistic Regression Imported successfully
2024-11-26 09:50:39,498:INFO:Starting cross validation
2024-11-26 09:50:39,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:50:48,278:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:48,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:48,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:48,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:48,337:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:48,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:49,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:49,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:49,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:49,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:49,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:49,394:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:50,719:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:50,729:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:50,769:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:50,769:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:50,816:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:50,821:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:51,922:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:51,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:52,021:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:52,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:52,089:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:52,134:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:53,112:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:53,121:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:53,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:53,199:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:53,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:53,263:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:53,322:INFO:Calculating mean and std
2024-11-26 09:50:53,368:INFO:Creating metrics dataframe
2024-11-26 09:50:53,384:INFO:Uploading results into container
2024-11-26 09:50:53,386:INFO:Uploading model into container now
2024-11-26 09:50:53,389:INFO:_master_model_container: 1
2024-11-26 09:50:53,389:INFO:_display_container: 2
2024-11-26 09:50:53,393:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3298, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 09:50:53,393:INFO:create_model() successfully completed......................................
2024-11-26 09:50:55,669:INFO:SubProcess create_model() end ==================================
2024-11-26 09:50:55,669:INFO:Creating metrics dataframe
2024-11-26 09:50:55,690:INFO:Initializing K Neighbors Classifier
2024-11-26 09:50:55,691:INFO:Total runtime is 0.27505060434341433 minutes
2024-11-26 09:50:55,709:INFO:SubProcess create_model() called ==================================
2024-11-26 09:50:55,709:INFO:Initializing create_model()
2024-11-26 09:50:55,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:50:55,709:INFO:Checking exceptions
2024-11-26 09:50:55,709:INFO:Importing libraries
2024-11-26 09:50:55,709:INFO:Copying training dataset
2024-11-26 09:50:55,842:INFO:Defining folds
2024-11-26 09:50:55,850:INFO:Declaring metric variables
2024-11-26 09:50:55,868:INFO:Importing untrained model
2024-11-26 09:50:55,884:INFO:K Neighbors Classifier Imported successfully
2024-11-26 09:50:55,915:INFO:Starting cross validation
2024-11-26 09:50:55,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:50:58,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:58,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:58,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:58,743:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:58,756:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:50:58,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:00,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:00,972:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:01,021:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:01,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:01,111:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:01,159:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:02,896:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:02,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:02,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:02,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:02,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:03,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:04,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:04,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:04,873:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:04,878:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:04,919:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:04,925:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:06,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:06,986:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,012:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,085:INFO:Calculating mean and std
2024-11-26 09:51:07,087:INFO:Creating metrics dataframe
2024-11-26 09:51:07,092:INFO:Uploading results into container
2024-11-26 09:51:07,098:INFO:Uploading model into container now
2024-11-26 09:51:07,099:INFO:_master_model_container: 2
2024-11-26 09:51:07,099:INFO:_display_container: 2
2024-11-26 09:51:07,100:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 09:51:07,101:INFO:create_model() successfully completed......................................
2024-11-26 09:51:07,295:INFO:SubProcess create_model() end ==================================
2024-11-26 09:51:07,295:INFO:Creating metrics dataframe
2024-11-26 09:51:07,310:INFO:Initializing Naive Bayes
2024-11-26 09:51:07,310:INFO:Total runtime is 0.4687050700187683 minutes
2024-11-26 09:51:07,317:INFO:SubProcess create_model() called ==================================
2024-11-26 09:51:07,318:INFO:Initializing create_model()
2024-11-26 09:51:07,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:51:07,319:INFO:Checking exceptions
2024-11-26 09:51:07,319:INFO:Importing libraries
2024-11-26 09:51:07,320:INFO:Copying training dataset
2024-11-26 09:51:07,450:INFO:Defining folds
2024-11-26 09:51:07,450:INFO:Declaring metric variables
2024-11-26 09:51:07,470:INFO:Importing untrained model
2024-11-26 09:51:07,483:INFO:Naive Bayes Imported successfully
2024-11-26 09:51:07,507:INFO:Starting cross validation
2024-11-26 09:51:07,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:51:07,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,869:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,895:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,906:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,939:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:07,950:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,227:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,232:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,338:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,532:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,551:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,591:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:08,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,123:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,163:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,165:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,216:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,248:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,810:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,814:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,839:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,839:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,869:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,878:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:09,937:INFO:Calculating mean and std
2024-11-26 09:51:09,942:INFO:Creating metrics dataframe
2024-11-26 09:51:09,947:INFO:Uploading results into container
2024-11-26 09:51:09,948:INFO:Uploading model into container now
2024-11-26 09:51:09,948:INFO:_master_model_container: 3
2024-11-26 09:51:09,948:INFO:_display_container: 2
2024-11-26 09:51:09,949:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 09:51:09,949:INFO:create_model() successfully completed......................................
2024-11-26 09:51:10,133:INFO:SubProcess create_model() end ==================================
2024-11-26 09:51:10,134:INFO:Creating metrics dataframe
2024-11-26 09:51:10,151:INFO:Initializing Decision Tree Classifier
2024-11-26 09:51:10,151:INFO:Total runtime is 0.5160550236701965 minutes
2024-11-26 09:51:10,158:INFO:SubProcess create_model() called ==================================
2024-11-26 09:51:10,158:INFO:Initializing create_model()
2024-11-26 09:51:10,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:51:10,159:INFO:Checking exceptions
2024-11-26 09:51:10,159:INFO:Importing libraries
2024-11-26 09:51:10,159:INFO:Copying training dataset
2024-11-26 09:51:10,265:INFO:Defining folds
2024-11-26 09:51:10,266:INFO:Declaring metric variables
2024-11-26 09:51:10,276:INFO:Importing untrained model
2024-11-26 09:51:10,282:INFO:Decision Tree Classifier Imported successfully
2024-11-26 09:51:10,297:INFO:Starting cross validation
2024-11-26 09:51:10,300:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:51:13,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:13,799:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:13,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:13,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:14,051:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:14,068:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:15,833:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:15,860:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:15,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:15,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:15,957:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:16,021:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:17,632:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:17,655:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:17,675:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:17,756:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:17,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:17,792:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:18,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:18,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:18,700:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:18,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:18,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:18,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:20,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:20,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:20,403:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:20,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:20,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:20,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:20,578:INFO:Calculating mean and std
2024-11-26 09:51:20,583:INFO:Creating metrics dataframe
2024-11-26 09:51:20,598:INFO:Uploading results into container
2024-11-26 09:51:20,599:INFO:Uploading model into container now
2024-11-26 09:51:20,600:INFO:_master_model_container: 4
2024-11-26 09:51:20,601:INFO:_display_container: 2
2024-11-26 09:51:20,602:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3298, splitter='best')
2024-11-26 09:51:20,605:INFO:create_model() successfully completed......................................
2024-11-26 09:51:20,814:INFO:SubProcess create_model() end ==================================
2024-11-26 09:51:20,815:INFO:Creating metrics dataframe
2024-11-26 09:51:20,841:INFO:Initializing SVM - Linear Kernel
2024-11-26 09:51:20,841:INFO:Total runtime is 0.6942224621772766 minutes
2024-11-26 09:51:20,862:INFO:SubProcess create_model() called ==================================
2024-11-26 09:51:20,863:INFO:Initializing create_model()
2024-11-26 09:51:20,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:51:20,864:INFO:Checking exceptions
2024-11-26 09:51:20,864:INFO:Importing libraries
2024-11-26 09:51:20,864:INFO:Copying training dataset
2024-11-26 09:51:20,972:INFO:Defining folds
2024-11-26 09:51:20,973:INFO:Declaring metric variables
2024-11-26 09:51:20,997:INFO:Importing untrained model
2024-11-26 09:51:21,022:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 09:51:21,043:INFO:Starting cross validation
2024-11-26 09:51:21,046:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:51:21,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:21,923:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:21,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:22,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:22,139:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:22,254:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:23,879:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:24,012:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:24,066:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:24,417:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:24,442:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:24,457:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:24,997:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:25,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:25,077:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:25,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:25,576:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:25,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,103:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,130:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,154:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,247:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,763:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:26,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,053:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,164:INFO:Calculating mean and std
2024-11-26 09:51:27,168:INFO:Creating metrics dataframe
2024-11-26 09:51:27,173:INFO:Uploading results into container
2024-11-26 09:51:27,174:INFO:Uploading model into container now
2024-11-26 09:51:27,175:INFO:_master_model_container: 5
2024-11-26 09:51:27,175:INFO:_display_container: 2
2024-11-26 09:51:27,176:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3298, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 09:51:27,176:INFO:create_model() successfully completed......................................
2024-11-26 09:51:27,379:INFO:SubProcess create_model() end ==================================
2024-11-26 09:51:27,380:INFO:Creating metrics dataframe
2024-11-26 09:51:27,417:INFO:Initializing Ridge Classifier
2024-11-26 09:51:27,418:INFO:Total runtime is 0.8038334965705871 minutes
2024-11-26 09:51:27,421:INFO:SubProcess create_model() called ==================================
2024-11-26 09:51:27,421:INFO:Initializing create_model()
2024-11-26 09:51:27,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:51:27,421:INFO:Checking exceptions
2024-11-26 09:51:27,421:INFO:Importing libraries
2024-11-26 09:51:27,421:INFO:Copying training dataset
2024-11-26 09:51:27,505:INFO:Defining folds
2024-11-26 09:51:27,505:INFO:Declaring metric variables
2024-11-26 09:51:27,510:INFO:Importing untrained model
2024-11-26 09:51:27,518:INFO:Ridge Classifier Imported successfully
2024-11-26 09:51:27,530:INFO:Starting cross validation
2024-11-26 09:51:27,530:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:51:27,824:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,862:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:27,918:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,328:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,399:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,724:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,826:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:28,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:29,270:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:29,310:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:29,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:29,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:29,352:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:29,392:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:30,053:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:30,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:30,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:30,119:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:30,160:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:30,181:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:30,220:INFO:Calculating mean and std
2024-11-26 09:51:30,225:INFO:Creating metrics dataframe
2024-11-26 09:51:30,230:INFO:Uploading results into container
2024-11-26 09:51:30,232:INFO:Uploading model into container now
2024-11-26 09:51:30,237:INFO:_master_model_container: 6
2024-11-26 09:51:30,237:INFO:_display_container: 2
2024-11-26 09:51:30,238:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3298, solver='auto',
                tol=0.0001)
2024-11-26 09:51:30,239:INFO:create_model() successfully completed......................................
2024-11-26 09:51:30,458:INFO:SubProcess create_model() end ==================================
2024-11-26 09:51:30,460:INFO:Creating metrics dataframe
2024-11-26 09:51:30,492:INFO:Initializing Random Forest Classifier
2024-11-26 09:51:30,492:INFO:Total runtime is 0.8550790389378865 minutes
2024-11-26 09:51:30,508:INFO:SubProcess create_model() called ==================================
2024-11-26 09:51:30,510:INFO:Initializing create_model()
2024-11-26 09:51:30,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:51:30,511:INFO:Checking exceptions
2024-11-26 09:51:30,511:INFO:Importing libraries
2024-11-26 09:51:30,511:INFO:Copying training dataset
2024-11-26 09:51:30,661:INFO:Defining folds
2024-11-26 09:51:30,662:INFO:Declaring metric variables
2024-11-26 09:51:30,674:INFO:Importing untrained model
2024-11-26 09:51:30,681:INFO:Random Forest Classifier Imported successfully
2024-11-26 09:51:30,697:INFO:Starting cross validation
2024-11-26 09:51:30,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:51:51,224:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:51,347:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:51,430:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:51,561:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:51,648:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:51:51,713:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:16,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:16,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:17,064:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:17,352:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:17,392:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:17,425:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:52,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:52,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:53,070:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:53,308:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:53,350:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:52:53,360:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:19,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:19,393:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:19,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:19,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:19,635:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:19,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:47,998:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:48,036:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:48,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:48,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:48,498:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:48,567:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:48,618:INFO:Calculating mean and std
2024-11-26 09:53:48,736:INFO:Creating metrics dataframe
2024-11-26 09:53:48,822:INFO:Uploading results into container
2024-11-26 09:53:48,826:INFO:Uploading model into container now
2024-11-26 09:53:48,826:INFO:_master_model_container: 7
2024-11-26 09:53:48,826:INFO:_display_container: 2
2024-11-26 09:53:48,842:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3298, verbose=0,
                       warm_start=False)
2024-11-26 09:53:48,843:INFO:create_model() successfully completed......................................
2024-11-26 09:53:49,212:INFO:SubProcess create_model() end ==================================
2024-11-26 09:53:49,212:INFO:Creating metrics dataframe
2024-11-26 09:53:49,246:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 09:53:49,246:INFO:Total runtime is 3.1676485101381937 minutes
2024-11-26 09:53:49,259:INFO:SubProcess create_model() called ==================================
2024-11-26 09:53:49,259:INFO:Initializing create_model()
2024-11-26 09:53:49,259:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:53:49,259:INFO:Checking exceptions
2024-11-26 09:53:49,259:INFO:Importing libraries
2024-11-26 09:53:49,259:INFO:Copying training dataset
2024-11-26 09:53:49,558:INFO:Defining folds
2024-11-26 09:53:49,558:INFO:Declaring metric variables
2024-11-26 09:53:49,599:INFO:Importing untrained model
2024-11-26 09:53:49,649:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 09:53:49,701:INFO:Starting cross validation
2024-11-26 09:53:49,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:53:50,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:50,239:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:50,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:50,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:50,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:50,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:50,421:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:50,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:50,854:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:51,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:51,046:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:51,127:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:51,184:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:51,368:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:51,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:51,852:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:52,120:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:52,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:52,528:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:52,560:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:52,781:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:52,788:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:52,942:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:53,181:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:53,493:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:53,496:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:53,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:53,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:53,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:53,640:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:53,642:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:53,653:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:53,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:53,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 09:53:54,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:54,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:54,115:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:54,145:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:54,165:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:54,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:53:54,239:INFO:Calculating mean and std
2024-11-26 09:53:54,241:INFO:Creating metrics dataframe
2024-11-26 09:53:54,262:INFO:Uploading results into container
2024-11-26 09:53:54,264:INFO:Uploading model into container now
2024-11-26 09:53:54,271:INFO:_master_model_container: 8
2024-11-26 09:53:54,271:INFO:_display_container: 2
2024-11-26 09:53:54,273:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 09:53:54,273:INFO:create_model() successfully completed......................................
2024-11-26 09:53:54,548:INFO:SubProcess create_model() end ==================================
2024-11-26 09:53:54,549:INFO:Creating metrics dataframe
2024-11-26 09:53:54,561:INFO:Initializing Ada Boost Classifier
2024-11-26 09:53:54,561:INFO:Total runtime is 3.256225848197937 minutes
2024-11-26 09:53:54,564:INFO:SubProcess create_model() called ==================================
2024-11-26 09:53:54,571:INFO:Initializing create_model()
2024-11-26 09:53:54,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:53:54,571:INFO:Checking exceptions
2024-11-26 09:53:54,571:INFO:Importing libraries
2024-11-26 09:53:54,571:INFO:Copying training dataset
2024-11-26 09:53:54,822:INFO:Defining folds
2024-11-26 09:53:54,822:INFO:Declaring metric variables
2024-11-26 09:53:54,842:INFO:Importing untrained model
2024-11-26 09:53:54,855:INFO:Ada Boost Classifier Imported successfully
2024-11-26 09:53:54,883:INFO:Starting cross validation
2024-11-26 09:53:54,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:53:55,131:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:53:55,131:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:03,534:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:03,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:03,648:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:03,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:03,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:03,933:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:03,986:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:04,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:11,053:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:11,112:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:11,172:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:11,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:11,431:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:11,489:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:11,547:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:11,712:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:16,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:16,903:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:16,946:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:17,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:17,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:17,159:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:17,175:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:17,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:23,430:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:23,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:23,500:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:23,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:23,689:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:23,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:23,766:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:23,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 09:54:30,690:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:30,751:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:30,761:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:30,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:31,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:31,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:54:31,134:INFO:Calculating mean and std
2024-11-26 09:54:31,134:INFO:Creating metrics dataframe
2024-11-26 09:54:31,134:INFO:Uploading results into container
2024-11-26 09:54:31,134:INFO:Uploading model into container now
2024-11-26 09:54:31,134:INFO:_master_model_container: 9
2024-11-26 09:54:31,134:INFO:_display_container: 2
2024-11-26 09:54:31,134:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3298)
2024-11-26 09:54:31,134:INFO:create_model() successfully completed......................................
2024-11-26 09:54:31,373:INFO:SubProcess create_model() end ==================================
2024-11-26 09:54:31,382:INFO:Creating metrics dataframe
2024-11-26 09:54:31,400:INFO:Initializing Gradient Boosting Classifier
2024-11-26 09:54:31,400:INFO:Total runtime is 3.870210814476013 minutes
2024-11-26 09:54:31,419:INFO:SubProcess create_model() called ==================================
2024-11-26 09:54:31,419:INFO:Initializing create_model()
2024-11-26 09:54:31,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:54:31,419:INFO:Checking exceptions
2024-11-26 09:54:31,419:INFO:Importing libraries
2024-11-26 09:54:31,419:INFO:Copying training dataset
2024-11-26 09:54:31,590:INFO:Defining folds
2024-11-26 09:54:31,590:INFO:Declaring metric variables
2024-11-26 09:54:31,608:INFO:Importing untrained model
2024-11-26 09:54:31,630:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 09:54:31,697:INFO:Starting cross validation
2024-11-26 09:54:31,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:55:04,714:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:04,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:04,790:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:05,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:05,469:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:05,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:36,219:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:36,255:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:36,293:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:36,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:36,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:55:36,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:08,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:08,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:08,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:09,051:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:09,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:09,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:37,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:37,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:37,765:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:38,008:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:38,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:56:38,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:03,774:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:03,797:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:03,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:04,031:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:04,051:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:04,081:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:04,146:INFO:Calculating mean and std
2024-11-26 09:57:04,146:INFO:Creating metrics dataframe
2024-11-26 09:57:04,146:INFO:Uploading results into container
2024-11-26 09:57:04,146:INFO:Uploading model into container now
2024-11-26 09:57:04,146:INFO:_master_model_container: 10
2024-11-26 09:57:04,146:INFO:_display_container: 2
2024-11-26 09:57:04,146:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3298, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 09:57:04,146:INFO:create_model() successfully completed......................................
2024-11-26 09:57:04,397:INFO:SubProcess create_model() end ==================================
2024-11-26 09:57:04,397:INFO:Creating metrics dataframe
2024-11-26 09:57:04,427:INFO:Initializing Linear Discriminant Analysis
2024-11-26 09:57:04,427:INFO:Total runtime is 6.420655171076456 minutes
2024-11-26 09:57:04,445:INFO:SubProcess create_model() called ==================================
2024-11-26 09:57:04,445:INFO:Initializing create_model()
2024-11-26 09:57:04,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:57:04,445:INFO:Checking exceptions
2024-11-26 09:57:04,445:INFO:Importing libraries
2024-11-26 09:57:04,445:INFO:Copying training dataset
2024-11-26 09:57:04,756:INFO:Defining folds
2024-11-26 09:57:04,756:INFO:Declaring metric variables
2024-11-26 09:57:04,802:INFO:Importing untrained model
2024-11-26 09:57:04,802:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 09:57:04,837:INFO:Starting cross validation
2024-11-26 09:57:04,839:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:57:05,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,308:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,338:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,360:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,698:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,744:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:05,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:06,740:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:06,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:06,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:06,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:06,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:06,975:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:07,970:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,040:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,160:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,189:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,509:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,615:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,673:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:08,722:INFO:Calculating mean and std
2024-11-26 09:57:08,722:INFO:Creating metrics dataframe
2024-11-26 09:57:08,722:INFO:Uploading results into container
2024-11-26 09:57:08,722:INFO:Uploading model into container now
2024-11-26 09:57:08,722:INFO:_master_model_container: 11
2024-11-26 09:57:08,744:INFO:_display_container: 2
2024-11-26 09:57:08,745:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 09:57:08,745:INFO:create_model() successfully completed......................................
2024-11-26 09:57:08,994:INFO:SubProcess create_model() end ==================================
2024-11-26 09:57:08,994:INFO:Creating metrics dataframe
2024-11-26 09:57:09,004:INFO:Initializing Extra Trees Classifier
2024-11-26 09:57:09,004:INFO:Total runtime is 6.4969467123349505 minutes
2024-11-26 09:57:09,004:INFO:SubProcess create_model() called ==================================
2024-11-26 09:57:09,004:INFO:Initializing create_model()
2024-11-26 09:57:09,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:57:09,004:INFO:Checking exceptions
2024-11-26 09:57:09,004:INFO:Importing libraries
2024-11-26 09:57:09,004:INFO:Copying training dataset
2024-11-26 09:57:09,160:INFO:Defining folds
2024-11-26 09:57:09,160:INFO:Declaring metric variables
2024-11-26 09:57:09,160:INFO:Importing untrained model
2024-11-26 09:57:09,199:INFO:Extra Trees Classifier Imported successfully
2024-11-26 09:57:09,254:INFO:Starting cross validation
2024-11-26 09:57:09,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:57:20,826:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:20,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:20,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:20,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:21,001:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:21,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:30,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:30,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:30,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:30,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:30,359:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:30,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:40,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:40,790:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:40,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:41,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:41,177:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:41,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:51,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:51,076:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:51,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:51,425:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:51,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:57:51,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:00,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:00,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:00,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:00,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:00,990:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:01,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:01,087:INFO:Calculating mean and std
2024-11-26 09:58:01,092:INFO:Creating metrics dataframe
2024-11-26 09:58:01,191:INFO:Uploading results into container
2024-11-26 09:58:01,191:INFO:Uploading model into container now
2024-11-26 09:58:01,191:INFO:_master_model_container: 12
2024-11-26 09:58:01,191:INFO:_display_container: 2
2024-11-26 09:58:01,191:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False)
2024-11-26 09:58:01,191:INFO:create_model() successfully completed......................................
2024-11-26 09:58:01,677:INFO:SubProcess create_model() end ==================================
2024-11-26 09:58:01,677:INFO:Creating metrics dataframe
2024-11-26 09:58:01,693:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 09:58:01,693:INFO:Total runtime is 7.375090312957763 minutes
2024-11-26 09:58:01,718:INFO:SubProcess create_model() called ==================================
2024-11-26 09:58:01,718:INFO:Initializing create_model()
2024-11-26 09:58:01,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:58:01,718:INFO:Checking exceptions
2024-11-26 09:58:01,718:INFO:Importing libraries
2024-11-26 09:58:01,718:INFO:Copying training dataset
2024-11-26 09:58:01,800:INFO:Defining folds
2024-11-26 09:58:01,800:INFO:Declaring metric variables
2024-11-26 09:58:01,800:INFO:Importing untrained model
2024-11-26 09:58:01,800:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 09:58:01,856:INFO:Starting cross validation
2024-11-26 09:58:01,857:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:58:06,088:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:06,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:06,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:06,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:06,400:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:06,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:08,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:08,652:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:08,714:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:08,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:08,925:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:08,959:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:11,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:11,088:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:11,114:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:11,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:11,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:11,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:14,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:14,120:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:14,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:14,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:14,625:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:14,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:16,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:17,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:17,059:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:17,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:17,368:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:17,376:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:17,415:INFO:Calculating mean and std
2024-11-26 09:58:17,415:INFO:Creating metrics dataframe
2024-11-26 09:58:17,423:INFO:Uploading results into container
2024-11-26 09:58:17,423:INFO:Uploading model into container now
2024-11-26 09:58:17,423:INFO:_master_model_container: 13
2024-11-26 09:58:17,423:INFO:_display_container: 2
2024-11-26 09:58:17,425:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3298, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 09:58:17,425:INFO:create_model() successfully completed......................................
2024-11-26 09:58:17,664:INFO:SubProcess create_model() end ==================================
2024-11-26 09:58:17,664:INFO:Creating metrics dataframe
2024-11-26 09:58:17,680:INFO:Initializing Dummy Classifier
2024-11-26 09:58:17,680:INFO:Total runtime is 7.641538099447885 minutes
2024-11-26 09:58:17,680:INFO:SubProcess create_model() called ==================================
2024-11-26 09:58:17,680:INFO:Initializing create_model()
2024-11-26 09:58:17,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB5EEB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:58:17,680:INFO:Checking exceptions
2024-11-26 09:58:17,680:INFO:Importing libraries
2024-11-26 09:58:17,680:INFO:Copying training dataset
2024-11-26 09:58:17,850:INFO:Defining folds
2024-11-26 09:58:17,850:INFO:Declaring metric variables
2024-11-26 09:58:17,851:INFO:Importing untrained model
2024-11-26 09:58:17,851:INFO:Dummy Classifier Imported successfully
2024-11-26 09:58:17,884:INFO:Starting cross validation
2024-11-26 09:58:17,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:58:18,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,245:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,279:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:18,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:18,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,535:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,580:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,580:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,591:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:18,591:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:18,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,900:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,900:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,900:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,921:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:18,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:18,929:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:18,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:19,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:19,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:19,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:19,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:19,733:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:19,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:19,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:19,891:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:19,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:20,258:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:20,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:20,605:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:20,605:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:20,652:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:20,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:20,682:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 09:58:20,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:58:20,769:INFO:Calculating mean and std
2024-11-26 09:58:20,769:INFO:Creating metrics dataframe
2024-11-26 09:58:20,769:INFO:Uploading results into container
2024-11-26 09:58:20,769:INFO:Uploading model into container now
2024-11-26 09:58:20,769:INFO:_master_model_container: 14
2024-11-26 09:58:20,769:INFO:_display_container: 2
2024-11-26 09:58:20,769:INFO:DummyClassifier(constant=None, random_state=3298, strategy='prior')
2024-11-26 09:58:20,769:INFO:create_model() successfully completed......................................
2024-11-26 09:58:20,995:INFO:SubProcess create_model() end ==================================
2024-11-26 09:58:20,995:INFO:Creating metrics dataframe
2024-11-26 09:58:21,067:INFO:Initializing create_model()
2024-11-26 09:58:21,067:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:58:21,067:INFO:Checking exceptions
2024-11-26 09:58:21,067:INFO:Importing libraries
2024-11-26 09:58:21,067:INFO:Copying training dataset
2024-11-26 09:58:21,209:INFO:Defining folds
2024-11-26 09:58:21,209:INFO:Declaring metric variables
2024-11-26 09:58:21,209:INFO:Importing untrained model
2024-11-26 09:58:21,209:INFO:Declaring custom model
2024-11-26 09:58:21,209:INFO:Extra Trees Classifier Imported successfully
2024-11-26 09:58:21,209:INFO:Cross validation set to False
2024-11-26 09:58:21,209:INFO:Fitting Model
2024-11-26 09:58:29,248:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False)
2024-11-26 09:58:29,252:INFO:create_model() successfully completed......................................
2024-11-26 09:58:29,910:INFO:_master_model_container: 14
2024-11-26 09:58:29,910:INFO:_display_container: 2
2024-11-26 09:58:29,910:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False)
2024-11-26 09:58:29,910:INFO:compare_models() successfully completed......................................
2024-11-26 09:58:29,910:INFO:Initializing automl()
2024-11-26 09:58:29,910:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 09:58:29,910:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 09:58:29,910:INFO:Checking model 0
2024-11-26 09:58:29,910:INFO:Checking model 1
2024-11-26 09:58:29,910:INFO:Checking model 2
2024-11-26 09:58:29,910:INFO:Checking model 3
2024-11-26 09:58:29,910:INFO:Checking model 4
2024-11-26 09:58:29,910:INFO:Checking model 5
2024-11-26 09:58:29,910:INFO:Checking model 6
2024-11-26 09:58:29,910:INFO:Checking model 7
2024-11-26 09:58:29,910:INFO:Checking model 8
2024-11-26 09:58:29,910:INFO:Checking model 9
2024-11-26 09:58:29,910:INFO:Checking model 10
2024-11-26 09:58:29,910:INFO:Checking model 11
2024-11-26 09:58:29,910:INFO:Checking model 12
2024-11-26 09:58:29,910:INFO:Checking model 13
2024-11-26 09:58:29,910:INFO:Initializing create_model()
2024-11-26 09:58:29,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:58:29,910:INFO:Checking exceptions
2024-11-26 09:58:29,910:INFO:Importing libraries
2024-11-26 09:58:29,910:INFO:Copying training dataset
2024-11-26 09:58:30,018:INFO:Defining folds
2024-11-26 09:58:30,018:INFO:Declaring metric variables
2024-11-26 09:58:30,018:INFO:Importing untrained model
2024-11-26 09:58:30,018:INFO:Declaring custom model
2024-11-26 09:58:30,033:INFO:Extra Trees Classifier Imported successfully
2024-11-26 09:58:30,033:INFO:Cross validation set to False
2024-11-26 09:58:30,033:INFO:Fitting Model
2024-11-26 09:58:36,848:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False)
2024-11-26 09:58:36,848:INFO:create_model() successfully completed......................................
2024-11-26 09:58:37,285:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False)
2024-11-26 09:58:37,285:INFO:automl() successfully completed......................................
2024-11-26 09:58:37,505:INFO:Initializing predict_model()
2024-11-26 09:58:37,506:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA65ADC50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33F740>)
2024-11-26 09:58:37,506:INFO:Checking exceptions
2024-11-26 09:58:37,506:INFO:Preloading libraries
2024-11-26 09:58:37,510:INFO:Set up data.
2024-11-26 09:58:37,525:INFO:Set up index.
2024-11-26 09:59:33,398:INFO:PyCaret ClassificationExperiment
2024-11-26 09:59:33,398:INFO:Logging name: clf-default-name
2024-11-26 09:59:33,398:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 09:59:33,398:INFO:version 3.3.2
2024-11-26 09:59:33,399:INFO:Initializing setup()
2024-11-26 09:59:33,399:INFO:self.USI: 599d
2024-11-26 09:59:33,399:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 09:59:33,399:INFO:Checking environment
2024-11-26 09:59:33,399:INFO:python_version: 3.11.9
2024-11-26 09:59:33,399:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 09:59:33,399:INFO:machine: AMD64
2024-11-26 09:59:33,399:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 09:59:33,402:INFO:Memory: svmem(total=4293971968, available=534065152, percent=87.6, used=3759906816, free=534065152)
2024-11-26 09:59:33,402:INFO:Physical Core: 2
2024-11-26 09:59:33,402:INFO:Logical Core: 2
2024-11-26 09:59:33,402:INFO:Checking libraries
2024-11-26 09:59:33,402:INFO:System:
2024-11-26 09:59:33,402:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 09:59:33,402:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 09:59:33,402:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 09:59:33,402:INFO:PyCaret required dependencies:
2024-11-26 09:59:33,402:INFO:                 pip: 24.3.1
2024-11-26 09:59:33,402:INFO:          setuptools: 65.5.0
2024-11-26 09:59:33,402:INFO:             pycaret: 3.3.2
2024-11-26 09:59:33,402:INFO:             IPython: 8.26.0
2024-11-26 09:59:33,402:INFO:          ipywidgets: 8.1.5
2024-11-26 09:59:33,402:INFO:                tqdm: 4.66.5
2024-11-26 09:59:33,402:INFO:               numpy: 1.26.4
2024-11-26 09:59:33,402:INFO:              pandas: 2.1.4
2024-11-26 09:59:33,402:INFO:              jinja2: 3.1.4
2024-11-26 09:59:33,402:INFO:               scipy: 1.11.4
2024-11-26 09:59:33,402:INFO:              joblib: 1.3.2
2024-11-26 09:59:33,402:INFO:             sklearn: 1.4.2
2024-11-26 09:59:33,402:INFO:                pyod: 2.0.2
2024-11-26 09:59:33,402:INFO:            imblearn: 0.12.4
2024-11-26 09:59:33,402:INFO:   category_encoders: 2.6.4
2024-11-26 09:59:33,402:INFO:            lightgbm: 4.5.0
2024-11-26 09:59:33,402:INFO:               numba: 0.60.0
2024-11-26 09:59:33,402:INFO:            requests: 2.32.3
2024-11-26 09:59:33,402:INFO:          matplotlib: 3.7.5
2024-11-26 09:59:33,402:INFO:          scikitplot: 0.3.7
2024-11-26 09:59:33,402:INFO:         yellowbrick: 1.5
2024-11-26 09:59:33,402:INFO:              plotly: 5.24.1
2024-11-26 09:59:33,402:INFO:    plotly-resampler: Not installed
2024-11-26 09:59:33,402:INFO:             kaleido: 0.2.1
2024-11-26 09:59:33,402:INFO:           schemdraw: 0.15
2024-11-26 09:59:33,402:INFO:         statsmodels: 0.14.3
2024-11-26 09:59:33,402:INFO:              sktime: 0.26.0
2024-11-26 09:59:33,402:INFO:               tbats: 1.1.3
2024-11-26 09:59:33,402:INFO:            pmdarima: 2.0.4
2024-11-26 09:59:33,402:INFO:              psutil: 6.0.0
2024-11-26 09:59:33,402:INFO:          markupsafe: 3.0.2
2024-11-26 09:59:33,402:INFO:             pickle5: Not installed
2024-11-26 09:59:33,407:INFO:         cloudpickle: 3.0.0
2024-11-26 09:59:33,407:INFO:         deprecation: 2.1.0
2024-11-26 09:59:33,407:INFO:              xxhash: 3.5.0
2024-11-26 09:59:33,407:INFO:           wurlitzer: Not installed
2024-11-26 09:59:33,407:INFO:PyCaret optional dependencies:
2024-11-26 09:59:33,407:INFO:                shap: 0.46.0
2024-11-26 09:59:33,407:INFO:           interpret: Not installed
2024-11-26 09:59:33,407:INFO:                umap: Not installed
2024-11-26 09:59:33,407:INFO:     ydata_profiling: Not installed
2024-11-26 09:59:33,407:INFO:  explainerdashboard: Not installed
2024-11-26 09:59:33,407:INFO:             autoviz: Not installed
2024-11-26 09:59:33,407:INFO:           fairlearn: Not installed
2024-11-26 09:59:33,407:INFO:          deepchecks: Not installed
2024-11-26 09:59:33,407:INFO:             xgboost: Not installed
2024-11-26 09:59:33,407:INFO:            catboost: Not installed
2024-11-26 09:59:33,407:INFO:              kmodes: Not installed
2024-11-26 09:59:33,407:INFO:             mlxtend: Not installed
2024-11-26 09:59:33,407:INFO:       statsforecast: Not installed
2024-11-26 09:59:33,407:INFO:        tune_sklearn: Not installed
2024-11-26 09:59:33,407:INFO:                 ray: Not installed
2024-11-26 09:59:33,407:INFO:            hyperopt: Not installed
2024-11-26 09:59:33,407:INFO:              optuna: 4.1.0
2024-11-26 09:59:33,407:INFO:               skopt: Not installed
2024-11-26 09:59:33,407:INFO:              mlflow: Not installed
2024-11-26 09:59:33,407:INFO:              gradio: Not installed
2024-11-26 09:59:33,407:INFO:             fastapi: Not installed
2024-11-26 09:59:33,407:INFO:             uvicorn: Not installed
2024-11-26 09:59:33,407:INFO:              m2cgen: Not installed
2024-11-26 09:59:33,416:INFO:           evidently: Not installed
2024-11-26 09:59:33,424:INFO:               fugue: Not installed
2024-11-26 09:59:33,433:INFO:           streamlit: Not installed
2024-11-26 09:59:33,433:INFO:             prophet: Not installed
2024-11-26 09:59:33,434:INFO:None
2024-11-26 09:59:33,434:INFO:Set up data.
2024-11-26 09:59:33,652:INFO:Set up folding strategy.
2024-11-26 09:59:33,652:INFO:Set up train/test split.
2024-11-26 09:59:33,814:INFO:Set up index.
2024-11-26 09:59:33,814:INFO:Assigning column types.
2024-11-26 09:59:33,968:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 09:59:34,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 09:59:34,049:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 09:59:34,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:34,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:34,298:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 09:59:34,298:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 09:59:34,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:34,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:34,345:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 09:59:35,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 09:59:35,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:35,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:35,612:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 09:59:35,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:35,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:35,767:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 09:59:36,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:36,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:37,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:37,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:37,173:INFO:Preparing preprocessing pipeline...
2024-11-26 09:59:37,173:INFO:Set up label encoding.
2024-11-26 09:59:37,173:INFO:Set up simple imputation.
2024-11-26 09:59:37,455:INFO:Finished creating preprocessing pipeline.
2024-11-26 09:59:37,471:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 09:59:37,471:INFO:Creating final display dataframe.
2024-11-26 09:59:38,065:INFO:Setup _display_container:                     Description             Value
0                    Session id              2907
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              599d
2024-11-26 09:59:38,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:38,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:38,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:38,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 09:59:38,549:INFO:setup() successfully completed in 5.17s...............
2024-11-26 09:59:38,549:INFO:Initializing compare_models()
2024-11-26 09:59:38,549:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 09:59:38,549:INFO:Checking exceptions
2024-11-26 09:59:38,565:INFO:Preparing display monitor
2024-11-26 09:59:38,783:INFO:Initializing Logistic Regression
2024-11-26 09:59:38,786:INFO:Total runtime is 5.835692087809245e-05 minutes
2024-11-26 09:59:38,892:INFO:SubProcess create_model() called ==================================
2024-11-26 09:59:38,908:INFO:Initializing create_model()
2024-11-26 09:59:38,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:59:38,908:INFO:Checking exceptions
2024-11-26 09:59:38,908:INFO:Importing libraries
2024-11-26 09:59:38,908:INFO:Copying training dataset
2024-11-26 09:59:39,130:INFO:Defining folds
2024-11-26 09:59:39,130:INFO:Declaring metric variables
2024-11-26 09:59:39,143:INFO:Importing untrained model
2024-11-26 09:59:39,143:INFO:Logistic Regression Imported successfully
2024-11-26 09:59:39,195:INFO:Starting cross validation
2024-11-26 09:59:39,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:59:40,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:40,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:41,000:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:41,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:41,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:41,181:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:43,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:43,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:43,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:43,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:43,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:43,359:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:44,465:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:44,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:44,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:44,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:44,670:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:44,705:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:45,416:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:45,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:45,477:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:45,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:45,803:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:45,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:46,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:46,324:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:46,359:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:46,535:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:46,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:46,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:46,673:INFO:Calculating mean and std
2024-11-26 09:59:46,673:INFO:Creating metrics dataframe
2024-11-26 09:59:46,673:INFO:Uploading results into container
2024-11-26 09:59:46,690:INFO:Uploading model into container now
2024-11-26 09:59:46,690:INFO:_master_model_container: 1
2024-11-26 09:59:46,690:INFO:_display_container: 2
2024-11-26 09:59:46,690:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 09:59:46,690:INFO:create_model() successfully completed......................................
2024-11-26 09:59:47,033:INFO:SubProcess create_model() end ==================================
2024-11-26 09:59:47,033:INFO:Creating metrics dataframe
2024-11-26 09:59:47,068:INFO:Initializing K Neighbors Classifier
2024-11-26 09:59:47,068:INFO:Total runtime is 0.13807783126831055 minutes
2024-11-26 09:59:47,068:INFO:SubProcess create_model() called ==================================
2024-11-26 09:59:47,068:INFO:Initializing create_model()
2024-11-26 09:59:47,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 09:59:47,068:INFO:Checking exceptions
2024-11-26 09:59:47,068:INFO:Importing libraries
2024-11-26 09:59:47,068:INFO:Copying training dataset
2024-11-26 09:59:47,303:INFO:Defining folds
2024-11-26 09:59:47,304:INFO:Declaring metric variables
2024-11-26 09:59:47,304:INFO:Importing untrained model
2024-11-26 09:59:47,328:INFO:K Neighbors Classifier Imported successfully
2024-11-26 09:59:47,358:INFO:Starting cross validation
2024-11-26 09:59:47,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 09:59:51,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:51,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:51,375:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:51,375:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:51,413:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:51,492:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:53,569:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:53,580:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:53,596:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:53,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:53,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:53,658:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:55,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:55,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:55,560:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:55,560:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:55,589:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:55,607:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:57,852:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:57,858:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:57,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:57,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:57,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 09:59:57,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:00,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:00,469:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:00,469:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:00,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:00,515:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:00,555:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:00,602:INFO:Calculating mean and std
2024-11-26 10:00:00,602:INFO:Creating metrics dataframe
2024-11-26 10:00:00,602:INFO:Uploading results into container
2024-11-26 10:00:00,602:INFO:Uploading model into container now
2024-11-26 10:00:00,602:INFO:_master_model_container: 2
2024-11-26 10:00:00,602:INFO:_display_container: 2
2024-11-26 10:00:00,602:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 10:00:00,602:INFO:create_model() successfully completed......................................
2024-11-26 10:00:01,084:INFO:SubProcess create_model() end ==================================
2024-11-26 10:00:01,084:INFO:Creating metrics dataframe
2024-11-26 10:00:01,084:INFO:Initializing Naive Bayes
2024-11-26 10:00:01,100:INFO:Total runtime is 0.37194746335347495 minutes
2024-11-26 10:00:01,100:INFO:SubProcess create_model() called ==================================
2024-11-26 10:00:01,100:INFO:Initializing create_model()
2024-11-26 10:00:01,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:00:01,100:INFO:Checking exceptions
2024-11-26 10:00:01,100:INFO:Importing libraries
2024-11-26 10:00:01,100:INFO:Copying training dataset
2024-11-26 10:00:01,289:INFO:Defining folds
2024-11-26 10:00:01,289:INFO:Declaring metric variables
2024-11-26 10:00:01,320:INFO:Importing untrained model
2024-11-26 10:00:01,337:INFO:Naive Bayes Imported successfully
2024-11-26 10:00:01,370:INFO:Starting cross validation
2024-11-26 10:00:01,374:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:00:01,851:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:01,851:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:01,867:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:01,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:01,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:01,914:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:02,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:02,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:02,273:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:02,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:02,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:02,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:03,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:03,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:03,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:03,939:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:04,008:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:04,099:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,241:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,363:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,410:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,429:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,851:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,878:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,896:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:05,943:INFO:Calculating mean and std
2024-11-26 10:00:05,943:INFO:Creating metrics dataframe
2024-11-26 10:00:05,969:INFO:Uploading results into container
2024-11-26 10:00:05,977:INFO:Uploading model into container now
2024-11-26 10:00:05,980:INFO:_master_model_container: 3
2024-11-26 10:00:05,982:INFO:_display_container: 2
2024-11-26 10:00:05,982:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 10:00:05,982:INFO:create_model() successfully completed......................................
2024-11-26 10:00:06,412:INFO:SubProcess create_model() end ==================================
2024-11-26 10:00:06,412:INFO:Creating metrics dataframe
2024-11-26 10:00:06,433:INFO:Initializing Decision Tree Classifier
2024-11-26 10:00:06,433:INFO:Total runtime is 0.4608371655146281 minutes
2024-11-26 10:00:06,443:INFO:SubProcess create_model() called ==================================
2024-11-26 10:00:06,443:INFO:Initializing create_model()
2024-11-26 10:00:06,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:00:06,443:INFO:Checking exceptions
2024-11-26 10:00:06,443:INFO:Importing libraries
2024-11-26 10:00:06,443:INFO:Copying training dataset
2024-11-26 10:00:06,646:INFO:Defining folds
2024-11-26 10:00:06,646:INFO:Declaring metric variables
2024-11-26 10:00:06,678:INFO:Importing untrained model
2024-11-26 10:00:06,740:INFO:Decision Tree Classifier Imported successfully
2024-11-26 10:00:06,775:INFO:Starting cross validation
2024-11-26 10:00:06,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:00:10,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:10,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:10,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:10,403:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:10,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:10,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:12,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:12,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:12,855:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:12,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:12,944:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:13,018:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:15,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:15,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:15,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:15,836:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:15,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:15,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:17,454:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:17,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:17,575:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:18,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:18,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:18,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:20,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:20,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:20,160:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:20,508:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:20,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:20,621:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:20,687:INFO:Calculating mean and std
2024-11-26 10:00:20,687:INFO:Creating metrics dataframe
2024-11-26 10:00:20,701:INFO:Uploading results into container
2024-11-26 10:00:20,702:INFO:Uploading model into container now
2024-11-26 10:00:20,711:INFO:_master_model_container: 4
2024-11-26 10:00:20,711:INFO:_display_container: 2
2024-11-26 10:00:20,723:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2907, splitter='best')
2024-11-26 10:00:20,723:INFO:create_model() successfully completed......................................
2024-11-26 10:00:21,148:INFO:SubProcess create_model() end ==================================
2024-11-26 10:00:21,148:INFO:Creating metrics dataframe
2024-11-26 10:00:21,184:INFO:Initializing SVM - Linear Kernel
2024-11-26 10:00:21,184:INFO:Total runtime is 0.7066794236501058 minutes
2024-11-26 10:00:21,200:INFO:SubProcess create_model() called ==================================
2024-11-26 10:00:21,200:INFO:Initializing create_model()
2024-11-26 10:00:21,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:00:21,200:INFO:Checking exceptions
2024-11-26 10:00:21,200:INFO:Importing libraries
2024-11-26 10:00:21,200:INFO:Copying training dataset
2024-11-26 10:00:21,440:INFO:Defining folds
2024-11-26 10:00:21,442:INFO:Declaring metric variables
2024-11-26 10:00:21,477:INFO:Importing untrained model
2024-11-26 10:00:21,477:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 10:00:21,540:INFO:Starting cross validation
2024-11-26 10:00:21,541:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:00:23,324:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:23,385:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:23,451:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:23,462:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:23,535:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:23,541:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:25,513:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:25,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:25,659:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:26,024:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:26,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:26,111:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:26,260:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:26,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:26,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:26,989:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:27,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:27,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:27,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:27,254:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:27,265:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:27,763:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:27,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:27,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:28,198:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:28,220:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:28,247:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:28,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:28,557:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:28,625:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:28,721:INFO:Calculating mean and std
2024-11-26 10:00:28,721:INFO:Creating metrics dataframe
2024-11-26 10:00:28,740:INFO:Uploading results into container
2024-11-26 10:00:28,740:INFO:Uploading model into container now
2024-11-26 10:00:28,740:INFO:_master_model_container: 5
2024-11-26 10:00:28,740:INFO:_display_container: 2
2024-11-26 10:00:28,757:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2907, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 10:00:28,758:INFO:create_model() successfully completed......................................
2024-11-26 10:00:29,221:INFO:SubProcess create_model() end ==================================
2024-11-26 10:00:29,221:INFO:Creating metrics dataframe
2024-11-26 10:00:29,252:INFO:Initializing Ridge Classifier
2024-11-26 10:00:29,252:INFO:Total runtime is 0.8411542892456055 minutes
2024-11-26 10:00:29,273:INFO:SubProcess create_model() called ==================================
2024-11-26 10:00:29,273:INFO:Initializing create_model()
2024-11-26 10:00:29,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:00:29,283:INFO:Checking exceptions
2024-11-26 10:00:29,283:INFO:Importing libraries
2024-11-26 10:00:29,283:INFO:Copying training dataset
2024-11-26 10:00:29,518:INFO:Defining folds
2024-11-26 10:00:29,518:INFO:Declaring metric variables
2024-11-26 10:00:29,549:INFO:Importing untrained model
2024-11-26 10:00:29,582:INFO:Ridge Classifier Imported successfully
2024-11-26 10:00:29,658:INFO:Starting cross validation
2024-11-26 10:00:29,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:00:30,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,213:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,297:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,770:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,770:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:30,878:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:31,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:31,906:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:32,006:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:32,234:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:32,472:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:32,595:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:32,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:33,653:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:33,766:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:33,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:33,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:33,883:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:33,907:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:34,240:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:34,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:34,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:34,359:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:34,452:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:34,485:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:00:34,580:INFO:Calculating mean and std
2024-11-26 10:00:34,620:INFO:Creating metrics dataframe
2024-11-26 10:00:34,651:INFO:Uploading results into container
2024-11-26 10:00:34,651:INFO:Uploading model into container now
2024-11-26 10:00:34,651:INFO:_master_model_container: 6
2024-11-26 10:00:34,651:INFO:_display_container: 2
2024-11-26 10:00:34,651:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2907, solver='auto',
                tol=0.0001)
2024-11-26 10:00:34,651:INFO:create_model() successfully completed......................................
2024-11-26 10:00:35,136:INFO:SubProcess create_model() end ==================================
2024-11-26 10:00:35,136:INFO:Creating metrics dataframe
2024-11-26 10:00:35,198:INFO:Initializing Random Forest Classifier
2024-11-26 10:00:35,198:INFO:Total runtime is 0.9402543624242148 minutes
2024-11-26 10:00:35,224:INFO:SubProcess create_model() called ==================================
2024-11-26 10:00:35,227:INFO:Initializing create_model()
2024-11-26 10:00:35,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:00:35,230:INFO:Checking exceptions
2024-11-26 10:00:35,230:INFO:Importing libraries
2024-11-26 10:00:35,230:INFO:Copying training dataset
2024-11-26 10:00:35,433:INFO:Defining folds
2024-11-26 10:00:35,433:INFO:Declaring metric variables
2024-11-26 10:00:35,464:INFO:Importing untrained model
2024-11-26 10:00:35,464:INFO:Random Forest Classifier Imported successfully
2024-11-26 10:00:35,526:INFO:Starting cross validation
2024-11-26 10:00:35,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:01:05,085:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:05,216:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:05,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:05,403:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:05,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:05,609:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:31,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:31,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:31,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:32,089:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:32,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:01:32,157:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:00,312:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:00,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:00,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:00,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:00,769:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:00,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:27,742:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:27,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:27,944:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:27,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:28,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:28,157:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:55,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:55,588:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:55,639:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:55,790:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:55,835:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:55,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:55,958:INFO:Calculating mean and std
2024-11-26 10:02:55,958:INFO:Creating metrics dataframe
2024-11-26 10:02:55,983:INFO:Uploading results into container
2024-11-26 10:02:55,984:INFO:Uploading model into container now
2024-11-26 10:02:55,985:INFO:_master_model_container: 7
2024-11-26 10:02:55,986:INFO:_display_container: 2
2024-11-26 10:02:55,986:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2907, verbose=0,
                       warm_start=False)
2024-11-26 10:02:55,986:INFO:create_model() successfully completed......................................
2024-11-26 10:02:56,348:INFO:SubProcess create_model() end ==================================
2024-11-26 10:02:56,348:INFO:Creating metrics dataframe
2024-11-26 10:02:56,379:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 10:02:56,379:INFO:Total runtime is 3.2932630658149717 minutes
2024-11-26 10:02:56,402:INFO:SubProcess create_model() called ==================================
2024-11-26 10:02:56,402:INFO:Initializing create_model()
2024-11-26 10:02:56,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:02:56,402:INFO:Checking exceptions
2024-11-26 10:02:56,402:INFO:Importing libraries
2024-11-26 10:02:56,402:INFO:Copying training dataset
2024-11-26 10:02:56,691:INFO:Defining folds
2024-11-26 10:02:56,712:INFO:Declaring metric variables
2024-11-26 10:02:56,724:INFO:Importing untrained model
2024-11-26 10:02:56,753:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 10:02:56,820:INFO:Starting cross validation
2024-11-26 10:02:56,825:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:02:57,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:02:57,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:02:57,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:57,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:57,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:57,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:57,368:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:57,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:57,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:02:57,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:02:57,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:58,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:58,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:58,471:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:58,478:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:58,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:58,915:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:02:58,973:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:02:59,169:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:59,216:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:59,258:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:59,258:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:59,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:02:59,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:00,338:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:03:00,474:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:03:00,489:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:00,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:00,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:00,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:00,580:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:00,622:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:00,816:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:03:00,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:03:00,936:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:00,963:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:01,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:01,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:01,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:01,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:01,209:INFO:Calculating mean and std
2024-11-26 10:03:01,209:INFO:Creating metrics dataframe
2024-11-26 10:03:01,236:INFO:Uploading results into container
2024-11-26 10:03:01,244:INFO:Uploading model into container now
2024-11-26 10:03:01,244:INFO:_master_model_container: 8
2024-11-26 10:03:01,245:INFO:_display_container: 2
2024-11-26 10:03:01,245:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 10:03:01,245:INFO:create_model() successfully completed......................................
2024-11-26 10:03:01,693:INFO:SubProcess create_model() end ==================================
2024-11-26 10:03:01,693:INFO:Creating metrics dataframe
2024-11-26 10:03:01,711:INFO:Initializing Ada Boost Classifier
2024-11-26 10:03:01,711:INFO:Total runtime is 3.3821290334065752 minutes
2024-11-26 10:03:01,731:INFO:SubProcess create_model() called ==================================
2024-11-26 10:03:01,731:INFO:Initializing create_model()
2024-11-26 10:03:01,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:03:01,731:INFO:Checking exceptions
2024-11-26 10:03:01,733:INFO:Importing libraries
2024-11-26 10:03:01,733:INFO:Copying training dataset
2024-11-26 10:03:01,912:INFO:Defining folds
2024-11-26 10:03:01,912:INFO:Declaring metric variables
2024-11-26 10:03:01,956:INFO:Importing untrained model
2024-11-26 10:03:01,966:INFO:Ada Boost Classifier Imported successfully
2024-11-26 10:03:02,015:INFO:Starting cross validation
2024-11-26 10:03:02,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:03:02,278:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:02,306:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:11,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:11,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:11,350:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:11,350:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:11,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:11,407:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:11,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:11,706:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:18,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:18,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:18,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:18,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:18,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:18,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:18,887:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:19,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:26,648:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:26,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:26,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:26,865:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:26,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:26,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:26,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:27,132:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:34,589:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:34,607:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:34,651:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:34,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:34,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:35,041:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:35,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:35,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:03:42,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:42,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:42,140:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:42,432:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:42,463:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:42,474:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:03:42,538:INFO:Calculating mean and std
2024-11-26 10:03:42,538:INFO:Creating metrics dataframe
2024-11-26 10:03:42,571:INFO:Uploading results into container
2024-11-26 10:03:42,574:INFO:Uploading model into container now
2024-11-26 10:03:42,575:INFO:_master_model_container: 9
2024-11-26 10:03:42,575:INFO:_display_container: 2
2024-11-26 10:03:42,576:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2907)
2024-11-26 10:03:42,576:INFO:create_model() successfully completed......................................
2024-11-26 10:03:42,991:INFO:SubProcess create_model() end ==================================
2024-11-26 10:03:42,991:INFO:Creating metrics dataframe
2024-11-26 10:03:43,023:INFO:Initializing Gradient Boosting Classifier
2024-11-26 10:03:43,023:INFO:Total runtime is 4.070670223236084 minutes
2024-11-26 10:03:43,040:INFO:SubProcess create_model() called ==================================
2024-11-26 10:03:43,054:INFO:Initializing create_model()
2024-11-26 10:03:43,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:03:43,054:INFO:Checking exceptions
2024-11-26 10:03:43,054:INFO:Importing libraries
2024-11-26 10:03:43,054:INFO:Copying training dataset
2024-11-26 10:03:43,413:INFO:Defining folds
2024-11-26 10:03:43,413:INFO:Declaring metric variables
2024-11-26 10:03:43,445:INFO:Importing untrained model
2024-11-26 10:03:43,445:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 10:03:43,491:INFO:Starting cross validation
2024-11-26 10:03:43,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:04:20,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:20,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:20,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:20,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:20,335:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:20,335:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:55,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:55,629:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:55,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:55,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:55,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:04:55,815:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:05:28,383:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:05:28,383:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:05:28,399:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:05:28,399:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:05:28,417:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:05:28,428:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:01,808:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:01,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:01,866:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:01,924:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:01,977:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:02,008:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:35,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:35,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:35,583:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:35,629:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:35,643:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:35,686:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:35,736:INFO:Calculating mean and std
2024-11-26 10:06:35,754:INFO:Creating metrics dataframe
2024-11-26 10:06:35,754:INFO:Uploading results into container
2024-11-26 10:06:35,754:INFO:Uploading model into container now
2024-11-26 10:06:35,754:INFO:_master_model_container: 10
2024-11-26 10:06:35,754:INFO:_display_container: 2
2024-11-26 10:06:35,754:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2907, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 10:06:35,754:INFO:create_model() successfully completed......................................
2024-11-26 10:06:36,080:INFO:SubProcess create_model() end ==================================
2024-11-26 10:06:36,080:INFO:Creating metrics dataframe
2024-11-26 10:06:36,136:INFO:Initializing Linear Discriminant Analysis
2024-11-26 10:06:36,136:INFO:Total runtime is 6.955886793136596 minutes
2024-11-26 10:06:36,153:INFO:SubProcess create_model() called ==================================
2024-11-26 10:06:36,153:INFO:Initializing create_model()
2024-11-26 10:06:36,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:06:36,156:INFO:Checking exceptions
2024-11-26 10:06:36,156:INFO:Importing libraries
2024-11-26 10:06:36,156:INFO:Copying training dataset
2024-11-26 10:06:36,314:INFO:Defining folds
2024-11-26 10:06:36,314:INFO:Declaring metric variables
2024-11-26 10:06:36,314:INFO:Importing untrained model
2024-11-26 10:06:36,336:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 10:06:36,345:INFO:Starting cross validation
2024-11-26 10:06:36,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:06:36,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:36,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:36,913:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:36,924:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:36,940:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:36,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:37,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:37,297:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:37,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:37,332:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:37,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:37,364:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:38,181:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:38,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:38,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:38,310:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:38,388:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:38,550:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,295:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,480:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,501:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,567:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,581:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,759:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,794:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,869:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,901:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:39,967:INFO:Calculating mean and std
2024-11-26 10:06:39,967:INFO:Creating metrics dataframe
2024-11-26 10:06:39,987:INFO:Uploading results into container
2024-11-26 10:06:39,987:INFO:Uploading model into container now
2024-11-26 10:06:39,987:INFO:_master_model_container: 11
2024-11-26 10:06:39,987:INFO:_display_container: 2
2024-11-26 10:06:39,987:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 10:06:39,987:INFO:create_model() successfully completed......................................
2024-11-26 10:06:40,498:INFO:SubProcess create_model() end ==================================
2024-11-26 10:06:40,498:INFO:Creating metrics dataframe
2024-11-26 10:06:40,528:INFO:Initializing Extra Trees Classifier
2024-11-26 10:06:40,528:INFO:Total runtime is 7.029081658522287 minutes
2024-11-26 10:06:40,543:INFO:SubProcess create_model() called ==================================
2024-11-26 10:06:40,543:INFO:Initializing create_model()
2024-11-26 10:06:40,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:06:40,543:INFO:Checking exceptions
2024-11-26 10:06:40,558:INFO:Importing libraries
2024-11-26 10:06:40,558:INFO:Copying training dataset
2024-11-26 10:06:40,764:INFO:Defining folds
2024-11-26 10:06:40,764:INFO:Declaring metric variables
2024-11-26 10:06:40,783:INFO:Importing untrained model
2024-11-26 10:06:40,804:INFO:Extra Trees Classifier Imported successfully
2024-11-26 10:06:40,826:INFO:Starting cross validation
2024-11-26 10:06:40,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:06:54,448:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:54,574:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:54,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:54,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:54,609:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:06:54,640:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:07,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:07,524:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:07,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:07,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:07,965:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:08,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:22,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:23,156:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:23,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:23,219:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:23,301:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:23,402:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:35,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:35,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:35,534:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:35,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:35,967:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:36,006:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:48,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:48,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:48,917:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:48,988:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:49,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:49,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:49,044:INFO:Calculating mean and std
2024-11-26 10:07:49,055:INFO:Creating metrics dataframe
2024-11-26 10:07:49,058:INFO:Uploading results into container
2024-11-26 10:07:49,058:INFO:Uploading model into container now
2024-11-26 10:07:49,058:INFO:_master_model_container: 12
2024-11-26 10:07:49,058:INFO:_display_container: 2
2024-11-26 10:07:49,058:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2907, verbose=0,
                     warm_start=False)
2024-11-26 10:07:49,058:INFO:create_model() successfully completed......................................
2024-11-26 10:07:49,308:INFO:SubProcess create_model() end ==================================
2024-11-26 10:07:49,308:INFO:Creating metrics dataframe
2024-11-26 10:07:49,325:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 10:07:49,325:INFO:Total runtime is 8.175709370772044 minutes
2024-11-26 10:07:49,344:INFO:SubProcess create_model() called ==================================
2024-11-26 10:07:49,344:INFO:Initializing create_model()
2024-11-26 10:07:49,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:07:49,360:INFO:Checking exceptions
2024-11-26 10:07:49,360:INFO:Importing libraries
2024-11-26 10:07:49,360:INFO:Copying training dataset
2024-11-26 10:07:49,656:INFO:Defining folds
2024-11-26 10:07:49,656:INFO:Declaring metric variables
2024-11-26 10:07:49,667:INFO:Importing untrained model
2024-11-26 10:07:49,688:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 10:07:49,746:INFO:Starting cross validation
2024-11-26 10:07:49,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:07:54,855:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:54,911:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:54,950:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:55,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:55,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:55,503:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:58,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:58,420:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:58,470:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:58,855:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:58,891:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:07:58,917:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:02,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:02,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:02,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:02,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:02,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:02,741:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:05,695:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:05,756:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:05,756:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:05,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:05,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:05,814:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:08,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:08,730:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:08,730:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:08,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:08,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:08,815:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:08,861:INFO:Calculating mean and std
2024-11-26 10:08:08,877:INFO:Creating metrics dataframe
2024-11-26 10:08:08,877:INFO:Uploading results into container
2024-11-26 10:08:08,877:INFO:Uploading model into container now
2024-11-26 10:08:08,877:INFO:_master_model_container: 13
2024-11-26 10:08:08,877:INFO:_display_container: 2
2024-11-26 10:08:08,877:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2907, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 10:08:08,877:INFO:create_model() successfully completed......................................
2024-11-26 10:08:09,254:INFO:SubProcess create_model() end ==================================
2024-11-26 10:08:09,256:INFO:Creating metrics dataframe
2024-11-26 10:08:09,300:INFO:Initializing Dummy Classifier
2024-11-26 10:08:09,300:INFO:Total runtime is 8.50861040353775 minutes
2024-11-26 10:08:09,300:INFO:SubProcess create_model() called ==================================
2024-11-26 10:08:09,300:INFO:Initializing create_model()
2024-11-26 10:08:09,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9FCA2810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:08:09,300:INFO:Checking exceptions
2024-11-26 10:08:09,300:INFO:Importing libraries
2024-11-26 10:08:09,317:INFO:Copying training dataset
2024-11-26 10:08:09,456:INFO:Defining folds
2024-11-26 10:08:09,456:INFO:Declaring metric variables
2024-11-26 10:08:09,486:INFO:Importing untrained model
2024-11-26 10:08:09,486:INFO:Dummy Classifier Imported successfully
2024-11-26 10:08:09,527:INFO:Starting cross validation
2024-11-26 10:08:09,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 10:08:09,897:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:09,931:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:09,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,006:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,018:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:10,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:10,077:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,413:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,459:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:10,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:10,559:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:10,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:11,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:11,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:11,676:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:11,694:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:11,742:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:11,763:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:11,847:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:11,852:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:12,544:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:12,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:12,649:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:12,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:12,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:12,991:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:13,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:13,440:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:13,763:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:13,858:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:13,890:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:13,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:13,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:13,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:13,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:08:14,000:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:08:14,084:INFO:Calculating mean and std
2024-11-26 10:08:14,084:INFO:Creating metrics dataframe
2024-11-26 10:08:14,084:INFO:Uploading results into container
2024-11-26 10:08:14,084:INFO:Uploading model into container now
2024-11-26 10:08:14,084:INFO:_master_model_container: 14
2024-11-26 10:08:14,084:INFO:_display_container: 2
2024-11-26 10:08:14,108:INFO:DummyClassifier(constant=None, random_state=2907, strategy='prior')
2024-11-26 10:08:14,108:INFO:create_model() successfully completed......................................
2024-11-26 10:08:14,459:INFO:SubProcess create_model() end ==================================
2024-11-26 10:08:14,459:INFO:Creating metrics dataframe
2024-11-26 10:08:14,776:INFO:Initializing create_model()
2024-11-26 10:08:14,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2907, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:08:14,776:INFO:Checking exceptions
2024-11-26 10:08:14,776:INFO:Importing libraries
2024-11-26 10:08:14,776:INFO:Copying training dataset
2024-11-26 10:08:15,022:INFO:Defining folds
2024-11-26 10:08:15,022:INFO:Declaring metric variables
2024-11-26 10:08:15,022:INFO:Importing untrained model
2024-11-26 10:08:15,022:INFO:Declaring custom model
2024-11-26 10:08:15,022:INFO:Extra Trees Classifier Imported successfully
2024-11-26 10:08:15,022:INFO:Cross validation set to False
2024-11-26 10:08:15,022:INFO:Fitting Model
2024-11-26 10:08:23,817:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2907, verbose=0,
                     warm_start=False)
2024-11-26 10:08:23,817:INFO:create_model() successfully completed......................................
2024-11-26 10:08:24,278:INFO:_master_model_container: 14
2024-11-26 10:08:24,278:INFO:_display_container: 2
2024-11-26 10:08:24,278:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2907, verbose=0,
                     warm_start=False)
2024-11-26 10:08:24,278:INFO:compare_models() successfully completed......................................
2024-11-26 10:08:24,580:INFO:Initializing predict_model()
2024-11-26 10:08:24,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2907, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33E200>)
2024-11-26 10:08:24,580:INFO:Checking exceptions
2024-11-26 10:08:24,580:INFO:Preloading libraries
2024-11-26 10:08:24,580:INFO:Set up data.
2024-11-26 10:08:24,603:INFO:Set up index.
2024-11-26 10:12:18,086:INFO:Initializing predict_model()
2024-11-26 10:12:18,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2907, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B3B0220>)
2024-11-26 10:12:18,087:INFO:Checking exceptions
2024-11-26 10:12:18,087:INFO:Preloading libraries
2024-11-26 10:12:18,091:INFO:Set up data.
2024-11-26 10:12:18,119:INFO:Set up index.
2024-11-26 10:14:41,827:INFO:Initializing predict_model()
2024-11-26 10:14:41,827:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9A270D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2907, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022FAB655300>)
2024-11-26 10:14:41,827:INFO:Checking exceptions
2024-11-26 10:14:41,827:INFO:Preloading libraries
2024-11-26 10:14:41,827:INFO:Set up data.
2024-11-26 10:14:41,848:INFO:Set up index.
2024-11-26 10:21:33,465:INFO:PyCaret ClassificationExperiment
2024-11-26 10:21:33,467:INFO:Logging name: clf-default-name
2024-11-26 10:21:33,467:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 10:21:33,467:INFO:version 3.3.2
2024-11-26 10:21:33,467:INFO:Initializing setup()
2024-11-26 10:21:33,467:INFO:self.USI: 2ead
2024-11-26 10:21:33,469:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 10:21:33,469:INFO:Checking environment
2024-11-26 10:21:33,469:INFO:python_version: 3.11.9
2024-11-26 10:21:33,470:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 10:21:33,472:INFO:machine: AMD64
2024-11-26 10:21:33,473:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 10:21:33,474:INFO:Memory: svmem(total=4293971968, available=1072955392, percent=75.0, used=3221016576, free=1072955392)
2024-11-26 10:21:33,474:INFO:Physical Core: 2
2024-11-26 10:21:33,474:INFO:Logical Core: 2
2024-11-26 10:21:33,474:INFO:Checking libraries
2024-11-26 10:21:33,474:INFO:System:
2024-11-26 10:21:33,474:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 10:21:33,474:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 10:21:33,474:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 10:21:33,474:INFO:PyCaret required dependencies:
2024-11-26 10:21:33,474:INFO:                 pip: 24.3.1
2024-11-26 10:21:33,474:INFO:          setuptools: 65.5.0
2024-11-26 10:21:33,474:INFO:             pycaret: 3.3.2
2024-11-26 10:21:33,474:INFO:             IPython: 8.26.0
2024-11-26 10:21:33,474:INFO:          ipywidgets: 8.1.5
2024-11-26 10:21:33,474:INFO:                tqdm: 4.66.5
2024-11-26 10:21:33,474:INFO:               numpy: 1.26.4
2024-11-26 10:21:33,474:INFO:              pandas: 2.1.4
2024-11-26 10:21:33,474:INFO:              jinja2: 3.1.4
2024-11-26 10:21:33,474:INFO:               scipy: 1.11.4
2024-11-26 10:21:33,474:INFO:              joblib: 1.3.2
2024-11-26 10:21:33,474:INFO:             sklearn: 1.4.2
2024-11-26 10:21:33,474:INFO:                pyod: 2.0.2
2024-11-26 10:21:33,474:INFO:            imblearn: 0.12.4
2024-11-26 10:21:33,474:INFO:   category_encoders: 2.6.4
2024-11-26 10:21:33,474:INFO:            lightgbm: 4.5.0
2024-11-26 10:21:33,474:INFO:               numba: 0.60.0
2024-11-26 10:21:33,474:INFO:            requests: 2.32.3
2024-11-26 10:21:33,474:INFO:          matplotlib: 3.7.5
2024-11-26 10:21:33,474:INFO:          scikitplot: 0.3.7
2024-11-26 10:21:33,474:INFO:         yellowbrick: 1.5
2024-11-26 10:21:33,474:INFO:              plotly: 5.24.1
2024-11-26 10:21:33,474:INFO:    plotly-resampler: Not installed
2024-11-26 10:21:33,474:INFO:             kaleido: 0.2.1
2024-11-26 10:21:33,474:INFO:           schemdraw: 0.15
2024-11-26 10:21:33,474:INFO:         statsmodels: 0.14.3
2024-11-26 10:21:33,474:INFO:              sktime: 0.26.0
2024-11-26 10:21:33,474:INFO:               tbats: 1.1.3
2024-11-26 10:21:33,474:INFO:            pmdarima: 2.0.4
2024-11-26 10:21:33,474:INFO:              psutil: 6.0.0
2024-11-26 10:21:33,474:INFO:          markupsafe: 3.0.2
2024-11-26 10:21:33,474:INFO:             pickle5: Not installed
2024-11-26 10:21:33,474:INFO:         cloudpickle: 3.0.0
2024-11-26 10:21:33,474:INFO:         deprecation: 2.1.0
2024-11-26 10:21:33,474:INFO:              xxhash: 3.5.0
2024-11-26 10:21:33,474:INFO:           wurlitzer: Not installed
2024-11-26 10:21:33,474:INFO:PyCaret optional dependencies:
2024-11-26 10:21:33,474:INFO:                shap: 0.46.0
2024-11-26 10:21:33,474:INFO:           interpret: Not installed
2024-11-26 10:21:33,474:INFO:                umap: Not installed
2024-11-26 10:21:33,474:INFO:     ydata_profiling: Not installed
2024-11-26 10:21:33,474:INFO:  explainerdashboard: Not installed
2024-11-26 10:21:33,474:INFO:             autoviz: Not installed
2024-11-26 10:21:33,474:INFO:           fairlearn: Not installed
2024-11-26 10:21:33,474:INFO:          deepchecks: Not installed
2024-11-26 10:21:33,474:INFO:             xgboost: Not installed
2024-11-26 10:21:33,474:INFO:            catboost: Not installed
2024-11-26 10:21:33,474:INFO:              kmodes: Not installed
2024-11-26 10:21:33,474:INFO:             mlxtend: Not installed
2024-11-26 10:21:33,474:INFO:       statsforecast: Not installed
2024-11-26 10:21:33,474:INFO:        tune_sklearn: Not installed
2024-11-26 10:21:33,474:INFO:                 ray: Not installed
2024-11-26 10:21:33,474:INFO:            hyperopt: Not installed
2024-11-26 10:21:33,474:INFO:              optuna: 4.1.0
2024-11-26 10:21:33,474:INFO:               skopt: Not installed
2024-11-26 10:21:33,474:INFO:              mlflow: Not installed
2024-11-26 10:21:33,474:INFO:              gradio: Not installed
2024-11-26 10:21:33,474:INFO:             fastapi: Not installed
2024-11-26 10:21:33,474:INFO:             uvicorn: Not installed
2024-11-26 10:21:33,474:INFO:              m2cgen: Not installed
2024-11-26 10:21:33,474:INFO:           evidently: Not installed
2024-11-26 10:21:33,474:INFO:               fugue: Not installed
2024-11-26 10:21:33,474:INFO:           streamlit: Not installed
2024-11-26 10:21:33,474:INFO:             prophet: Not installed
2024-11-26 10:21:33,474:INFO:None
2024-11-26 10:21:33,474:INFO:Set up data.
2024-11-26 10:21:33,629:INFO:Set up folding strategy.
2024-11-26 10:21:33,629:INFO:Set up train/test split.
2024-11-26 10:21:33,723:INFO:Set up index.
2024-11-26 10:21:33,723:INFO:Assigning column types.
2024-11-26 10:21:33,809:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 10:21:34,117:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 10:21:34,137:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 10:21:34,254:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:34,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:34,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 10:21:34,400:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 10:21:34,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:34,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:34,504:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 10:21:34,738:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 10:21:34,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:34,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:35,004:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 10:21:35,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:35,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:35,481:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 10:21:36,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:36,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:37,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:37,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:37,022:INFO:Preparing preprocessing pipeline...
2024-11-26 10:21:37,035:INFO:Set up label encoding.
2024-11-26 10:21:37,035:INFO:Set up date feature engineering.
2024-11-26 10:21:37,035:INFO:Set up simple imputation.
2024-11-26 10:21:37,035:INFO:Set up encoding of ordinal features.
2024-11-26 10:21:37,066:INFO:Set up encoding of categorical features.
2024-11-26 10:21:37,895:INFO:Finished creating preprocessing pipeline.
2024-11-26 10:21:37,973:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-26 10:21:37,973:INFO:Creating final display dataframe.
2024-11-26 10:21:40,176:INFO:Setup _display_container:                     Description             Value
0                    Session id              5126
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              2ead
2024-11-26 10:21:40,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:40,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:40,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:40,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:21:40,817:INFO:setup() successfully completed in 7.42s...............
2024-11-26 10:21:40,817:INFO:Initializing compare_models()
2024-11-26 10:21:40,817:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 10:21:40,817:INFO:Checking exceptions
2024-11-26 10:21:40,849:INFO:Preparing display monitor
2024-11-26 10:21:41,043:INFO:Initializing Logistic Regression
2024-11-26 10:21:41,046:INFO:Total runtime is 0.0012138247489929198 minutes
2024-11-26 10:21:41,075:INFO:SubProcess create_model() called ==================================
2024-11-26 10:21:41,076:INFO:Initializing create_model()
2024-11-26 10:21:41,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:21:41,077:INFO:Checking exceptions
2024-11-26 10:21:41,077:INFO:Importing libraries
2024-11-26 10:21:41,077:INFO:Copying training dataset
2024-11-26 10:21:41,249:INFO:Defining folds
2024-11-26 10:21:41,249:INFO:Declaring metric variables
2024-11-26 10:21:41,342:INFO:Importing untrained model
2024-11-26 10:21:41,391:INFO:Logistic Regression Imported successfully
2024-11-26 10:21:41,420:INFO:Starting cross validation
2024-11-26 10:21:41,455:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:22:00,566:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:22:00,702:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:00,720:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:22:00,720:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:00,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:00,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:00,948:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:01,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:06,429:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:22:06,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:06,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:06,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:06,911:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:22:07,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:07,137:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:07,160:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:11,730:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:22:11,895:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:11,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:12,006:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:12,057:INFO:Calculating mean and std
2024-11-26 10:22:12,057:INFO:Creating metrics dataframe
2024-11-26 10:22:12,070:INFO:Uploading results into container
2024-11-26 10:22:12,070:INFO:Uploading model into container now
2024-11-26 10:22:12,071:INFO:_master_model_container: 1
2024-11-26 10:22:12,071:INFO:_display_container: 2
2024-11-26 10:22:12,071:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5126, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 10:22:12,071:INFO:create_model() successfully completed......................................
2024-11-26 10:22:12,477:INFO:SubProcess create_model() end ==================================
2024-11-26 10:22:12,477:INFO:Creating metrics dataframe
2024-11-26 10:22:12,493:INFO:Initializing K Neighbors Classifier
2024-11-26 10:22:12,493:INFO:Total runtime is 0.5253347754478455 minutes
2024-11-26 10:22:12,523:INFO:SubProcess create_model() called ==================================
2024-11-26 10:22:12,523:INFO:Initializing create_model()
2024-11-26 10:22:12,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:22:12,523:INFO:Checking exceptions
2024-11-26 10:22:12,523:INFO:Importing libraries
2024-11-26 10:22:12,523:INFO:Copying training dataset
2024-11-26 10:22:12,664:INFO:Defining folds
2024-11-26 10:22:12,664:INFO:Declaring metric variables
2024-11-26 10:22:12,685:INFO:Importing untrained model
2024-11-26 10:22:12,764:INFO:K Neighbors Classifier Imported successfully
2024-11-26 10:22:12,773:INFO:Starting cross validation
2024-11-26 10:22:12,773:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:22:17,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:17,289:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:17,315:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:17,350:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:17,442:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:17,512:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:20,400:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:20,462:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:20,478:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:20,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:20,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:20,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:23,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:23,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:23,455:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:23,544:INFO:Calculating mean and std
2024-11-26 10:22:23,553:INFO:Creating metrics dataframe
2024-11-26 10:22:23,570:INFO:Uploading results into container
2024-11-26 10:22:23,572:INFO:Uploading model into container now
2024-11-26 10:22:23,575:INFO:_master_model_container: 2
2024-11-26 10:22:23,575:INFO:_display_container: 2
2024-11-26 10:22:23,578:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 10:22:23,578:INFO:create_model() successfully completed......................................
2024-11-26 10:22:23,960:INFO:SubProcess create_model() end ==================================
2024-11-26 10:22:23,960:INFO:Creating metrics dataframe
2024-11-26 10:22:23,980:INFO:Initializing Naive Bayes
2024-11-26 10:22:23,980:INFO:Total runtime is 0.716778822739919 minutes
2024-11-26 10:22:24,002:INFO:SubProcess create_model() called ==================================
2024-11-26 10:22:24,003:INFO:Initializing create_model()
2024-11-26 10:22:24,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:22:24,004:INFO:Checking exceptions
2024-11-26 10:22:24,004:INFO:Importing libraries
2024-11-26 10:22:24,004:INFO:Copying training dataset
2024-11-26 10:22:24,229:INFO:Defining folds
2024-11-26 10:22:24,229:INFO:Declaring metric variables
2024-11-26 10:22:24,272:INFO:Importing untrained model
2024-11-26 10:22:24,272:INFO:Naive Bayes Imported successfully
2024-11-26 10:22:24,364:INFO:Starting cross validation
2024-11-26 10:22:24,382:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:22:26,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:26,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:26,463:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:26,486:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:26,598:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:26,634:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:28,719:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:28,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:28,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:28,847:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:28,887:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:28,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:29,744:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:29,799:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:29,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:29,881:INFO:Calculating mean and std
2024-11-26 10:22:29,881:INFO:Creating metrics dataframe
2024-11-26 10:22:29,881:INFO:Uploading results into container
2024-11-26 10:22:29,893:INFO:Uploading model into container now
2024-11-26 10:22:29,893:INFO:_master_model_container: 3
2024-11-26 10:22:29,893:INFO:_display_container: 2
2024-11-26 10:22:29,912:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 10:22:29,914:INFO:create_model() successfully completed......................................
2024-11-26 10:22:30,274:INFO:SubProcess create_model() end ==================================
2024-11-26 10:22:30,274:INFO:Creating metrics dataframe
2024-11-26 10:22:30,301:INFO:Initializing Decision Tree Classifier
2024-11-26 10:22:30,301:INFO:Total runtime is 0.8221439599990844 minutes
2024-11-26 10:22:30,311:INFO:SubProcess create_model() called ==================================
2024-11-26 10:22:30,312:INFO:Initializing create_model()
2024-11-26 10:22:30,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:22:30,312:INFO:Checking exceptions
2024-11-26 10:22:30,314:INFO:Importing libraries
2024-11-26 10:22:30,314:INFO:Copying training dataset
2024-11-26 10:22:30,439:INFO:Defining folds
2024-11-26 10:22:30,453:INFO:Declaring metric variables
2024-11-26 10:22:30,475:INFO:Importing untrained model
2024-11-26 10:22:30,487:INFO:Decision Tree Classifier Imported successfully
2024-11-26 10:22:30,512:INFO:Starting cross validation
2024-11-26 10:22:30,519:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:22:35,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:35,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:35,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:35,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:35,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:35,842:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:37,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:37,924:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:37,967:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:38,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:38,141:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:38,205:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:39,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:39,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:39,596:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:39,662:INFO:Calculating mean and std
2024-11-26 10:22:39,662:INFO:Creating metrics dataframe
2024-11-26 10:22:39,662:INFO:Uploading results into container
2024-11-26 10:22:39,662:INFO:Uploading model into container now
2024-11-26 10:22:39,662:INFO:_master_model_container: 4
2024-11-26 10:22:39,662:INFO:_display_container: 2
2024-11-26 10:22:39,662:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5126, splitter='best')
2024-11-26 10:22:39,662:INFO:create_model() successfully completed......................................
2024-11-26 10:22:40,006:INFO:SubProcess create_model() end ==================================
2024-11-26 10:22:40,006:INFO:Creating metrics dataframe
2024-11-26 10:22:40,038:INFO:Initializing SVM - Linear Kernel
2024-11-26 10:22:40,038:INFO:Total runtime is 0.9844180305798848 minutes
2024-11-26 10:22:40,038:INFO:SubProcess create_model() called ==================================
2024-11-26 10:22:40,038:INFO:Initializing create_model()
2024-11-26 10:22:40,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:22:40,038:INFO:Checking exceptions
2024-11-26 10:22:40,038:INFO:Importing libraries
2024-11-26 10:22:40,038:INFO:Copying training dataset
2024-11-26 10:22:40,225:INFO:Defining folds
2024-11-26 10:22:40,225:INFO:Declaring metric variables
2024-11-26 10:22:40,225:INFO:Importing untrained model
2024-11-26 10:22:40,288:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 10:22:40,320:INFO:Starting cross validation
2024-11-26 10:22:40,330:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:22:45,573:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:45,616:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:45,631:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:22:45,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:46,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:46,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:46,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:22:46,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:49,560:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:49,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:49,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:22:49,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:50,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:50,286:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:50,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:22:50,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:51,910:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:51,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:51,967:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:22:51,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:52,073:INFO:Calculating mean and std
2024-11-26 10:22:52,073:INFO:Creating metrics dataframe
2024-11-26 10:22:52,073:INFO:Uploading results into container
2024-11-26 10:22:52,091:INFO:Uploading model into container now
2024-11-26 10:22:52,092:INFO:_master_model_container: 5
2024-11-26 10:22:52,092:INFO:_display_container: 2
2024-11-26 10:22:52,124:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5126, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 10:22:52,124:INFO:create_model() successfully completed......................................
2024-11-26 10:22:52,496:INFO:SubProcess create_model() end ==================================
2024-11-26 10:22:52,496:INFO:Creating metrics dataframe
2024-11-26 10:22:52,525:INFO:Initializing Ridge Classifier
2024-11-26 10:22:52,525:INFO:Total runtime is 1.192530310153961 minutes
2024-11-26 10:22:52,546:INFO:SubProcess create_model() called ==================================
2024-11-26 10:22:52,547:INFO:Initializing create_model()
2024-11-26 10:22:52,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:22:52,547:INFO:Checking exceptions
2024-11-26 10:22:52,547:INFO:Importing libraries
2024-11-26 10:22:52,547:INFO:Copying training dataset
2024-11-26 10:22:52,668:INFO:Defining folds
2024-11-26 10:22:52,668:INFO:Declaring metric variables
2024-11-26 10:22:52,682:INFO:Importing untrained model
2024-11-26 10:22:52,703:INFO:Ridge Classifier Imported successfully
2024-11-26 10:22:52,748:INFO:Starting cross validation
2024-11-26 10:22:52,952:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:22:53,989:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:54,236:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:54,300:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:54,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:54,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:54,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:56,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:56,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:56,844:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:56,891:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:56,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:56,951:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:57,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:57,927:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:57,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:22:58,048:INFO:Calculating mean and std
2024-11-26 10:22:58,091:INFO:Creating metrics dataframe
2024-11-26 10:22:58,091:INFO:Uploading results into container
2024-11-26 10:22:58,111:INFO:Uploading model into container now
2024-11-26 10:22:58,113:INFO:_master_model_container: 6
2024-11-26 10:22:58,113:INFO:_display_container: 2
2024-11-26 10:22:58,117:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5126, solver='auto',
                tol=0.0001)
2024-11-26 10:22:58,118:INFO:create_model() successfully completed......................................
2024-11-26 10:22:58,481:INFO:SubProcess create_model() end ==================================
2024-11-26 10:22:58,481:INFO:Creating metrics dataframe
2024-11-26 10:22:58,512:INFO:Initializing Random Forest Classifier
2024-11-26 10:22:58,512:INFO:Total runtime is 1.2923188646634418 minutes
2024-11-26 10:22:58,512:INFO:SubProcess create_model() called ==================================
2024-11-26 10:22:58,512:INFO:Initializing create_model()
2024-11-26 10:22:58,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:22:58,512:INFO:Checking exceptions
2024-11-26 10:22:58,512:INFO:Importing libraries
2024-11-26 10:22:58,512:INFO:Copying training dataset
2024-11-26 10:22:58,668:INFO:Defining folds
2024-11-26 10:22:58,668:INFO:Declaring metric variables
2024-11-26 10:22:58,668:INFO:Importing untrained model
2024-11-26 10:22:58,687:INFO:Random Forest Classifier Imported successfully
2024-11-26 10:22:58,799:INFO:Starting cross validation
2024-11-26 10:22:58,819:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:23:10,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:10,207:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:10,365:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:10,403:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:10,492:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:10,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:20,948:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:20,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:21,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:21,427:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:21,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:21,512:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:26,582:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:26,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:26,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:26,823:INFO:Calculating mean and std
2024-11-26 10:23:26,823:INFO:Creating metrics dataframe
2024-11-26 10:23:26,846:INFO:Uploading results into container
2024-11-26 10:23:26,851:INFO:Uploading model into container now
2024-11-26 10:23:26,852:INFO:_master_model_container: 7
2024-11-26 10:23:26,852:INFO:_display_container: 2
2024-11-26 10:23:26,853:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5126, verbose=0,
                       warm_start=False)
2024-11-26 10:23:26,853:INFO:create_model() successfully completed......................................
2024-11-26 10:23:27,496:INFO:SubProcess create_model() end ==================================
2024-11-26 10:23:27,496:INFO:Creating metrics dataframe
2024-11-26 10:23:27,512:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 10:23:27,512:INFO:Total runtime is 1.775650342305501 minutes
2024-11-26 10:23:27,542:INFO:SubProcess create_model() called ==================================
2024-11-26 10:23:27,542:INFO:Initializing create_model()
2024-11-26 10:23:27,542:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:23:27,542:INFO:Checking exceptions
2024-11-26 10:23:27,542:INFO:Importing libraries
2024-11-26 10:23:27,542:INFO:Copying training dataset
2024-11-26 10:23:27,776:INFO:Defining folds
2024-11-26 10:23:27,778:INFO:Declaring metric variables
2024-11-26 10:23:27,812:INFO:Importing untrained model
2024-11-26 10:23:27,839:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 10:23:27,870:INFO:Starting cross validation
2024-11-26 10:23:27,870:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:23:29,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:23:29,684:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:23:30,306:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:30,537:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:30,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:30,638:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:30,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:30,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:32,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:23:32,602:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:23:32,809:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:32,860:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:32,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:32,911:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:33,018:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:33,086:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:33,762:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:23:34,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:34,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:34,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:34,228:INFO:Calculating mean and std
2024-11-26 10:23:34,228:INFO:Creating metrics dataframe
2024-11-26 10:23:34,257:INFO:Uploading results into container
2024-11-26 10:23:34,259:INFO:Uploading model into container now
2024-11-26 10:23:34,259:INFO:_master_model_container: 8
2024-11-26 10:23:34,259:INFO:_display_container: 2
2024-11-26 10:23:34,259:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 10:23:34,259:INFO:create_model() successfully completed......................................
2024-11-26 10:23:34,602:INFO:SubProcess create_model() end ==================================
2024-11-26 10:23:34,602:INFO:Creating metrics dataframe
2024-11-26 10:23:34,664:INFO:Initializing Ada Boost Classifier
2024-11-26 10:23:34,664:INFO:Total runtime is 1.8948520898818966 minutes
2024-11-26 10:23:34,664:INFO:SubProcess create_model() called ==================================
2024-11-26 10:23:34,664:INFO:Initializing create_model()
2024-11-26 10:23:34,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:23:34,664:INFO:Checking exceptions
2024-11-26 10:23:34,664:INFO:Importing libraries
2024-11-26 10:23:34,680:INFO:Copying training dataset
2024-11-26 10:23:34,870:INFO:Defining folds
2024-11-26 10:23:34,870:INFO:Declaring metric variables
2024-11-26 10:23:34,883:INFO:Importing untrained model
2024-11-26 10:23:34,883:INFO:Ada Boost Classifier Imported successfully
2024-11-26 10:23:34,906:INFO:Starting cross validation
2024-11-26 10:23:34,914:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:23:35,747:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:23:35,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:23:41,594:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:41,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:41,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:41,770:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:41,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:41,968:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:42,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:23:42,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:23:46,184:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:46,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:46,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:46,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:46,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:46,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:46,972:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:23:49,854:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:49,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:49,977:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:23:50,055:INFO:Calculating mean and std
2024-11-26 10:23:50,193:INFO:Creating metrics dataframe
2024-11-26 10:23:50,208:INFO:Uploading results into container
2024-11-26 10:23:50,208:INFO:Uploading model into container now
2024-11-26 10:23:50,208:INFO:_master_model_container: 9
2024-11-26 10:23:50,208:INFO:_display_container: 2
2024-11-26 10:23:50,208:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5126)
2024-11-26 10:23:50,208:INFO:create_model() successfully completed......................................
2024-11-26 10:23:50,740:INFO:SubProcess create_model() end ==================================
2024-11-26 10:23:50,740:INFO:Creating metrics dataframe
2024-11-26 10:23:50,771:INFO:Initializing Gradient Boosting Classifier
2024-11-26 10:23:50,771:INFO:Total runtime is 2.1633113026618953 minutes
2024-11-26 10:23:50,787:INFO:SubProcess create_model() called ==================================
2024-11-26 10:23:50,787:INFO:Initializing create_model()
2024-11-26 10:23:50,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:23:50,787:INFO:Checking exceptions
2024-11-26 10:23:50,787:INFO:Importing libraries
2024-11-26 10:23:50,787:INFO:Copying training dataset
2024-11-26 10:23:51,063:INFO:Defining folds
2024-11-26 10:23:51,068:INFO:Declaring metric variables
2024-11-26 10:23:51,068:INFO:Importing untrained model
2024-11-26 10:23:51,068:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 10:23:51,100:INFO:Starting cross validation
2024-11-26 10:23:51,100:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:24:04,710:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:04,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:04,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:04,841:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:04,841:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:04,867:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:16,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:16,862:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:16,873:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:16,910:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:16,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:16,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:27,608:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:27,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:27,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:27,761:INFO:Calculating mean and std
2024-11-26 10:24:27,761:INFO:Creating metrics dataframe
2024-11-26 10:24:27,761:INFO:Uploading results into container
2024-11-26 10:24:27,761:INFO:Uploading model into container now
2024-11-26 10:24:27,776:INFO:_master_model_container: 10
2024-11-26 10:24:27,776:INFO:_display_container: 2
2024-11-26 10:24:27,776:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5126, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 10:24:27,776:INFO:create_model() successfully completed......................................
2024-11-26 10:24:28,169:INFO:SubProcess create_model() end ==================================
2024-11-26 10:24:28,169:INFO:Creating metrics dataframe
2024-11-26 10:24:28,196:INFO:Initializing Linear Discriminant Analysis
2024-11-26 10:24:28,196:INFO:Total runtime is 2.7870610515276586 minutes
2024-11-26 10:24:28,196:INFO:SubProcess create_model() called ==================================
2024-11-26 10:24:28,196:INFO:Initializing create_model()
2024-11-26 10:24:28,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:24:28,196:INFO:Checking exceptions
2024-11-26 10:24:28,196:INFO:Importing libraries
2024-11-26 10:24:28,196:INFO:Copying training dataset
2024-11-26 10:24:28,385:INFO:Defining folds
2024-11-26 10:24:28,385:INFO:Declaring metric variables
2024-11-26 10:24:28,401:INFO:Importing untrained model
2024-11-26 10:24:28,401:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 10:24:28,427:INFO:Starting cross validation
2024-11-26 10:24:28,434:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:24:30,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:30,266:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:30,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:30,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:30,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:30,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:32,915:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:32,915:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:32,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:32,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:32,998:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:33,008:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:34,112:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:34,155:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:34,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:34,264:INFO:Calculating mean and std
2024-11-26 10:24:34,264:INFO:Creating metrics dataframe
2024-11-26 10:24:34,264:INFO:Uploading results into container
2024-11-26 10:24:34,264:INFO:Uploading model into container now
2024-11-26 10:24:34,264:INFO:_master_model_container: 11
2024-11-26 10:24:34,264:INFO:_display_container: 2
2024-11-26 10:24:34,290:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 10:24:34,291:INFO:create_model() successfully completed......................................
2024-11-26 10:24:34,655:INFO:SubProcess create_model() end ==================================
2024-11-26 10:24:34,655:INFO:Creating metrics dataframe
2024-11-26 10:24:34,686:INFO:Initializing Extra Trees Classifier
2024-11-26 10:24:34,686:INFO:Total runtime is 2.8952255527178443 minutes
2024-11-26 10:24:34,712:INFO:SubProcess create_model() called ==================================
2024-11-26 10:24:34,712:INFO:Initializing create_model()
2024-11-26 10:24:34,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:24:34,713:INFO:Checking exceptions
2024-11-26 10:24:34,713:INFO:Importing libraries
2024-11-26 10:24:34,713:INFO:Copying training dataset
2024-11-26 10:24:34,968:INFO:Defining folds
2024-11-26 10:24:34,994:INFO:Declaring metric variables
2024-11-26 10:24:35,009:INFO:Importing untrained model
2024-11-26 10:24:35,020:INFO:Extra Trees Classifier Imported successfully
2024-11-26 10:24:35,093:INFO:Starting cross validation
2024-11-26 10:24:35,093:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:24:45,960:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:46,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:46,189:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:46,237:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:46,359:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:46,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:55,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:55,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:55,504:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:55,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:55,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:24:55,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:00,519:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:00,560:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:00,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:00,682:INFO:Calculating mean and std
2024-11-26 10:25:00,744:INFO:Creating metrics dataframe
2024-11-26 10:25:00,744:INFO:Uploading results into container
2024-11-26 10:25:00,744:INFO:Uploading model into container now
2024-11-26 10:25:00,744:INFO:_master_model_container: 12
2024-11-26 10:25:00,744:INFO:_display_container: 2
2024-11-26 10:25:00,764:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5126, verbose=0,
                     warm_start=False)
2024-11-26 10:25:00,765:INFO:create_model() successfully completed......................................
2024-11-26 10:25:01,165:INFO:SubProcess create_model() end ==================================
2024-11-26 10:25:01,165:INFO:Creating metrics dataframe
2024-11-26 10:25:01,181:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 10:25:01,197:INFO:Total runtime is 3.337077689170837 minutes
2024-11-26 10:25:01,197:INFO:SubProcess create_model() called ==================================
2024-11-26 10:25:01,197:INFO:Initializing create_model()
2024-11-26 10:25:01,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:25:01,197:INFO:Checking exceptions
2024-11-26 10:25:01,197:INFO:Importing libraries
2024-11-26 10:25:01,197:INFO:Copying training dataset
2024-11-26 10:25:01,447:INFO:Defining folds
2024-11-26 10:25:01,447:INFO:Declaring metric variables
2024-11-26 10:25:01,447:INFO:Importing untrained model
2024-11-26 10:25:01,493:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 10:25:01,607:INFO:Starting cross validation
2024-11-26 10:25:01,618:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:25:05,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:05,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:05,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:05,107:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:05,154:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:05,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:07,463:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:07,508:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:07,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:07,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:07,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:07,644:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:09,902:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:09,940:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:09,996:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:10,101:INFO:Calculating mean and std
2024-11-26 10:25:10,101:INFO:Creating metrics dataframe
2024-11-26 10:25:10,116:INFO:Uploading results into container
2024-11-26 10:25:10,167:INFO:Uploading model into container now
2024-11-26 10:25:10,170:INFO:_master_model_container: 13
2024-11-26 10:25:10,170:INFO:_display_container: 2
2024-11-26 10:25:10,170:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5126, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 10:25:10,170:INFO:create_model() successfully completed......................................
2024-11-26 10:25:10,618:INFO:SubProcess create_model() end ==================================
2024-11-26 10:25:10,618:INFO:Creating metrics dataframe
2024-11-26 10:25:10,655:INFO:Initializing Dummy Classifier
2024-11-26 10:25:10,655:INFO:Total runtime is 3.49470411936442 minutes
2024-11-26 10:25:10,663:INFO:SubProcess create_model() called ==================================
2024-11-26 10:25:10,663:INFO:Initializing create_model()
2024-11-26 10:25:10,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F97796F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:25:10,663:INFO:Checking exceptions
2024-11-26 10:25:10,663:INFO:Importing libraries
2024-11-26 10:25:10,663:INFO:Copying training dataset
2024-11-26 10:25:10,895:INFO:Defining folds
2024-11-26 10:25:10,895:INFO:Declaring metric variables
2024-11-26 10:25:10,923:INFO:Importing untrained model
2024-11-26 10:25:10,947:INFO:Dummy Classifier Imported successfully
2024-11-26 10:25:11,086:INFO:Starting cross validation
2024-11-26 10:25:11,103:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:25:12,318:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:12,335:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:12,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:25:12,439:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:12,654:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:12,854:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:12,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:25:13,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:14,780:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:14,819:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:14,836:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:14,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:25:14,879:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:14,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:14,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:25:14,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:15,856:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:15,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:15,919:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:25:15,950:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:25:16,009:INFO:Calculating mean and std
2024-11-26 10:25:16,043:INFO:Creating metrics dataframe
2024-11-26 10:25:16,054:INFO:Uploading results into container
2024-11-26 10:25:16,072:INFO:Uploading model into container now
2024-11-26 10:25:16,072:INFO:_master_model_container: 14
2024-11-26 10:25:16,072:INFO:_display_container: 2
2024-11-26 10:25:16,072:INFO:DummyClassifier(constant=None, random_state=5126, strategy='prior')
2024-11-26 10:25:16,072:INFO:create_model() successfully completed......................................
2024-11-26 10:25:16,318:INFO:SubProcess create_model() end ==================================
2024-11-26 10:25:16,318:INFO:Creating metrics dataframe
2024-11-26 10:25:16,393:INFO:Initializing create_model()
2024-11-26 10:25:16,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5126, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:25:16,393:INFO:Checking exceptions
2024-11-26 10:25:16,396:INFO:Importing libraries
2024-11-26 10:25:16,396:INFO:Copying training dataset
2024-11-26 10:25:16,502:INFO:Defining folds
2024-11-26 10:25:16,506:INFO:Declaring metric variables
2024-11-26 10:25:16,506:INFO:Importing untrained model
2024-11-26 10:25:16,506:INFO:Declaring custom model
2024-11-26 10:25:16,506:INFO:Logistic Regression Imported successfully
2024-11-26 10:25:16,506:INFO:Cross validation set to False
2024-11-26 10:25:16,506:INFO:Fitting Model
2024-11-26 10:25:23,257:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5126, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 10:25:23,257:INFO:create_model() successfully completed......................................
2024-11-26 10:25:24,140:INFO:_master_model_container: 14
2024-11-26 10:25:24,142:INFO:_display_container: 2
2024-11-26 10:25:24,146:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5126, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 10:25:24,146:INFO:compare_models() successfully completed......................................
2024-11-26 10:25:24,462:INFO:Initializing predict_model()
2024-11-26 10:25:24,478:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5126, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B39E8E0>)
2024-11-26 10:25:24,478:INFO:Checking exceptions
2024-11-26 10:25:24,478:INFO:Preloading libraries
2024-11-26 10:25:24,478:INFO:Set up data.
2024-11-26 10:25:24,509:INFO:Set up index.
2024-11-26 10:25:26,666:INFO:Initializing plot_model()
2024-11-26 10:25:26,666:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA2B3B450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-26 10:25:26,666:INFO:Checking exceptions
2024-11-26 10:25:44,238:INFO:Preloading libraries
2024-11-26 10:25:50,691:INFO:Copying training dataset
2024-11-26 10:25:50,691:INFO:Plot type: feature
2024-11-26 10:25:50,711:WARNING:No coef_ found. Trying feature_importances_
2024-11-26 10:32:40,305:INFO:PyCaret ClassificationExperiment
2024-11-26 10:32:40,305:INFO:Logging name: clf-default-name
2024-11-26 10:32:40,305:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 10:32:40,305:INFO:version 3.3.2
2024-11-26 10:32:40,305:INFO:Initializing setup()
2024-11-26 10:32:40,305:INFO:self.USI: fdf5
2024-11-26 10:32:40,305:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 10:32:40,305:INFO:Checking environment
2024-11-26 10:32:40,305:INFO:python_version: 3.11.9
2024-11-26 10:32:40,305:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 10:32:40,305:INFO:machine: AMD64
2024-11-26 10:32:40,305:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 10:32:40,305:INFO:Memory: svmem(total=4293971968, available=506327040, percent=88.2, used=3787644928, free=506327040)
2024-11-26 10:32:40,305:INFO:Physical Core: 2
2024-11-26 10:32:40,305:INFO:Logical Core: 2
2024-11-26 10:32:40,305:INFO:Checking libraries
2024-11-26 10:32:40,305:INFO:System:
2024-11-26 10:32:40,305:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 10:32:40,305:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 10:32:40,305:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 10:32:40,305:INFO:PyCaret required dependencies:
2024-11-26 10:32:40,305:INFO:                 pip: 24.3.1
2024-11-26 10:32:40,323:INFO:          setuptools: 65.5.0
2024-11-26 10:32:40,324:INFO:             pycaret: 3.3.2
2024-11-26 10:32:40,324:INFO:             IPython: 8.26.0
2024-11-26 10:32:40,324:INFO:          ipywidgets: 8.1.5
2024-11-26 10:32:40,324:INFO:                tqdm: 4.66.5
2024-11-26 10:32:40,325:INFO:               numpy: 1.26.4
2024-11-26 10:32:40,325:INFO:              pandas: 2.1.4
2024-11-26 10:32:40,326:INFO:              jinja2: 3.1.4
2024-11-26 10:32:40,326:INFO:               scipy: 1.11.4
2024-11-26 10:32:40,326:INFO:              joblib: 1.3.2
2024-11-26 10:32:40,326:INFO:             sklearn: 1.4.2
2024-11-26 10:32:40,327:INFO:                pyod: 2.0.2
2024-11-26 10:32:40,327:INFO:            imblearn: 0.12.4
2024-11-26 10:32:40,327:INFO:   category_encoders: 2.6.4
2024-11-26 10:32:40,327:INFO:            lightgbm: 4.5.0
2024-11-26 10:32:40,327:INFO:               numba: 0.60.0
2024-11-26 10:32:40,328:INFO:            requests: 2.32.3
2024-11-26 10:32:40,328:INFO:          matplotlib: 3.7.5
2024-11-26 10:32:40,337:INFO:          scikitplot: 0.3.7
2024-11-26 10:32:40,337:INFO:         yellowbrick: 1.5
2024-11-26 10:32:40,337:INFO:              plotly: 5.24.1
2024-11-26 10:32:40,337:INFO:    plotly-resampler: Not installed
2024-11-26 10:32:40,337:INFO:             kaleido: 0.2.1
2024-11-26 10:32:40,337:INFO:           schemdraw: 0.15
2024-11-26 10:32:40,337:INFO:         statsmodels: 0.14.3
2024-11-26 10:32:40,337:INFO:              sktime: 0.26.0
2024-11-26 10:32:40,337:INFO:               tbats: 1.1.3
2024-11-26 10:32:40,338:INFO:            pmdarima: 2.0.4
2024-11-26 10:32:40,338:INFO:              psutil: 6.0.0
2024-11-26 10:32:40,338:INFO:          markupsafe: 3.0.2
2024-11-26 10:32:40,338:INFO:             pickle5: Not installed
2024-11-26 10:32:40,338:INFO:         cloudpickle: 3.0.0
2024-11-26 10:32:40,338:INFO:         deprecation: 2.1.0
2024-11-26 10:32:40,338:INFO:              xxhash: 3.5.0
2024-11-26 10:32:40,338:INFO:           wurlitzer: Not installed
2024-11-26 10:32:40,338:INFO:PyCaret optional dependencies:
2024-11-26 10:32:40,339:INFO:                shap: 0.46.0
2024-11-26 10:32:40,339:INFO:           interpret: Not installed
2024-11-26 10:32:40,340:INFO:                umap: Not installed
2024-11-26 10:32:40,340:INFO:     ydata_profiling: Not installed
2024-11-26 10:32:40,340:INFO:  explainerdashboard: Not installed
2024-11-26 10:32:40,340:INFO:             autoviz: Not installed
2024-11-26 10:32:40,340:INFO:           fairlearn: Not installed
2024-11-26 10:32:40,368:INFO:          deepchecks: Not installed
2024-11-26 10:32:40,383:INFO:             xgboost: Not installed
2024-11-26 10:32:40,383:INFO:            catboost: Not installed
2024-11-26 10:32:40,383:INFO:              kmodes: Not installed
2024-11-26 10:32:40,383:INFO:             mlxtend: Not installed
2024-11-26 10:32:40,383:INFO:       statsforecast: Not installed
2024-11-26 10:32:40,383:INFO:        tune_sklearn: Not installed
2024-11-26 10:32:40,383:INFO:                 ray: Not installed
2024-11-26 10:32:40,383:INFO:            hyperopt: Not installed
2024-11-26 10:32:40,383:INFO:              optuna: 4.1.0
2024-11-26 10:32:40,383:INFO:               skopt: Not installed
2024-11-26 10:32:40,383:INFO:              mlflow: Not installed
2024-11-26 10:32:40,383:INFO:              gradio: Not installed
2024-11-26 10:32:40,383:INFO:             fastapi: Not installed
2024-11-26 10:32:40,383:INFO:             uvicorn: Not installed
2024-11-26 10:32:40,383:INFO:              m2cgen: Not installed
2024-11-26 10:32:40,383:INFO:           evidently: Not installed
2024-11-26 10:32:40,383:INFO:               fugue: Not installed
2024-11-26 10:32:40,383:INFO:           streamlit: Not installed
2024-11-26 10:32:40,383:INFO:             prophet: Not installed
2024-11-26 10:32:40,383:INFO:None
2024-11-26 10:32:40,383:INFO:Set up data.
2024-11-26 10:32:40,619:INFO:Set up folding strategy.
2024-11-26 10:32:40,619:INFO:Set up train/test split.
2024-11-26 10:32:40,737:INFO:Set up index.
2024-11-26 10:32:40,737:INFO:Assigning column types.
2024-11-26 10:32:40,775:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 10:32:41,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 10:32:41,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 10:32:41,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:41,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:42,118:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 10:32:42,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 10:32:42,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:42,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:42,243:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 10:32:42,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 10:32:42,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:42,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:43,540:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 10:32:43,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:43,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:43,790:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 10:32:44,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:44,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:44,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:44,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:44,430:INFO:Preparing preprocessing pipeline...
2024-11-26 10:32:44,462:INFO:Set up label encoding.
2024-11-26 10:32:44,462:INFO:Set up date feature engineering.
2024-11-26 10:32:44,462:INFO:Set up simple imputation.
2024-11-26 10:32:44,508:INFO:Set up encoding of ordinal features.
2024-11-26 10:32:44,524:INFO:Set up encoding of categorical features.
2024-11-26 10:32:45,352:INFO:Finished creating preprocessing pipeline.
2024-11-26 10:32:45,462:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Location', 'WindGustDir',
                                             'WindDir9am', 'WindDir3pm'],
                                    transformer=OneHotEncoder(cols=['Location',
                                                                    'WindGustDir',
                                                                    'WindDir9am',
                                                                    'WindDir3pm'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-26 10:32:45,462:INFO:Creating final display dataframe.
2024-11-26 10:32:47,462:INFO:Setup _display_container:                     Description             Value
0                    Session id              7496
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (22463, 24)
5        Transformed data shape       (22463, 80)
6   Transformed train set shape       (15724, 80)
7    Transformed test set shape        (6739, 80)
8              Numeric features                17
9                 Date features                 1
10         Categorical features                 5
11     Rows with missing values             62.7%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              fdf5
2024-11-26 10:32:47,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:47,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:47,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:47,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 10:32:47,868:INFO:setup() successfully completed in 8.17s...............
2024-11-26 10:32:47,868:INFO:Initializing compare_models()
2024-11-26 10:32:47,868:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 10:32:47,868:INFO:Checking exceptions
2024-11-26 10:32:47,915:INFO:Preparing display monitor
2024-11-26 10:32:48,056:INFO:Initializing Logistic Regression
2024-11-26 10:32:48,056:INFO:Total runtime is 0.0 minutes
2024-11-26 10:32:48,071:INFO:SubProcess create_model() called ==================================
2024-11-26 10:32:48,071:INFO:Initializing create_model()
2024-11-26 10:32:48,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:32:48,071:INFO:Checking exceptions
2024-11-26 10:32:48,071:INFO:Importing libraries
2024-11-26 10:32:48,071:INFO:Copying training dataset
2024-11-26 10:32:48,196:INFO:Defining folds
2024-11-26 10:32:48,196:INFO:Declaring metric variables
2024-11-26 10:32:48,196:INFO:Importing untrained model
2024-11-26 10:32:48,211:INFO:Logistic Regression Imported successfully
2024-11-26 10:32:48,258:INFO:Starting cross validation
2024-11-26 10:32:48,274:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:33:11,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:33:11,214:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:33:11,320:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:11,360:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:11,402:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:11,420:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:11,434:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:11,480:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:18,146:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:33:18,286:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:33:18,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:18,429:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:18,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:18,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:18,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:18,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:23,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-26 10:33:24,205:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:24,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:24,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:24,369:INFO:Calculating mean and std
2024-11-26 10:33:24,385:INFO:Creating metrics dataframe
2024-11-26 10:33:24,400:INFO:Uploading results into container
2024-11-26 10:33:24,400:INFO:Uploading model into container now
2024-11-26 10:33:24,400:INFO:_master_model_container: 1
2024-11-26 10:33:24,400:INFO:_display_container: 2
2024-11-26 10:33:24,400:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7496, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 10:33:24,400:INFO:create_model() successfully completed......................................
2024-11-26 10:33:25,307:INFO:SubProcess create_model() end ==================================
2024-11-26 10:33:25,307:INFO:Creating metrics dataframe
2024-11-26 10:33:25,333:INFO:Initializing K Neighbors Classifier
2024-11-26 10:33:25,333:INFO:Total runtime is 0.6212916930516561 minutes
2024-11-26 10:33:25,341:INFO:SubProcess create_model() called ==================================
2024-11-26 10:33:25,341:INFO:Initializing create_model()
2024-11-26 10:33:25,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:33:25,341:INFO:Checking exceptions
2024-11-26 10:33:25,341:INFO:Importing libraries
2024-11-26 10:33:25,341:INFO:Copying training dataset
2024-11-26 10:33:25,419:INFO:Defining folds
2024-11-26 10:33:25,419:INFO:Declaring metric variables
2024-11-26 10:33:25,436:INFO:Importing untrained model
2024-11-26 10:33:25,440:INFO:K Neighbors Classifier Imported successfully
2024-11-26 10:33:25,463:INFO:Starting cross validation
2024-11-26 10:33:25,463:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:33:30,085:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:30,160:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:30,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:30,414:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:30,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:30,552:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:33,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:33,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:33,707:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:33,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:33,768:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:33,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:36,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:36,121:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:36,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:36,232:INFO:Calculating mean and std
2024-11-26 10:33:36,232:INFO:Creating metrics dataframe
2024-11-26 10:33:36,250:INFO:Uploading results into container
2024-11-26 10:33:36,250:INFO:Uploading model into container now
2024-11-26 10:33:36,250:INFO:_master_model_container: 2
2024-11-26 10:33:36,250:INFO:_display_container: 2
2024-11-26 10:33:36,265:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 10:33:36,265:INFO:create_model() successfully completed......................................
2024-11-26 10:33:36,659:INFO:SubProcess create_model() end ==================================
2024-11-26 10:33:36,659:INFO:Creating metrics dataframe
2024-11-26 10:33:36,672:INFO:Initializing Naive Bayes
2024-11-26 10:33:36,672:INFO:Total runtime is 0.8102742036183676 minutes
2024-11-26 10:33:36,672:INFO:SubProcess create_model() called ==================================
2024-11-26 10:33:36,672:INFO:Initializing create_model()
2024-11-26 10:33:36,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:33:36,672:INFO:Checking exceptions
2024-11-26 10:33:36,672:INFO:Importing libraries
2024-11-26 10:33:36,672:INFO:Copying training dataset
2024-11-26 10:33:36,703:INFO:Defining folds
2024-11-26 10:33:36,703:INFO:Declaring metric variables
2024-11-26 10:33:36,717:INFO:Importing untrained model
2024-11-26 10:33:36,717:INFO:Naive Bayes Imported successfully
2024-11-26 10:33:36,739:INFO:Starting cross validation
2024-11-26 10:33:36,748:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:33:37,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:37,918:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:37,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:37,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:38,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:38,235:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:41,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:41,146:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:41,146:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:41,171:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:41,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:41,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:42,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:42,299:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:42,340:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:42,424:INFO:Calculating mean and std
2024-11-26 10:33:42,424:INFO:Creating metrics dataframe
2024-11-26 10:33:42,439:INFO:Uploading results into container
2024-11-26 10:33:42,439:INFO:Uploading model into container now
2024-11-26 10:33:42,439:INFO:_master_model_container: 3
2024-11-26 10:33:42,439:INFO:_display_container: 2
2024-11-26 10:33:42,439:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 10:33:42,439:INFO:create_model() successfully completed......................................
2024-11-26 10:33:42,831:INFO:SubProcess create_model() end ==================================
2024-11-26 10:33:42,831:INFO:Creating metrics dataframe
2024-11-26 10:33:42,851:INFO:Initializing Decision Tree Classifier
2024-11-26 10:33:42,851:INFO:Total runtime is 0.913257360458374 minutes
2024-11-26 10:33:42,859:INFO:SubProcess create_model() called ==================================
2024-11-26 10:33:42,859:INFO:Initializing create_model()
2024-11-26 10:33:42,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:33:42,876:INFO:Checking exceptions
2024-11-26 10:33:42,876:INFO:Importing libraries
2024-11-26 10:33:42,876:INFO:Copying training dataset
2024-11-26 10:33:42,936:INFO:Defining folds
2024-11-26 10:33:42,937:INFO:Declaring metric variables
2024-11-26 10:33:42,944:INFO:Importing untrained model
2024-11-26 10:33:42,952:INFO:Decision Tree Classifier Imported successfully
2024-11-26 10:33:42,987:INFO:Starting cross validation
2024-11-26 10:33:42,999:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:33:46,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:46,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:46,647:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:46,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:46,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:46,747:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:48,724:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:48,724:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:48,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:48,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:48,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:48,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:50,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:50,745:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:50,768:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:50,879:INFO:Calculating mean and std
2024-11-26 10:33:50,879:INFO:Creating metrics dataframe
2024-11-26 10:33:50,900:INFO:Uploading results into container
2024-11-26 10:33:50,900:INFO:Uploading model into container now
2024-11-26 10:33:50,900:INFO:_master_model_container: 4
2024-11-26 10:33:50,900:INFO:_display_container: 2
2024-11-26 10:33:50,900:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7496, splitter='best')
2024-11-26 10:33:50,900:INFO:create_model() successfully completed......................................
2024-11-26 10:33:51,288:INFO:SubProcess create_model() end ==================================
2024-11-26 10:33:51,288:INFO:Creating metrics dataframe
2024-11-26 10:33:51,303:INFO:Initializing SVM - Linear Kernel
2024-11-26 10:33:51,303:INFO:Total runtime is 1.054121239980062 minutes
2024-11-26 10:33:51,319:INFO:SubProcess create_model() called ==================================
2024-11-26 10:33:51,319:INFO:Initializing create_model()
2024-11-26 10:33:51,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:33:51,319:INFO:Checking exceptions
2024-11-26 10:33:51,319:INFO:Importing libraries
2024-11-26 10:33:51,319:INFO:Copying training dataset
2024-11-26 10:33:51,395:INFO:Defining folds
2024-11-26 10:33:51,395:INFO:Declaring metric variables
2024-11-26 10:33:51,426:INFO:Importing untrained model
2024-11-26 10:33:51,455:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 10:33:51,498:INFO:Starting cross validation
2024-11-26 10:33:51,518:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:33:57,050:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:57,143:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:57,179:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:33:57,211:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:57,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:57,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:33:57,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:33:57,705:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:00,323:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:00,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:00,459:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:00,573:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:00,616:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:00,631:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:34:00,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:04,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:04,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:04,350:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:34:04,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:04,473:INFO:Calculating mean and std
2024-11-26 10:34:04,473:INFO:Creating metrics dataframe
2024-11-26 10:34:04,473:INFO:Uploading results into container
2024-11-26 10:34:04,473:INFO:Uploading model into container now
2024-11-26 10:34:04,473:INFO:_master_model_container: 5
2024-11-26 10:34:04,473:INFO:_display_container: 2
2024-11-26 10:34:04,489:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7496, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 10:34:04,489:INFO:create_model() successfully completed......................................
2024-11-26 10:34:04,898:INFO:SubProcess create_model() end ==================================
2024-11-26 10:34:04,899:INFO:Creating metrics dataframe
2024-11-26 10:34:04,927:INFO:Initializing Ridge Classifier
2024-11-26 10:34:04,927:INFO:Total runtime is 1.2811861515045166 minutes
2024-11-26 10:34:04,927:INFO:SubProcess create_model() called ==================================
2024-11-26 10:34:04,927:INFO:Initializing create_model()
2024-11-26 10:34:04,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:34:04,944:INFO:Checking exceptions
2024-11-26 10:34:04,944:INFO:Importing libraries
2024-11-26 10:34:04,946:INFO:Copying training dataset
2024-11-26 10:34:05,022:INFO:Defining folds
2024-11-26 10:34:05,022:INFO:Declaring metric variables
2024-11-26 10:34:05,056:INFO:Importing untrained model
2024-11-26 10:34:05,071:INFO:Ridge Classifier Imported successfully
2024-11-26 10:34:05,102:INFO:Starting cross validation
2024-11-26 10:34:05,102:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:34:06,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:06,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:06,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:06,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:06,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:06,602:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:08,321:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:08,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:08,376:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:08,376:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:08,493:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:08,554:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:09,363:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:09,453:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:09,519:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:09,606:INFO:Calculating mean and std
2024-11-26 10:34:09,606:INFO:Creating metrics dataframe
2024-11-26 10:34:09,606:INFO:Uploading results into container
2024-11-26 10:34:09,629:INFO:Uploading model into container now
2024-11-26 10:34:09,633:INFO:_master_model_container: 6
2024-11-26 10:34:09,634:INFO:_display_container: 2
2024-11-26 10:34:09,634:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7496, solver='auto',
                tol=0.0001)
2024-11-26 10:34:09,636:INFO:create_model() successfully completed......................................
2024-11-26 10:34:09,997:INFO:SubProcess create_model() end ==================================
2024-11-26 10:34:09,997:INFO:Creating metrics dataframe
2024-11-26 10:34:10,047:INFO:Initializing Random Forest Classifier
2024-11-26 10:34:10,047:INFO:Total runtime is 1.3665246446927388 minutes
2024-11-26 10:34:10,060:INFO:SubProcess create_model() called ==================================
2024-11-26 10:34:10,060:INFO:Initializing create_model()
2024-11-26 10:34:10,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:34:10,060:INFO:Checking exceptions
2024-11-26 10:34:10,060:INFO:Importing libraries
2024-11-26 10:34:10,060:INFO:Copying training dataset
2024-11-26 10:34:10,193:INFO:Defining folds
2024-11-26 10:34:10,193:INFO:Declaring metric variables
2024-11-26 10:34:10,219:INFO:Importing untrained model
2024-11-26 10:34:10,244:INFO:Random Forest Classifier Imported successfully
2024-11-26 10:34:10,282:INFO:Starting cross validation
2024-11-26 10:34:10,298:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:34:22,763:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:22,850:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:22,942:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:23,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:23,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:23,468:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:34,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:35,003:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:35,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:35,468:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:35,583:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:35,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:40,743:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:40,826:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:40,880:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:40,932:INFO:Calculating mean and std
2024-11-26 10:34:40,932:INFO:Creating metrics dataframe
2024-11-26 10:34:40,945:INFO:Uploading results into container
2024-11-26 10:34:40,945:INFO:Uploading model into container now
2024-11-26 10:34:40,945:INFO:_master_model_container: 7
2024-11-26 10:34:40,945:INFO:_display_container: 2
2024-11-26 10:34:40,962:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7496, verbose=0,
                       warm_start=False)
2024-11-26 10:34:40,962:INFO:create_model() successfully completed......................................
2024-11-26 10:34:41,428:INFO:SubProcess create_model() end ==================================
2024-11-26 10:34:41,428:INFO:Creating metrics dataframe
2024-11-26 10:34:41,460:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 10:34:41,460:INFO:Total runtime is 1.8900760769844056 minutes
2024-11-26 10:34:41,475:INFO:SubProcess create_model() called ==================================
2024-11-26 10:34:41,475:INFO:Initializing create_model()
2024-11-26 10:34:41,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:34:41,475:INFO:Checking exceptions
2024-11-26 10:34:41,475:INFO:Importing libraries
2024-11-26 10:34:41,475:INFO:Copying training dataset
2024-11-26 10:34:41,530:INFO:Defining folds
2024-11-26 10:34:41,531:INFO:Declaring metric variables
2024-11-26 10:34:41,544:INFO:Importing untrained model
2024-11-26 10:34:41,553:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 10:34:41,570:INFO:Starting cross validation
2024-11-26 10:34:41,570:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:34:42,529:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:34:42,639:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:34:43,263:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:43,310:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:43,328:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:43,493:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:43,618:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:43,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:45,824:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:34:45,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:34:46,158:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:46,208:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:46,241:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:46,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:46,363:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:46,368:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:47,247:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 10:34:47,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:47,687:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:47,712:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:47,786:INFO:Calculating mean and std
2024-11-26 10:34:47,796:INFO:Creating metrics dataframe
2024-11-26 10:34:47,796:INFO:Uploading results into container
2024-11-26 10:34:47,796:INFO:Uploading model into container now
2024-11-26 10:34:47,796:INFO:_master_model_container: 8
2024-11-26 10:34:47,796:INFO:_display_container: 2
2024-11-26 10:34:47,796:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 10:34:47,812:INFO:create_model() successfully completed......................................
2024-11-26 10:34:48,206:INFO:SubProcess create_model() end ==================================
2024-11-26 10:34:48,207:INFO:Creating metrics dataframe
2024-11-26 10:34:48,223:INFO:Initializing Ada Boost Classifier
2024-11-26 10:34:48,223:INFO:Total runtime is 2.002784780661265 minutes
2024-11-26 10:34:48,225:INFO:SubProcess create_model() called ==================================
2024-11-26 10:34:48,225:INFO:Initializing create_model()
2024-11-26 10:34:48,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:34:48,225:INFO:Checking exceptions
2024-11-26 10:34:48,233:INFO:Importing libraries
2024-11-26 10:34:48,233:INFO:Copying training dataset
2024-11-26 10:34:48,280:INFO:Defining folds
2024-11-26 10:34:48,280:INFO:Declaring metric variables
2024-11-26 10:34:48,280:INFO:Importing untrained model
2024-11-26 10:34:48,303:INFO:Ada Boost Classifier Imported successfully
2024-11-26 10:34:48,321:INFO:Starting cross validation
2024-11-26 10:34:48,327:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:34:49,042:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:34:49,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:34:54,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:54,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:54,125:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:54,155:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:54,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:54,231:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:55,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:34:55,088:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:34:59,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:59,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:59,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:59,340:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:59,448:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:59,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:34:59,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 10:35:03,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:03,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:03,208:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:03,272:INFO:Calculating mean and std
2024-11-26 10:35:03,272:INFO:Creating metrics dataframe
2024-11-26 10:35:03,272:INFO:Uploading results into container
2024-11-26 10:35:03,272:INFO:Uploading model into container now
2024-11-26 10:35:03,290:INFO:_master_model_container: 9
2024-11-26 10:35:03,290:INFO:_display_container: 2
2024-11-26 10:35:03,290:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7496)
2024-11-26 10:35:03,290:INFO:create_model() successfully completed......................................
2024-11-26 10:35:03,886:INFO:SubProcess create_model() end ==================================
2024-11-26 10:35:03,886:INFO:Creating metrics dataframe
2024-11-26 10:35:03,931:INFO:Initializing Gradient Boosting Classifier
2024-11-26 10:35:03,931:INFO:Total runtime is 2.26459112962087 minutes
2024-11-26 10:35:03,944:INFO:SubProcess create_model() called ==================================
2024-11-26 10:35:03,944:INFO:Initializing create_model()
2024-11-26 10:35:03,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:35:03,944:INFO:Checking exceptions
2024-11-26 10:35:03,944:INFO:Importing libraries
2024-11-26 10:35:03,944:INFO:Copying training dataset
2024-11-26 10:35:03,999:INFO:Defining folds
2024-11-26 10:35:04,006:INFO:Declaring metric variables
2024-11-26 10:35:04,033:INFO:Importing untrained model
2024-11-26 10:35:04,044:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 10:35:04,089:INFO:Starting cross validation
2024-11-26 10:35:04,100:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:35:18,607:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:18,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:18,695:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:18,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:18,751:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:18,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:31,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:31,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:31,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:31,939:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:32,024:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:32,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:42,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:42,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:42,988:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:43,052:INFO:Calculating mean and std
2024-11-26 10:35:43,052:INFO:Creating metrics dataframe
2024-11-26 10:35:43,052:INFO:Uploading results into container
2024-11-26 10:35:43,052:INFO:Uploading model into container now
2024-11-26 10:35:43,052:INFO:_master_model_container: 10
2024-11-26 10:35:43,052:INFO:_display_container: 2
2024-11-26 10:35:43,052:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7496, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 10:35:43,052:INFO:create_model() successfully completed......................................
2024-11-26 10:35:43,463:INFO:SubProcess create_model() end ==================================
2024-11-26 10:35:43,463:INFO:Creating metrics dataframe
2024-11-26 10:35:43,476:INFO:Initializing Linear Discriminant Analysis
2024-11-26 10:35:43,476:INFO:Total runtime is 2.9236782312393186 minutes
2024-11-26 10:35:43,491:INFO:SubProcess create_model() called ==================================
2024-11-26 10:35:43,491:INFO:Initializing create_model()
2024-11-26 10:35:43,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:35:43,491:INFO:Checking exceptions
2024-11-26 10:35:43,491:INFO:Importing libraries
2024-11-26 10:35:43,491:INFO:Copying training dataset
2024-11-26 10:35:43,572:INFO:Defining folds
2024-11-26 10:35:43,572:INFO:Declaring metric variables
2024-11-26 10:35:43,603:INFO:Importing untrained model
2024-11-26 10:35:43,614:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 10:35:43,677:INFO:Starting cross validation
2024-11-26 10:35:43,677:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:35:45,255:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:45,270:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:45,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:45,366:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:45,472:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:45,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:47,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:47,410:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:47,426:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:47,456:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:47,483:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:47,517:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:48,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:48,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:48,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:35:48,815:INFO:Calculating mean and std
2024-11-26 10:35:48,815:INFO:Creating metrics dataframe
2024-11-26 10:35:48,815:INFO:Uploading results into container
2024-11-26 10:35:48,815:INFO:Uploading model into container now
2024-11-26 10:35:48,835:INFO:_master_model_container: 11
2024-11-26 10:35:48,836:INFO:_display_container: 2
2024-11-26 10:35:48,837:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 10:35:48,837:INFO:create_model() successfully completed......................................
2024-11-26 10:35:49,211:INFO:SubProcess create_model() end ==================================
2024-11-26 10:35:49,211:INFO:Creating metrics dataframe
2024-11-26 10:35:49,237:INFO:Initializing Extra Trees Classifier
2024-11-26 10:35:49,237:INFO:Total runtime is 3.019691753387451 minutes
2024-11-26 10:35:49,256:INFO:SubProcess create_model() called ==================================
2024-11-26 10:35:49,256:INFO:Initializing create_model()
2024-11-26 10:35:49,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:35:49,256:INFO:Checking exceptions
2024-11-26 10:35:49,256:INFO:Importing libraries
2024-11-26 10:35:49,256:INFO:Copying training dataset
2024-11-26 10:35:49,319:INFO:Defining folds
2024-11-26 10:35:49,331:INFO:Declaring metric variables
2024-11-26 10:35:49,331:INFO:Importing untrained model
2024-11-26 10:35:49,360:INFO:Extra Trees Classifier Imported successfully
2024-11-26 10:35:49,378:INFO:Starting cross validation
2024-11-26 10:35:49,378:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:36:00,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:00,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:00,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:00,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:00,914:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:00,970:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:09,525:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:09,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:09,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:10,216:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:10,248:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:10,275:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:15,344:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:15,388:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:15,428:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:15,504:INFO:Calculating mean and std
2024-11-26 10:36:15,504:INFO:Creating metrics dataframe
2024-11-26 10:36:15,504:INFO:Uploading results into container
2024-11-26 10:36:15,504:INFO:Uploading model into container now
2024-11-26 10:36:15,524:INFO:_master_model_container: 12
2024-11-26 10:36:15,524:INFO:_display_container: 2
2024-11-26 10:36:15,525:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7496, verbose=0,
                     warm_start=False)
2024-11-26 10:36:15,525:INFO:create_model() successfully completed......................................
2024-11-26 10:36:16,098:INFO:SubProcess create_model() end ==================================
2024-11-26 10:36:16,098:INFO:Creating metrics dataframe
2024-11-26 10:36:16,145:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 10:36:16,145:INFO:Total runtime is 3.468163963158925 minutes
2024-11-26 10:36:16,178:INFO:SubProcess create_model() called ==================================
2024-11-26 10:36:16,178:INFO:Initializing create_model()
2024-11-26 10:36:16,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:36:16,178:INFO:Checking exceptions
2024-11-26 10:36:16,178:INFO:Importing libraries
2024-11-26 10:36:16,178:INFO:Copying training dataset
2024-11-26 10:36:16,265:INFO:Defining folds
2024-11-26 10:36:16,265:INFO:Declaring metric variables
2024-11-26 10:36:16,272:INFO:Importing untrained model
2024-11-26 10:36:16,290:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 10:36:16,304:INFO:Starting cross validation
2024-11-26 10:36:16,317:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:36:19,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:19,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:19,796:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:19,796:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:19,836:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:19,917:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:22,161:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:22,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:22,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:22,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:22,353:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:22,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:24,382:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:24,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:24,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:24,533:INFO:Calculating mean and std
2024-11-26 10:36:24,533:INFO:Creating metrics dataframe
2024-11-26 10:36:24,533:INFO:Uploading results into container
2024-11-26 10:36:24,533:INFO:Uploading model into container now
2024-11-26 10:36:24,533:INFO:_master_model_container: 13
2024-11-26 10:36:24,533:INFO:_display_container: 2
2024-11-26 10:36:24,533:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7496, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 10:36:24,533:INFO:create_model() successfully completed......................................
2024-11-26 10:36:24,943:INFO:SubProcess create_model() end ==================================
2024-11-26 10:36:24,943:INFO:Creating metrics dataframe
2024-11-26 10:36:25,003:INFO:Initializing Dummy Classifier
2024-11-26 10:36:25,004:INFO:Total runtime is 3.61578897635142 minutes
2024-11-26 10:36:25,023:INFO:SubProcess create_model() called ==================================
2024-11-26 10:36:25,024:INFO:Initializing create_model()
2024-11-26 10:36:25,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D9B6F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:36:25,024:INFO:Checking exceptions
2024-11-26 10:36:25,024:INFO:Importing libraries
2024-11-26 10:36:25,024:INFO:Copying training dataset
2024-11-26 10:36:25,063:INFO:Defining folds
2024-11-26 10:36:25,063:INFO:Declaring metric variables
2024-11-26 10:36:25,063:INFO:Importing untrained model
2024-11-26 10:36:25,078:INFO:Dummy Classifier Imported successfully
2024-11-26 10:36:25,078:INFO:Starting cross validation
2024-11-26 10:36:25,100:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 10:36:26,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:26,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:26,130:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:26,130:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:26,141:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:36:26,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:26,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:36:26,554:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:28,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:28,478:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:28,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:28,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:28,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:36:28,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:36:28,549:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:28,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:29,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:29,454:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:29,516:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 10:36:29,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 10:36:29,669:INFO:Calculating mean and std
2024-11-26 10:36:29,669:INFO:Creating metrics dataframe
2024-11-26 10:36:29,700:INFO:Uploading results into container
2024-11-26 10:36:29,702:INFO:Uploading model into container now
2024-11-26 10:36:29,702:INFO:_master_model_container: 14
2024-11-26 10:36:29,702:INFO:_display_container: 2
2024-11-26 10:36:29,702:INFO:DummyClassifier(constant=None, random_state=7496, strategy='prior')
2024-11-26 10:36:29,702:INFO:create_model() successfully completed......................................
2024-11-26 10:36:30,167:INFO:SubProcess create_model() end ==================================
2024-11-26 10:36:30,167:INFO:Creating metrics dataframe
2024-11-26 10:36:30,261:INFO:Initializing create_model()
2024-11-26 10:36:30,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=DummyClassifier(constant=None, random_state=7496, strategy='prior'), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:36:30,261:INFO:Checking exceptions
2024-11-26 10:36:30,292:INFO:Importing libraries
2024-11-26 10:36:30,292:INFO:Copying training dataset
2024-11-26 10:36:30,346:INFO:Defining folds
2024-11-26 10:36:30,346:INFO:Declaring metric variables
2024-11-26 10:36:30,346:INFO:Importing untrained model
2024-11-26 10:36:30,346:INFO:Declaring custom model
2024-11-26 10:36:30,346:INFO:Dummy Classifier Imported successfully
2024-11-26 10:36:30,355:INFO:Cross validation set to False
2024-11-26 10:36:30,355:INFO:Fitting Model
2024-11-26 10:36:30,840:INFO:DummyClassifier(constant=None, random_state=7496, strategy='prior')
2024-11-26 10:36:30,840:INFO:create_model() successfully completed......................................
2024-11-26 10:36:31,311:INFO:_master_model_container: 14
2024-11-26 10:36:31,311:INFO:_display_container: 2
2024-11-26 10:36:31,311:INFO:DummyClassifier(constant=None, random_state=7496, strategy='prior')
2024-11-26 10:36:31,311:INFO:compare_models() successfully completed......................................
2024-11-26 10:36:31,311:INFO:Initializing automl()
2024-11-26 10:36:31,311:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 10:36:31,311:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 10:36:31,311:INFO:Initializing create_model()
2024-11-26 10:36:31,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D18B890>, estimator=None, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 10:36:31,329:INFO:Checking exceptions
2024-11-26 14:56:30,847:INFO:PyCaret ClassificationExperiment
2024-11-26 14:56:30,847:INFO:Logging name: clf-default-name
2024-11-26 14:56:30,847:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 14:56:30,847:INFO:version 3.3.2
2024-11-26 14:56:30,847:INFO:Initializing setup()
2024-11-26 14:56:30,847:INFO:self.USI: 4f25
2024-11-26 14:56:30,847:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 14:56:30,854:INFO:Checking environment
2024-11-26 14:56:30,859:INFO:python_version: 3.11.9
2024-11-26 14:56:30,859:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 14:56:30,860:INFO:machine: AMD64
2024-11-26 14:56:30,861:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 14:56:30,880:INFO:Memory: svmem(total=4293971968, available=849526784, percent=80.2, used=3444445184, free=849526784)
2024-11-26 14:56:30,882:INFO:Physical Core: 2
2024-11-26 14:56:30,882:INFO:Logical Core: 2
2024-11-26 14:56:30,882:INFO:Checking libraries
2024-11-26 14:56:30,884:INFO:System:
2024-11-26 14:56:30,885:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 14:56:30,886:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 14:56:30,886:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 14:56:30,886:INFO:PyCaret required dependencies:
2024-11-26 14:56:30,887:INFO:                 pip: 24.3.1
2024-11-26 14:56:30,887:INFO:          setuptools: 65.5.0
2024-11-26 14:56:30,887:INFO:             pycaret: 3.3.2
2024-11-26 14:56:30,887:INFO:             IPython: 8.26.0
2024-11-26 14:56:30,887:INFO:          ipywidgets: 8.1.5
2024-11-26 14:56:30,887:INFO:                tqdm: 4.66.5
2024-11-26 14:56:30,887:INFO:               numpy: 1.26.4
2024-11-26 14:56:30,887:INFO:              pandas: 2.1.4
2024-11-26 14:56:30,887:INFO:              jinja2: 3.1.4
2024-11-26 14:56:30,887:INFO:               scipy: 1.11.4
2024-11-26 14:56:30,887:INFO:              joblib: 1.3.2
2024-11-26 14:56:30,887:INFO:             sklearn: 1.4.2
2024-11-26 14:56:30,887:INFO:                pyod: 2.0.2
2024-11-26 14:56:30,887:INFO:            imblearn: 0.12.4
2024-11-26 14:56:30,887:INFO:   category_encoders: 2.6.4
2024-11-26 14:56:30,887:INFO:            lightgbm: 4.5.0
2024-11-26 14:56:30,887:INFO:               numba: 0.60.0
2024-11-26 14:56:30,887:INFO:            requests: 2.32.3
2024-11-26 14:56:30,887:INFO:          matplotlib: 3.7.5
2024-11-26 14:56:30,887:INFO:          scikitplot: 0.3.7
2024-11-26 14:56:30,887:INFO:         yellowbrick: 1.5
2024-11-26 14:56:30,887:INFO:              plotly: 5.24.1
2024-11-26 14:56:30,887:INFO:    plotly-resampler: Not installed
2024-11-26 14:56:30,887:INFO:             kaleido: 0.2.1
2024-11-26 14:56:30,887:INFO:           schemdraw: 0.15
2024-11-26 14:56:30,887:INFO:         statsmodels: 0.14.3
2024-11-26 14:56:30,887:INFO:              sktime: 0.26.0
2024-11-26 14:56:30,887:INFO:               tbats: 1.1.3
2024-11-26 14:56:30,887:INFO:            pmdarima: 2.0.4
2024-11-26 14:56:30,887:INFO:              psutil: 6.0.0
2024-11-26 14:56:30,887:INFO:          markupsafe: 3.0.2
2024-11-26 14:56:30,887:INFO:             pickle5: Not installed
2024-11-26 14:56:30,887:INFO:         cloudpickle: 3.0.0
2024-11-26 14:56:30,887:INFO:         deprecation: 2.1.0
2024-11-26 14:56:30,887:INFO:              xxhash: 3.5.0
2024-11-26 14:56:30,887:INFO:           wurlitzer: Not installed
2024-11-26 14:56:30,887:INFO:PyCaret optional dependencies:
2024-11-26 14:56:30,887:INFO:                shap: 0.46.0
2024-11-26 14:56:30,887:INFO:           interpret: Not installed
2024-11-26 14:56:30,887:INFO:                umap: Not installed
2024-11-26 14:56:30,887:INFO:     ydata_profiling: Not installed
2024-11-26 14:56:30,887:INFO:  explainerdashboard: Not installed
2024-11-26 14:56:30,887:INFO:             autoviz: Not installed
2024-11-26 14:56:30,887:INFO:           fairlearn: Not installed
2024-11-26 14:56:30,887:INFO:          deepchecks: Not installed
2024-11-26 14:56:30,911:INFO:             xgboost: Not installed
2024-11-26 14:56:30,911:INFO:            catboost: Not installed
2024-11-26 14:56:30,911:INFO:              kmodes: Not installed
2024-11-26 14:56:30,911:INFO:             mlxtend: Not installed
2024-11-26 14:56:30,911:INFO:       statsforecast: Not installed
2024-11-26 14:56:30,912:INFO:        tune_sklearn: Not installed
2024-11-26 14:56:30,913:INFO:                 ray: Not installed
2024-11-26 14:56:30,913:INFO:            hyperopt: Not installed
2024-11-26 14:56:30,913:INFO:              optuna: 4.1.0
2024-11-26 14:56:30,913:INFO:               skopt: Not installed
2024-11-26 14:56:30,913:INFO:              mlflow: Not installed
2024-11-26 14:56:30,913:INFO:              gradio: Not installed
2024-11-26 14:56:30,913:INFO:             fastapi: Not installed
2024-11-26 14:56:30,913:INFO:             uvicorn: Not installed
2024-11-26 14:56:30,913:INFO:              m2cgen: Not installed
2024-11-26 14:56:30,913:INFO:           evidently: Not installed
2024-11-26 14:56:30,913:INFO:               fugue: Not installed
2024-11-26 14:56:30,913:INFO:           streamlit: Not installed
2024-11-26 14:56:30,913:INFO:             prophet: Not installed
2024-11-26 14:56:30,913:INFO:None
2024-11-26 14:56:30,934:INFO:Set up data.
2024-11-26 14:56:32,248:INFO:Set up folding strategy.
2024-11-26 14:56:32,248:INFO:Set up train/test split.
2024-11-26 14:56:32,557:INFO:Set up index.
2024-11-26 14:56:32,557:INFO:Assigning column types.
2024-11-26 14:56:32,689:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 14:56:33,107:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 14:56:33,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 14:56:33,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:33,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:33,447:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 14:56:33,447:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 14:56:33,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:33,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:33,511:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 14:56:33,682:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 14:56:33,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:33,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:33,825:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 14:56:33,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:33,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:33,869:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 14:56:34,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:34,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:34,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:34,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:34,307:INFO:Preparing preprocessing pipeline...
2024-11-26 14:56:34,322:INFO:Set up label encoding.
2024-11-26 14:56:34,322:INFO:Set up simple imputation.
2024-11-26 14:56:34,760:INFO:Finished creating preprocessing pipeline.
2024-11-26 14:56:34,792:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 14:56:34,792:INFO:Creating final display dataframe.
2024-11-26 14:56:35,463:INFO:Setup _display_container:                     Description             Value
0                    Session id              5010
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              4f25
2024-11-26 14:56:35,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:35,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:35,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:35,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 14:56:35,917:INFO:setup() successfully completed in 5.36s...............
2024-11-26 14:56:35,932:INFO:Initializing compare_models()
2024-11-26 14:56:35,932:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 14:56:35,932:INFO:Checking exceptions
2024-11-26 14:56:35,995:INFO:Preparing display monitor
2024-11-26 14:56:36,252:INFO:Initializing Logistic Regression
2024-11-26 14:56:36,255:INFO:Total runtime is 5.2368640899658204e-05 minutes
2024-11-26 14:56:36,279:INFO:SubProcess create_model() called ==================================
2024-11-26 14:56:36,281:INFO:Initializing create_model()
2024-11-26 14:56:36,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:56:36,282:INFO:Checking exceptions
2024-11-26 14:56:36,282:INFO:Importing libraries
2024-11-26 14:56:36,283:INFO:Copying training dataset
2024-11-26 14:56:36,435:INFO:Defining folds
2024-11-26 14:56:36,435:INFO:Declaring metric variables
2024-11-26 14:56:36,448:INFO:Importing untrained model
2024-11-26 14:56:36,448:INFO:Logistic Regression Imported successfully
2024-11-26 14:56:36,494:INFO:Starting cross validation
2024-11-26 14:56:36,494:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:57:39,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:39,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:39,940:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:39,968:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:40,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:40,021:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:41,234:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:41,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:41,359:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:41,395:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:41,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:41,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:42,170:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:42,237:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:42,295:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:42,399:INFO:Calculating mean and std
2024-11-26 14:57:42,399:INFO:Creating metrics dataframe
2024-11-26 14:57:42,399:INFO:Uploading results into container
2024-11-26 14:57:42,415:INFO:Uploading model into container now
2024-11-26 14:57:42,417:INFO:_master_model_container: 1
2024-11-26 14:57:42,417:INFO:_display_container: 2
2024-11-26 14:57:42,417:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5010, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 14:57:42,417:INFO:create_model() successfully completed......................................
2024-11-26 14:57:44,862:INFO:SubProcess create_model() end ==================================
2024-11-26 14:57:44,862:INFO:Creating metrics dataframe
2024-11-26 14:57:44,876:INFO:Initializing K Neighbors Classifier
2024-11-26 14:57:44,876:INFO:Total runtime is 1.1437289555867514 minutes
2024-11-26 14:57:44,912:INFO:SubProcess create_model() called ==================================
2024-11-26 14:57:44,913:INFO:Initializing create_model()
2024-11-26 14:57:44,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:57:44,913:INFO:Checking exceptions
2024-11-26 14:57:44,914:INFO:Importing libraries
2024-11-26 14:57:44,914:INFO:Copying training dataset
2024-11-26 14:57:45,088:INFO:Defining folds
2024-11-26 14:57:45,088:INFO:Declaring metric variables
2024-11-26 14:57:45,101:INFO:Importing untrained model
2024-11-26 14:57:45,149:INFO:K Neighbors Classifier Imported successfully
2024-11-26 14:57:45,200:INFO:Starting cross validation
2024-11-26 14:57:45,203:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:57:51,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:51,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:51,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:51,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:51,350:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:51,441:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:54,782:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:54,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:54,886:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:54,944:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:54,991:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:55,059:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:57,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:57,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:58,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:58,155:INFO:Calculating mean and std
2024-11-26 14:57:58,155:INFO:Creating metrics dataframe
2024-11-26 14:57:58,155:INFO:Uploading results into container
2024-11-26 14:57:58,155:INFO:Uploading model into container now
2024-11-26 14:57:58,155:INFO:_master_model_container: 2
2024-11-26 14:57:58,155:INFO:_display_container: 2
2024-11-26 14:57:58,155:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 14:57:58,155:INFO:create_model() successfully completed......................................
2024-11-26 14:57:58,577:INFO:SubProcess create_model() end ==================================
2024-11-26 14:57:58,577:INFO:Creating metrics dataframe
2024-11-26 14:57:58,620:INFO:Initializing Naive Bayes
2024-11-26 14:57:58,622:INFO:Total runtime is 1.372805142402649 minutes
2024-11-26 14:57:58,641:INFO:SubProcess create_model() called ==================================
2024-11-26 14:57:58,641:INFO:Initializing create_model()
2024-11-26 14:57:58,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:57:58,642:INFO:Checking exceptions
2024-11-26 14:57:58,642:INFO:Importing libraries
2024-11-26 14:57:58,642:INFO:Copying training dataset
2024-11-26 14:57:58,775:INFO:Defining folds
2024-11-26 14:57:58,776:INFO:Declaring metric variables
2024-11-26 14:57:58,785:INFO:Importing untrained model
2024-11-26 14:57:58,819:INFO:Naive Bayes Imported successfully
2024-11-26 14:57:58,833:INFO:Starting cross validation
2024-11-26 14:57:58,833:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:57:59,258:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:59,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:59,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:59,326:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:59,434:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:59,434:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:59,835:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:59,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:57:59,968:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:00,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:00,158:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:00,242:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:00,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:00,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:01,268:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:01,456:INFO:Calculating mean and std
2024-11-26 14:58:01,456:INFO:Creating metrics dataframe
2024-11-26 14:58:01,479:INFO:Uploading results into container
2024-11-26 14:58:01,481:INFO:Uploading model into container now
2024-11-26 14:58:01,490:INFO:_master_model_container: 3
2024-11-26 14:58:01,491:INFO:_display_container: 2
2024-11-26 14:58:01,492:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 14:58:01,493:INFO:create_model() successfully completed......................................
2024-11-26 14:58:01,883:INFO:SubProcess create_model() end ==================================
2024-11-26 14:58:01,883:INFO:Creating metrics dataframe
2024-11-26 14:58:01,898:INFO:Initializing Decision Tree Classifier
2024-11-26 14:58:01,898:INFO:Total runtime is 1.4274248083432517 minutes
2024-11-26 14:58:01,907:INFO:SubProcess create_model() called ==================================
2024-11-26 14:58:01,907:INFO:Initializing create_model()
2024-11-26 14:58:01,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:58:01,907:INFO:Checking exceptions
2024-11-26 14:58:01,907:INFO:Importing libraries
2024-11-26 14:58:01,907:INFO:Copying training dataset
2024-11-26 14:58:01,997:INFO:Defining folds
2024-11-26 14:58:01,997:INFO:Declaring metric variables
2024-11-26 14:58:02,000:INFO:Importing untrained model
2024-11-26 14:58:02,000:INFO:Decision Tree Classifier Imported successfully
2024-11-26 14:58:02,035:INFO:Starting cross validation
2024-11-26 14:58:02,035:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:58:05,653:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:05,801:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:05,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:05,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:05,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:05,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:08,012:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:08,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:08,235:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:08,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:08,331:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:08,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:09,986:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:10,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:10,115:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:10,228:INFO:Calculating mean and std
2024-11-26 14:58:10,228:INFO:Creating metrics dataframe
2024-11-26 14:58:10,228:INFO:Uploading results into container
2024-11-26 14:58:10,228:INFO:Uploading model into container now
2024-11-26 14:58:10,228:INFO:_master_model_container: 4
2024-11-26 14:58:10,228:INFO:_display_container: 2
2024-11-26 14:58:10,228:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5010, splitter='best')
2024-11-26 14:58:10,228:INFO:create_model() successfully completed......................................
2024-11-26 14:58:10,575:INFO:SubProcess create_model() end ==================================
2024-11-26 14:58:10,575:INFO:Creating metrics dataframe
2024-11-26 14:58:10,620:INFO:Initializing SVM - Linear Kernel
2024-11-26 14:58:10,620:INFO:Total runtime is 1.5727950414021812 minutes
2024-11-26 14:58:10,635:INFO:SubProcess create_model() called ==================================
2024-11-26 14:58:10,635:INFO:Initializing create_model()
2024-11-26 14:58:10,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:58:10,635:INFO:Checking exceptions
2024-11-26 14:58:10,660:INFO:Importing libraries
2024-11-26 14:58:10,662:INFO:Copying training dataset
2024-11-26 14:58:10,776:INFO:Defining folds
2024-11-26 14:58:10,776:INFO:Declaring metric variables
2024-11-26 14:58:10,785:INFO:Importing untrained model
2024-11-26 14:58:10,791:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 14:58:10,822:INFO:Starting cross validation
2024-11-26 14:58:10,822:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:58:11,747:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:11,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:11,984:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:11,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:12,145:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:12,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:13,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:13,900:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:13,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:14,123:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:14,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:14,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:14,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:14,599:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:14,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:14,760:INFO:Calculating mean and std
2024-11-26 14:58:14,796:INFO:Creating metrics dataframe
2024-11-26 14:58:14,801:INFO:Uploading results into container
2024-11-26 14:58:14,802:INFO:Uploading model into container now
2024-11-26 14:58:14,806:INFO:_master_model_container: 5
2024-11-26 14:58:14,806:INFO:_display_container: 2
2024-11-26 14:58:14,806:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5010, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 14:58:14,806:INFO:create_model() successfully completed......................................
2024-11-26 14:58:15,153:INFO:SubProcess create_model() end ==================================
2024-11-26 14:58:15,153:INFO:Creating metrics dataframe
2024-11-26 14:58:15,179:INFO:Initializing Ridge Classifier
2024-11-26 14:58:15,179:INFO:Total runtime is 1.648784403006236 minutes
2024-11-26 14:58:15,199:INFO:SubProcess create_model() called ==================================
2024-11-26 14:58:15,199:INFO:Initializing create_model()
2024-11-26 14:58:15,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:58:15,199:INFO:Checking exceptions
2024-11-26 14:58:15,199:INFO:Importing libraries
2024-11-26 14:58:15,199:INFO:Copying training dataset
2024-11-26 14:58:15,356:INFO:Defining folds
2024-11-26 14:58:15,356:INFO:Declaring metric variables
2024-11-26 14:58:15,367:INFO:Importing untrained model
2024-11-26 14:58:15,389:INFO:Ridge Classifier Imported successfully
2024-11-26 14:58:15,421:INFO:Starting cross validation
2024-11-26 14:58:15,427:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:58:15,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:15,774:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:15,862:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:15,862:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:15,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:15,918:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:16,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:16,319:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:16,375:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:16,428:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:16,477:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:16,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:17,133:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:17,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:17,260:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:17,864:INFO:Calculating mean and std
2024-11-26 14:58:17,866:INFO:Creating metrics dataframe
2024-11-26 14:58:17,869:INFO:Uploading results into container
2024-11-26 14:58:17,870:INFO:Uploading model into container now
2024-11-26 14:58:17,871:INFO:_master_model_container: 6
2024-11-26 14:58:17,871:INFO:_display_container: 2
2024-11-26 14:58:17,871:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5010, solver='auto',
                tol=0.0001)
2024-11-26 14:58:17,872:INFO:create_model() successfully completed......................................
2024-11-26 14:58:18,333:INFO:SubProcess create_model() end ==================================
2024-11-26 14:58:18,333:INFO:Creating metrics dataframe
2024-11-26 14:58:18,366:INFO:Initializing Random Forest Classifier
2024-11-26 14:58:18,366:INFO:Total runtime is 1.7018947641054791 minutes
2024-11-26 14:58:18,366:INFO:SubProcess create_model() called ==================================
2024-11-26 14:58:18,366:INFO:Initializing create_model()
2024-11-26 14:58:18,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:58:18,366:INFO:Checking exceptions
2024-11-26 14:58:18,366:INFO:Importing libraries
2024-11-26 14:58:18,366:INFO:Copying training dataset
2024-11-26 14:58:18,533:INFO:Defining folds
2024-11-26 14:58:18,533:INFO:Declaring metric variables
2024-11-26 14:58:18,553:INFO:Importing untrained model
2024-11-26 14:58:18,581:INFO:Random Forest Classifier Imported successfully
2024-11-26 14:58:18,581:INFO:Starting cross validation
2024-11-26 14:58:18,581:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:58:43,087:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:43,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:43,285:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:43,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:43,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:58:43,405:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:07,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:07,630:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:07,713:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:08,003:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:08,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:08,251:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:18,644:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:18,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:18,792:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:18,862:INFO:Calculating mean and std
2024-11-26 14:59:18,934:INFO:Creating metrics dataframe
2024-11-26 14:59:18,938:INFO:Uploading results into container
2024-11-26 14:59:18,938:INFO:Uploading model into container now
2024-11-26 14:59:18,938:INFO:_master_model_container: 7
2024-11-26 14:59:18,938:INFO:_display_container: 2
2024-11-26 14:59:18,938:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5010, verbose=0,
                       warm_start=False)
2024-11-26 14:59:18,938:INFO:create_model() successfully completed......................................
2024-11-26 14:59:19,390:INFO:SubProcess create_model() end ==================================
2024-11-26 14:59:19,390:INFO:Creating metrics dataframe
2024-11-26 14:59:19,436:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 14:59:19,437:INFO:Total runtime is 2.7197482585906982 minutes
2024-11-26 14:59:19,453:INFO:SubProcess create_model() called ==================================
2024-11-26 14:59:19,453:INFO:Initializing create_model()
2024-11-26 14:59:19,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:59:19,453:INFO:Checking exceptions
2024-11-26 14:59:19,453:INFO:Importing libraries
2024-11-26 14:59:19,453:INFO:Copying training dataset
2024-11-26 14:59:19,640:INFO:Defining folds
2024-11-26 14:59:19,640:INFO:Declaring metric variables
2024-11-26 14:59:19,688:INFO:Importing untrained model
2024-11-26 14:59:19,688:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 14:59:19,703:INFO:Starting cross validation
2024-11-26 14:59:19,703:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:59:20,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 14:59:20,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 14:59:20,376:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:20,398:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:20,439:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:20,462:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:20,497:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:20,544:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:20,927:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 14:59:21,209:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 14:59:21,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:21,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:21,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:21,665:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:21,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:21,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:22,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 14:59:22,846:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:22,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:23,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:23,098:INFO:Calculating mean and std
2024-11-26 14:59:23,098:INFO:Creating metrics dataframe
2024-11-26 14:59:23,098:INFO:Uploading results into container
2024-11-26 14:59:23,116:INFO:Uploading model into container now
2024-11-26 14:59:23,135:INFO:_master_model_container: 8
2024-11-26 14:59:23,135:INFO:_display_container: 2
2024-11-26 14:59:23,136:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 14:59:23,137:INFO:create_model() successfully completed......................................
2024-11-26 14:59:23,638:INFO:SubProcess create_model() end ==================================
2024-11-26 14:59:23,638:INFO:Creating metrics dataframe
2024-11-26 14:59:23,659:INFO:Initializing Ada Boost Classifier
2024-11-26 14:59:23,659:INFO:Total runtime is 2.790116612116496 minutes
2024-11-26 14:59:23,673:INFO:SubProcess create_model() called ==================================
2024-11-26 14:59:23,673:INFO:Initializing create_model()
2024-11-26 14:59:23,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:59:23,673:INFO:Checking exceptions
2024-11-26 14:59:23,673:INFO:Importing libraries
2024-11-26 14:59:23,673:INFO:Copying training dataset
2024-11-26 14:59:23,974:INFO:Defining folds
2024-11-26 14:59:23,974:INFO:Declaring metric variables
2024-11-26 14:59:24,013:INFO:Importing untrained model
2024-11-26 14:59:24,039:INFO:Ada Boost Classifier Imported successfully
2024-11-26 14:59:24,137:INFO:Starting cross validation
2024-11-26 14:59:24,137:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 14:59:24,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 14:59:24,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 14:59:31,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:31,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:31,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:31,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:31,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:31,456:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:31,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 14:59:31,702:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 14:59:38,218:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:38,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:38,356:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:38,380:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:38,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:38,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:38,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 14:59:43,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:43,658:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:43,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 14:59:43,857:INFO:Calculating mean and std
2024-11-26 14:59:43,857:INFO:Creating metrics dataframe
2024-11-26 14:59:43,857:INFO:Uploading results into container
2024-11-26 14:59:43,857:INFO:Uploading model into container now
2024-11-26 14:59:43,857:INFO:_master_model_container: 9
2024-11-26 14:59:43,857:INFO:_display_container: 2
2024-11-26 14:59:43,857:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5010)
2024-11-26 14:59:43,857:INFO:create_model() successfully completed......................................
2024-11-26 14:59:44,236:INFO:SubProcess create_model() end ==================================
2024-11-26 14:59:44,236:INFO:Creating metrics dataframe
2024-11-26 14:59:44,322:INFO:Initializing Gradient Boosting Classifier
2024-11-26 14:59:44,322:INFO:Total runtime is 3.134506118297577 minutes
2024-11-26 14:59:44,334:INFO:SubProcess create_model() called ==================================
2024-11-26 14:59:44,334:INFO:Initializing create_model()
2024-11-26 14:59:44,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 14:59:44,334:INFO:Checking exceptions
2024-11-26 14:59:44,334:INFO:Importing libraries
2024-11-26 14:59:44,334:INFO:Copying training dataset
2024-11-26 14:59:44,623:INFO:Defining folds
2024-11-26 14:59:44,623:INFO:Declaring metric variables
2024-11-26 14:59:44,689:INFO:Importing untrained model
2024-11-26 14:59:44,717:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 14:59:44,796:INFO:Starting cross validation
2024-11-26 14:59:44,796:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:00:16,165:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:16,217:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:16,296:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:16,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:16,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:16,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:42,801:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:42,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:42,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:43,427:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:43,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:00:43,720:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:14,645:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:14,698:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:14,765:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:14,896:INFO:Calculating mean and std
2024-11-26 15:01:14,896:INFO:Creating metrics dataframe
2024-11-26 15:01:14,906:INFO:Uploading results into container
2024-11-26 15:01:14,906:INFO:Uploading model into container now
2024-11-26 15:01:14,906:INFO:_master_model_container: 10
2024-11-26 15:01:14,906:INFO:_display_container: 2
2024-11-26 15:01:14,906:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5010, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 15:01:14,906:INFO:create_model() successfully completed......................................
2024-11-26 15:01:15,328:INFO:SubProcess create_model() end ==================================
2024-11-26 15:01:15,328:INFO:Creating metrics dataframe
2024-11-26 15:01:15,360:INFO:Initializing Linear Discriminant Analysis
2024-11-26 15:01:15,360:INFO:Total runtime is 4.651794187227885 minutes
2024-11-26 15:01:15,360:INFO:SubProcess create_model() called ==================================
2024-11-26 15:01:15,360:INFO:Initializing create_model()
2024-11-26 15:01:15,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:01:15,360:INFO:Checking exceptions
2024-11-26 15:01:15,360:INFO:Importing libraries
2024-11-26 15:01:15,360:INFO:Copying training dataset
2024-11-26 15:01:15,453:INFO:Defining folds
2024-11-26 15:01:15,453:INFO:Declaring metric variables
2024-11-26 15:01:15,515:INFO:Importing untrained model
2024-11-26 15:01:15,515:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 15:01:15,578:INFO:Starting cross validation
2024-11-26 15:01:15,578:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:01:16,014:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,120:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,136:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,183:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,199:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:16,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:17,033:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:17,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:17,594:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:17,824:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:18,256:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:18,357:INFO:Calculating mean and std
2024-11-26 15:01:18,357:INFO:Creating metrics dataframe
2024-11-26 15:01:18,389:INFO:Uploading results into container
2024-11-26 15:01:18,392:INFO:Uploading model into container now
2024-11-26 15:01:18,403:INFO:_master_model_container: 11
2024-11-26 15:01:18,404:INFO:_display_container: 2
2024-11-26 15:01:18,405:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 15:01:18,405:INFO:create_model() successfully completed......................................
2024-11-26 15:01:18,826:INFO:SubProcess create_model() end ==================================
2024-11-26 15:01:18,826:INFO:Creating metrics dataframe
2024-11-26 15:01:18,858:INFO:Initializing Extra Trees Classifier
2024-11-26 15:01:18,858:INFO:Total runtime is 4.710093152523041 minutes
2024-11-26 15:01:18,873:INFO:SubProcess create_model() called ==================================
2024-11-26 15:01:18,889:INFO:Initializing create_model()
2024-11-26 15:01:18,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:01:18,889:INFO:Checking exceptions
2024-11-26 15:01:18,889:INFO:Importing libraries
2024-11-26 15:01:18,889:INFO:Copying training dataset
2024-11-26 15:01:18,998:INFO:Defining folds
2024-11-26 15:01:18,998:INFO:Declaring metric variables
2024-11-26 15:01:18,998:INFO:Importing untrained model
2024-11-26 15:01:19,029:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:01:19,029:INFO:Starting cross validation
2024-11-26 15:01:19,049:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:01:38,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:38,359:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:38,516:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:38,547:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:38,580:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:38,596:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:58,088:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:58,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:58,616:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:58,683:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:58,901:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:01:59,086:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:08,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:08,324:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:08,421:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:08,699:INFO:Calculating mean and std
2024-11-26 15:02:08,714:INFO:Creating metrics dataframe
2024-11-26 15:02:08,762:INFO:Uploading results into container
2024-11-26 15:02:08,763:INFO:Uploading model into container now
2024-11-26 15:02:08,763:INFO:_master_model_container: 12
2024-11-26 15:02:08,763:INFO:_display_container: 2
2024-11-26 15:02:08,763:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5010, verbose=0,
                     warm_start=False)
2024-11-26 15:02:08,763:INFO:create_model() successfully completed......................................
2024-11-26 15:02:09,202:INFO:SubProcess create_model() end ==================================
2024-11-26 15:02:09,202:INFO:Creating metrics dataframe
2024-11-26 15:02:09,234:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 15:02:09,234:INFO:Total runtime is 5.549706470966339 minutes
2024-11-26 15:02:09,263:INFO:SubProcess create_model() called ==================================
2024-11-26 15:02:09,265:INFO:Initializing create_model()
2024-11-26 15:02:09,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:02:09,266:INFO:Checking exceptions
2024-11-26 15:02:09,266:INFO:Importing libraries
2024-11-26 15:02:09,266:INFO:Copying training dataset
2024-11-26 15:02:09,370:INFO:Defining folds
2024-11-26 15:02:09,370:INFO:Declaring metric variables
2024-11-26 15:02:09,402:INFO:Importing untrained model
2024-11-26 15:02:09,415:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 15:02:09,527:INFO:Starting cross validation
2024-11-26 15:02:09,605:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:02:15,570:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:15,640:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:15,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:16,187:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:16,330:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:16,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:19,132:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:19,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:19,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:19,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:20,073:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:20,135:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:22,265:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:22,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:22,451:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:22,538:INFO:Calculating mean and std
2024-11-26 15:02:22,538:INFO:Creating metrics dataframe
2024-11-26 15:02:22,538:INFO:Uploading results into container
2024-11-26 15:02:22,538:INFO:Uploading model into container now
2024-11-26 15:02:22,557:INFO:_master_model_container: 13
2024-11-26 15:02:22,559:INFO:_display_container: 2
2024-11-26 15:02:22,562:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5010, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 15:02:22,562:INFO:create_model() successfully completed......................................
2024-11-26 15:02:23,273:INFO:SubProcess create_model() end ==================================
2024-11-26 15:02:23,273:INFO:Creating metrics dataframe
2024-11-26 15:02:23,288:INFO:Initializing Dummy Classifier
2024-11-26 15:02:23,288:INFO:Total runtime is 5.7839325070381165 minutes
2024-11-26 15:02:23,288:INFO:SubProcess create_model() called ==================================
2024-11-26 15:02:23,288:INFO:Initializing create_model()
2024-11-26 15:02:23,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F9D04A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:02:23,288:INFO:Checking exceptions
2024-11-26 15:02:23,288:INFO:Importing libraries
2024-11-26 15:02:23,288:INFO:Copying training dataset
2024-11-26 15:02:23,460:INFO:Defining folds
2024-11-26 15:02:23,460:INFO:Declaring metric variables
2024-11-26 15:02:23,482:INFO:Importing untrained model
2024-11-26 15:02:23,601:INFO:Dummy Classifier Imported successfully
2024-11-26 15:02:23,648:INFO:Starting cross validation
2024-11-26 15:02:23,648:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:02:23,951:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:23,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,108:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,108:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,183:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:02:24,183:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:02:24,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,675:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,675:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:02:24,788:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:02:24,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:24,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:25,391:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:25,550:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:25,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:02:25,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:02:25,880:INFO:Calculating mean and std
2024-11-26 15:02:25,973:INFO:Creating metrics dataframe
2024-11-26 15:02:25,973:INFO:Uploading results into container
2024-11-26 15:02:25,973:INFO:Uploading model into container now
2024-11-26 15:02:25,973:INFO:_master_model_container: 14
2024-11-26 15:02:25,973:INFO:_display_container: 2
2024-11-26 15:02:25,973:INFO:DummyClassifier(constant=None, random_state=5010, strategy='prior')
2024-11-26 15:02:25,973:INFO:create_model() successfully completed......................................
2024-11-26 15:02:26,599:INFO:SubProcess create_model() end ==================================
2024-11-26 15:02:26,599:INFO:Creating metrics dataframe
2024-11-26 15:02:26,661:INFO:Initializing create_model()
2024-11-26 15:02:26,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5010, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:02:26,661:INFO:Checking exceptions
2024-11-26 15:02:26,661:INFO:Importing libraries
2024-11-26 15:02:26,661:INFO:Copying training dataset
2024-11-26 15:02:26,739:INFO:Defining folds
2024-11-26 15:02:26,739:INFO:Declaring metric variables
2024-11-26 15:02:26,739:INFO:Importing untrained model
2024-11-26 15:02:26,739:INFO:Declaring custom model
2024-11-26 15:02:26,739:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:02:26,739:INFO:Cross validation set to False
2024-11-26 15:02:26,739:INFO:Fitting Model
2024-11-26 15:02:37,420:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5010, verbose=0,
                     warm_start=False)
2024-11-26 15:02:37,420:INFO:create_model() successfully completed......................................
2024-11-26 15:02:38,201:INFO:_master_model_container: 14
2024-11-26 15:02:38,201:INFO:_display_container: 2
2024-11-26 15:02:38,201:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5010, verbose=0,
                     warm_start=False)
2024-11-26 15:02:38,201:INFO:compare_models() successfully completed......................................
2024-11-26 15:02:38,201:INFO:Initializing automl()
2024-11-26 15:02:38,201:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 15:02:38,201:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 15:02:38,201:INFO:Initializing create_model()
2024-11-26 15:02:38,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FAB7A8250>, estimator=None, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:02:38,201:INFO:Checking exceptions
2024-11-26 15:04:23,208:INFO:PyCaret ClassificationExperiment
2024-11-26 15:04:23,208:INFO:Logging name: clf-default-name
2024-11-26 15:04:23,208:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 15:04:23,208:INFO:version 3.3.2
2024-11-26 15:04:23,208:INFO:Initializing setup()
2024-11-26 15:04:23,208:INFO:self.USI: 91d5
2024-11-26 15:04:23,208:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 15:04:23,208:INFO:Checking environment
2024-11-26 15:04:23,209:INFO:python_version: 3.11.9
2024-11-26 15:04:23,209:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 15:04:23,209:INFO:machine: AMD64
2024-11-26 15:04:23,209:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 15:04:23,213:INFO:Memory: svmem(total=4293971968, available=739897344, percent=82.8, used=3554074624, free=739897344)
2024-11-26 15:04:23,213:INFO:Physical Core: 2
2024-11-26 15:04:23,214:INFO:Logical Core: 2
2024-11-26 15:04:23,214:INFO:Checking libraries
2024-11-26 15:04:23,214:INFO:System:
2024-11-26 15:04:23,214:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 15:04:23,214:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 15:04:23,214:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 15:04:23,214:INFO:PyCaret required dependencies:
2024-11-26 15:04:23,214:INFO:                 pip: 24.3.1
2024-11-26 15:04:23,214:INFO:          setuptools: 65.5.0
2024-11-26 15:04:23,214:INFO:             pycaret: 3.3.2
2024-11-26 15:04:23,214:INFO:             IPython: 8.26.0
2024-11-26 15:04:23,215:INFO:          ipywidgets: 8.1.5
2024-11-26 15:04:23,215:INFO:                tqdm: 4.66.5
2024-11-26 15:04:23,215:INFO:               numpy: 1.26.4
2024-11-26 15:04:23,215:INFO:              pandas: 2.1.4
2024-11-26 15:04:23,215:INFO:              jinja2: 3.1.4
2024-11-26 15:04:23,215:INFO:               scipy: 1.11.4
2024-11-26 15:04:23,215:INFO:              joblib: 1.3.2
2024-11-26 15:04:23,215:INFO:             sklearn: 1.4.2
2024-11-26 15:04:23,215:INFO:                pyod: 2.0.2
2024-11-26 15:04:23,215:INFO:            imblearn: 0.12.4
2024-11-26 15:04:23,215:INFO:   category_encoders: 2.6.4
2024-11-26 15:04:23,215:INFO:            lightgbm: 4.5.0
2024-11-26 15:04:23,215:INFO:               numba: 0.60.0
2024-11-26 15:04:23,215:INFO:            requests: 2.32.3
2024-11-26 15:04:23,215:INFO:          matplotlib: 3.7.5
2024-11-26 15:04:23,215:INFO:          scikitplot: 0.3.7
2024-11-26 15:04:23,215:INFO:         yellowbrick: 1.5
2024-11-26 15:04:23,215:INFO:              plotly: 5.24.1
2024-11-26 15:04:23,215:INFO:    plotly-resampler: Not installed
2024-11-26 15:04:23,216:INFO:             kaleido: 0.2.1
2024-11-26 15:04:23,216:INFO:           schemdraw: 0.15
2024-11-26 15:04:23,216:INFO:         statsmodels: 0.14.3
2024-11-26 15:04:23,216:INFO:              sktime: 0.26.0
2024-11-26 15:04:23,216:INFO:               tbats: 1.1.3
2024-11-26 15:04:23,217:INFO:            pmdarima: 2.0.4
2024-11-26 15:04:23,217:INFO:              psutil: 6.0.0
2024-11-26 15:04:23,217:INFO:          markupsafe: 3.0.2
2024-11-26 15:04:23,217:INFO:             pickle5: Not installed
2024-11-26 15:04:23,217:INFO:         cloudpickle: 3.0.0
2024-11-26 15:04:23,217:INFO:         deprecation: 2.1.0
2024-11-26 15:04:23,217:INFO:              xxhash: 3.5.0
2024-11-26 15:04:23,217:INFO:           wurlitzer: Not installed
2024-11-26 15:04:23,217:INFO:PyCaret optional dependencies:
2024-11-26 15:04:23,217:INFO:                shap: 0.46.0
2024-11-26 15:04:23,217:INFO:           interpret: Not installed
2024-11-26 15:04:23,217:INFO:                umap: Not installed
2024-11-26 15:04:23,217:INFO:     ydata_profiling: Not installed
2024-11-26 15:04:23,217:INFO:  explainerdashboard: Not installed
2024-11-26 15:04:23,217:INFO:             autoviz: Not installed
2024-11-26 15:04:23,217:INFO:           fairlearn: Not installed
2024-11-26 15:04:23,217:INFO:          deepchecks: Not installed
2024-11-26 15:04:23,217:INFO:             xgboost: Not installed
2024-11-26 15:04:23,217:INFO:            catboost: Not installed
2024-11-26 15:04:23,217:INFO:              kmodes: Not installed
2024-11-26 15:04:23,217:INFO:             mlxtend: Not installed
2024-11-26 15:04:23,217:INFO:       statsforecast: Not installed
2024-11-26 15:04:23,217:INFO:        tune_sklearn: Not installed
2024-11-26 15:04:23,218:INFO:                 ray: Not installed
2024-11-26 15:04:23,218:INFO:            hyperopt: Not installed
2024-11-26 15:04:23,218:INFO:              optuna: 4.1.0
2024-11-26 15:04:23,218:INFO:               skopt: Not installed
2024-11-26 15:04:23,218:INFO:              mlflow: Not installed
2024-11-26 15:04:23,218:INFO:              gradio: Not installed
2024-11-26 15:04:23,218:INFO:             fastapi: Not installed
2024-11-26 15:04:23,219:INFO:             uvicorn: Not installed
2024-11-26 15:04:23,219:INFO:              m2cgen: Not installed
2024-11-26 15:04:23,219:INFO:           evidently: Not installed
2024-11-26 15:04:23,219:INFO:               fugue: Not installed
2024-11-26 15:04:23,219:INFO:           streamlit: Not installed
2024-11-26 15:04:23,219:INFO:             prophet: Not installed
2024-11-26 15:04:23,219:INFO:None
2024-11-26 15:04:23,219:INFO:Set up data.
2024-11-26 15:04:23,568:INFO:Set up folding strategy.
2024-11-26 15:04:23,568:INFO:Set up train/test split.
2024-11-26 15:04:23,652:INFO:Set up index.
2024-11-26 15:04:23,652:INFO:Assigning column types.
2024-11-26 15:04:23,746:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 15:04:23,933:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 15:04:23,933:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:04:23,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:23,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:24,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 15:04:24,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:04:24,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:24,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:24,152:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 15:04:24,407:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:04:25,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:25,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:25,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:04:25,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:25,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:25,339:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 15:04:25,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:25,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:26,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:26,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:26,465:INFO:Preparing preprocessing pipeline...
2024-11-26 15:04:26,496:INFO:Set up label encoding.
2024-11-26 15:04:26,496:INFO:Set up simple imputation.
2024-11-26 15:04:26,699:INFO:Finished creating preprocessing pipeline.
2024-11-26 15:04:26,730:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 15:04:26,731:INFO:Creating final display dataframe.
2024-11-26 15:04:27,403:INFO:Setup _display_container:                     Description             Value
0                    Session id               311
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              91d5
2024-11-26 15:04:27,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:27,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:28,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:28,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:04:28,106:INFO:setup() successfully completed in 4.95s...............
2024-11-26 15:04:28,106:INFO:Initializing compare_models()
2024-11-26 15:04:28,106:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 15:04:28,106:INFO:Checking exceptions
2024-11-26 15:04:28,152:INFO:Preparing display monitor
2024-11-26 15:04:28,433:INFO:Initializing Logistic Regression
2024-11-26 15:04:28,433:INFO:Total runtime is 0.0 minutes
2024-11-26 15:04:28,433:INFO:SubProcess create_model() called ==================================
2024-11-26 15:04:28,433:INFO:Initializing create_model()
2024-11-26 15:04:28,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:04:28,433:INFO:Checking exceptions
2024-11-26 15:04:28,433:INFO:Importing libraries
2024-11-26 15:04:28,433:INFO:Copying training dataset
2024-11-26 15:04:28,700:INFO:Defining folds
2024-11-26 15:04:28,700:INFO:Declaring metric variables
2024-11-26 15:04:28,714:INFO:Importing untrained model
2024-11-26 15:04:28,739:INFO:Logistic Regression Imported successfully
2024-11-26 15:04:28,808:INFO:Starting cross validation
2024-11-26 15:04:28,808:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:04:30,137:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:30,497:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:30,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:30,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:30,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:30,994:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:32,486:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:32,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:32,590:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:32,616:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:32,675:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:32,728:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:33,097:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:33,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:33,179:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:33,284:INFO:Calculating mean and std
2024-11-26 15:04:33,288:INFO:Creating metrics dataframe
2024-11-26 15:04:33,306:INFO:Uploading results into container
2024-11-26 15:04:33,310:INFO:Uploading model into container now
2024-11-26 15:04:33,318:INFO:_master_model_container: 1
2024-11-26 15:04:33,318:INFO:_display_container: 2
2024-11-26 15:04:33,319:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=311, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 15:04:33,319:INFO:create_model() successfully completed......................................
2024-11-26 15:04:33,632:INFO:SubProcess create_model() end ==================================
2024-11-26 15:04:33,632:INFO:Creating metrics dataframe
2024-11-26 15:04:33,655:INFO:Initializing K Neighbors Classifier
2024-11-26 15:04:33,655:INFO:Total runtime is 0.08703516721725464 minutes
2024-11-26 15:04:33,663:INFO:SubProcess create_model() called ==================================
2024-11-26 15:04:33,663:INFO:Initializing create_model()
2024-11-26 15:04:33,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:04:33,663:INFO:Checking exceptions
2024-11-26 15:04:33,663:INFO:Importing libraries
2024-11-26 15:04:33,663:INFO:Copying training dataset
2024-11-26 15:04:33,750:INFO:Defining folds
2024-11-26 15:04:33,750:INFO:Declaring metric variables
2024-11-26 15:04:33,757:INFO:Importing untrained model
2024-11-26 15:04:33,786:INFO:K Neighbors Classifier Imported successfully
2024-11-26 15:04:33,814:INFO:Starting cross validation
2024-11-26 15:04:33,815:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:04:37,510:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:37,556:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:37,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:37,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:37,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:37,712:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:40,635:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:40,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:40,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:40,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:40,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:40,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:43,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:43,172:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:43,199:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:43,301:INFO:Calculating mean and std
2024-11-26 15:04:43,301:INFO:Creating metrics dataframe
2024-11-26 15:04:43,301:INFO:Uploading results into container
2024-11-26 15:04:43,301:INFO:Uploading model into container now
2024-11-26 15:04:43,301:INFO:_master_model_container: 2
2024-11-26 15:04:43,301:INFO:_display_container: 2
2024-11-26 15:04:43,314:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 15:04:43,314:INFO:create_model() successfully completed......................................
2024-11-26 15:04:43,681:INFO:SubProcess create_model() end ==================================
2024-11-26 15:04:43,681:INFO:Creating metrics dataframe
2024-11-26 15:04:43,705:INFO:Initializing Naive Bayes
2024-11-26 15:04:43,705:INFO:Total runtime is 0.25453745524088545 minutes
2024-11-26 15:04:43,705:INFO:SubProcess create_model() called ==================================
2024-11-26 15:04:43,705:INFO:Initializing create_model()
2024-11-26 15:04:43,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:04:43,705:INFO:Checking exceptions
2024-11-26 15:04:43,705:INFO:Importing libraries
2024-11-26 15:04:43,705:INFO:Copying training dataset
2024-11-26 15:04:43,818:INFO:Defining folds
2024-11-26 15:04:43,818:INFO:Declaring metric variables
2024-11-26 15:04:43,872:INFO:Importing untrained model
2024-11-26 15:04:43,877:INFO:Naive Bayes Imported successfully
2024-11-26 15:04:43,903:INFO:Starting cross validation
2024-11-26 15:04:43,904:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:04:44,192:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,214:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,239:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,702:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,714:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,820:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:44,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:45,584:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:45,687:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:45,737:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:46,292:INFO:Calculating mean and std
2024-11-26 15:04:46,292:INFO:Creating metrics dataframe
2024-11-26 15:04:46,303:INFO:Uploading results into container
2024-11-26 15:04:46,303:INFO:Uploading model into container now
2024-11-26 15:04:46,303:INFO:_master_model_container: 3
2024-11-26 15:04:46,303:INFO:_display_container: 2
2024-11-26 15:04:46,303:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 15:04:46,305:INFO:create_model() successfully completed......................................
2024-11-26 15:04:46,696:INFO:SubProcess create_model() end ==================================
2024-11-26 15:04:46,696:INFO:Creating metrics dataframe
2024-11-26 15:04:46,716:INFO:Initializing Decision Tree Classifier
2024-11-26 15:04:46,718:INFO:Total runtime is 0.3047472953796387 minutes
2024-11-26 15:04:46,728:INFO:SubProcess create_model() called ==================================
2024-11-26 15:04:46,728:INFO:Initializing create_model()
2024-11-26 15:04:46,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:04:46,728:INFO:Checking exceptions
2024-11-26 15:04:46,728:INFO:Importing libraries
2024-11-26 15:04:46,728:INFO:Copying training dataset
2024-11-26 15:04:46,837:INFO:Defining folds
2024-11-26 15:04:46,837:INFO:Declaring metric variables
2024-11-26 15:04:46,837:INFO:Importing untrained model
2024-11-26 15:04:46,868:INFO:Decision Tree Classifier Imported successfully
2024-11-26 15:04:46,905:INFO:Starting cross validation
2024-11-26 15:04:46,906:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:04:49,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:49,335:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:49,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:49,428:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:49,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:49,574:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:50,955:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:51,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:51,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:51,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:51,177:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:51,239:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:52,402:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:52,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:52,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:52,625:INFO:Calculating mean and std
2024-11-26 15:04:52,625:INFO:Creating metrics dataframe
2024-11-26 15:04:52,625:INFO:Uploading results into container
2024-11-26 15:04:52,625:INFO:Uploading model into container now
2024-11-26 15:04:52,625:INFO:_master_model_container: 4
2024-11-26 15:04:52,625:INFO:_display_container: 2
2024-11-26 15:04:52,625:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=311, splitter='best')
2024-11-26 15:04:52,625:INFO:create_model() successfully completed......................................
2024-11-26 15:04:53,164:INFO:SubProcess create_model() end ==================================
2024-11-26 15:04:53,164:INFO:Creating metrics dataframe
2024-11-26 15:04:53,191:INFO:Initializing SVM - Linear Kernel
2024-11-26 15:04:53,191:INFO:Total runtime is 0.41264373461405435 minutes
2024-11-26 15:04:53,218:INFO:SubProcess create_model() called ==================================
2024-11-26 15:04:53,275:INFO:Initializing create_model()
2024-11-26 15:04:53,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:04:53,277:INFO:Checking exceptions
2024-11-26 15:04:53,277:INFO:Importing libraries
2024-11-26 15:04:53,277:INFO:Copying training dataset
2024-11-26 15:04:53,379:INFO:Defining folds
2024-11-26 15:04:53,407:INFO:Declaring metric variables
2024-11-26 15:04:53,407:INFO:Importing untrained model
2024-11-26 15:04:53,428:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 15:04:53,455:INFO:Starting cross validation
2024-11-26 15:04:53,469:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:04:54,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:54,289:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:54,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:54,356:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:54,395:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:54,406:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:56,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:56,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:56,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:56,645:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:56,645:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:56,737:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:57,129:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:57,158:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:57,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:57,280:INFO:Calculating mean and std
2024-11-26 15:04:57,280:INFO:Creating metrics dataframe
2024-11-26 15:04:57,280:INFO:Uploading results into container
2024-11-26 15:04:57,379:INFO:Uploading model into container now
2024-11-26 15:04:57,382:INFO:_master_model_container: 5
2024-11-26 15:04:57,382:INFO:_display_container: 2
2024-11-26 15:04:57,382:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=311, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 15:04:57,382:INFO:create_model() successfully completed......................................
2024-11-26 15:04:57,777:INFO:SubProcess create_model() end ==================================
2024-11-26 15:04:57,777:INFO:Creating metrics dataframe
2024-11-26 15:04:57,810:INFO:Initializing Ridge Classifier
2024-11-26 15:04:57,810:INFO:Total runtime is 0.4896211306254069 minutes
2024-11-26 15:04:57,810:INFO:SubProcess create_model() called ==================================
2024-11-26 15:04:57,810:INFO:Initializing create_model()
2024-11-26 15:04:57,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:04:57,823:INFO:Checking exceptions
2024-11-26 15:04:57,823:INFO:Importing libraries
2024-11-26 15:04:57,823:INFO:Copying training dataset
2024-11-26 15:04:57,901:INFO:Defining folds
2024-11-26 15:04:57,901:INFO:Declaring metric variables
2024-11-26 15:04:57,933:INFO:Importing untrained model
2024-11-26 15:04:57,933:INFO:Ridge Classifier Imported successfully
2024-11-26 15:04:57,954:INFO:Starting cross validation
2024-11-26 15:04:57,956:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:04:58,303:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:58,338:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:58,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:58,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:58,446:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:58,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:58,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:58,948:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:59,180:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:59,378:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:59,406:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:59,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:04:59,973:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:00,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:00,429:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:00,651:INFO:Calculating mean and std
2024-11-26 15:05:00,651:INFO:Creating metrics dataframe
2024-11-26 15:05:00,668:INFO:Uploading results into container
2024-11-26 15:05:00,668:INFO:Uploading model into container now
2024-11-26 15:05:00,668:INFO:_master_model_container: 6
2024-11-26 15:05:00,668:INFO:_display_container: 2
2024-11-26 15:05:00,668:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=311, solver='auto',
                tol=0.0001)
2024-11-26 15:05:00,668:INFO:create_model() successfully completed......................................
2024-11-26 15:05:01,011:INFO:SubProcess create_model() end ==================================
2024-11-26 15:05:01,011:INFO:Creating metrics dataframe
2024-11-26 15:05:01,087:INFO:Initializing Random Forest Classifier
2024-11-26 15:05:01,087:INFO:Total runtime is 0.5442344069480896 minutes
2024-11-26 15:05:01,087:INFO:SubProcess create_model() called ==================================
2024-11-26 15:05:01,087:INFO:Initializing create_model()
2024-11-26 15:05:01,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:05:01,087:INFO:Checking exceptions
2024-11-26 15:05:01,087:INFO:Importing libraries
2024-11-26 15:05:01,087:INFO:Copying training dataset
2024-11-26 15:05:01,274:INFO:Defining folds
2024-11-26 15:05:01,274:INFO:Declaring metric variables
2024-11-26 15:05:01,317:INFO:Importing untrained model
2024-11-26 15:05:01,321:INFO:Random Forest Classifier Imported successfully
2024-11-26 15:05:01,347:INFO:Starting cross validation
2024-11-26 15:05:01,348:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:05:27,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:27,510:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:27,652:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:27,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:27,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:27,881:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:52,024:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:52,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:52,595:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:52,737:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:52,878:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:05:52,921:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:04,820:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:04,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:04,911:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:04,968:INFO:Calculating mean and std
2024-11-26 15:06:04,998:INFO:Creating metrics dataframe
2024-11-26 15:06:04,998:INFO:Uploading results into container
2024-11-26 15:06:04,998:INFO:Uploading model into container now
2024-11-26 15:06:04,998:INFO:_master_model_container: 7
2024-11-26 15:06:04,998:INFO:_display_container: 2
2024-11-26 15:06:04,998:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=311, verbose=0,
                       warm_start=False)
2024-11-26 15:06:04,998:INFO:create_model() successfully completed......................................
2024-11-26 15:06:05,487:INFO:SubProcess create_model() end ==================================
2024-11-26 15:06:05,487:INFO:Creating metrics dataframe
2024-11-26 15:06:05,512:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 15:06:05,512:INFO:Total runtime is 1.617978250980377 minutes
2024-11-26 15:06:05,542:INFO:SubProcess create_model() called ==================================
2024-11-26 15:06:05,542:INFO:Initializing create_model()
2024-11-26 15:06:05,542:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:06:05,542:INFO:Checking exceptions
2024-11-26 15:06:05,542:INFO:Importing libraries
2024-11-26 15:06:05,542:INFO:Copying training dataset
2024-11-26 15:06:05,858:INFO:Defining folds
2024-11-26 15:06:05,858:INFO:Declaring metric variables
2024-11-26 15:06:05,879:INFO:Importing untrained model
2024-11-26 15:06:05,886:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 15:06:05,971:INFO:Starting cross validation
2024-11-26 15:06:05,995:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:06:06,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:06:06,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:06:06,436:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:06,451:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:06,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:06,557:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:06,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:06,641:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:07,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:06:07,358:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:06:07,767:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:07,912:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:07,933:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:08,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:08,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:09,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:06:09,230:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:09,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:09,417:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:09,481:INFO:Calculating mean and std
2024-11-26 15:06:09,501:INFO:Creating metrics dataframe
2024-11-26 15:06:09,501:INFO:Uploading results into container
2024-11-26 15:06:09,501:INFO:Uploading model into container now
2024-11-26 15:06:09,501:INFO:_master_model_container: 8
2024-11-26 15:06:09,501:INFO:_display_container: 2
2024-11-26 15:06:09,501:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 15:06:09,501:INFO:create_model() successfully completed......................................
2024-11-26 15:06:09,859:INFO:SubProcess create_model() end ==================================
2024-11-26 15:06:09,859:INFO:Creating metrics dataframe
2024-11-26 15:06:09,896:INFO:Initializing Ada Boost Classifier
2024-11-26 15:06:09,896:INFO:Total runtime is 1.6910509228706359 minutes
2024-11-26 15:06:09,899:INFO:SubProcess create_model() called ==================================
2024-11-26 15:06:09,899:INFO:Initializing create_model()
2024-11-26 15:06:09,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:06:09,900:INFO:Checking exceptions
2024-11-26 15:06:09,900:INFO:Importing libraries
2024-11-26 15:06:09,900:INFO:Copying training dataset
2024-11-26 15:06:10,045:INFO:Defining folds
2024-11-26 15:06:10,045:INFO:Declaring metric variables
2024-11-26 15:06:10,074:INFO:Importing untrained model
2024-11-26 15:06:10,074:INFO:Ada Boost Classifier Imported successfully
2024-11-26 15:06:10,133:INFO:Starting cross validation
2024-11-26 15:06:10,133:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:06:10,337:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:06:10,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:06:18,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:18,913:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:19,024:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:19,040:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:19,105:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:19,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:19,377:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:06:19,377:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:06:25,820:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:25,944:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:25,958:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:26,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:26,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:26,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:26,321:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:06:31,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:32,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:32,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:06:32,247:INFO:Calculating mean and std
2024-11-26 15:06:32,247:INFO:Creating metrics dataframe
2024-11-26 15:06:32,291:INFO:Uploading results into container
2024-11-26 15:06:32,304:INFO:Uploading model into container now
2024-11-26 15:06:32,306:INFO:_master_model_container: 9
2024-11-26 15:06:32,306:INFO:_display_container: 2
2024-11-26 15:06:32,307:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=311)
2024-11-26 15:06:32,307:INFO:create_model() successfully completed......................................
2024-11-26 15:06:32,687:INFO:SubProcess create_model() end ==================================
2024-11-26 15:06:32,687:INFO:Creating metrics dataframe
2024-11-26 15:06:32,697:INFO:Initializing Gradient Boosting Classifier
2024-11-26 15:06:32,697:INFO:Total runtime is 2.071069796880086 minutes
2024-11-26 15:06:32,722:INFO:SubProcess create_model() called ==================================
2024-11-26 15:06:32,724:INFO:Initializing create_model()
2024-11-26 15:06:32,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:06:32,725:INFO:Checking exceptions
2024-11-26 15:06:32,726:INFO:Importing libraries
2024-11-26 15:06:32,726:INFO:Copying training dataset
2024-11-26 15:06:32,949:INFO:Defining folds
2024-11-26 15:06:32,949:INFO:Declaring metric variables
2024-11-26 15:06:32,994:INFO:Importing untrained model
2024-11-26 15:06:32,994:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 15:06:33,009:INFO:Starting cross validation
2024-11-26 15:06:33,016:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:07:03,503:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:03,595:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:03,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:03,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:04,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:04,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:34,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:34,766:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:34,846:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:34,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:34,922:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:07:35,024:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:02,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:02,133:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:02,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:02,367:INFO:Calculating mean and std
2024-11-26 15:08:02,381:INFO:Creating metrics dataframe
2024-11-26 15:08:02,411:INFO:Uploading results into container
2024-11-26 15:08:02,416:INFO:Uploading model into container now
2024-11-26 15:08:02,416:INFO:_master_model_container: 10
2024-11-26 15:08:02,416:INFO:_display_container: 2
2024-11-26 15:08:02,416:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=311, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 15:08:02,416:INFO:create_model() successfully completed......................................
2024-11-26 15:08:02,821:INFO:SubProcess create_model() end ==================================
2024-11-26 15:08:02,821:INFO:Creating metrics dataframe
2024-11-26 15:08:02,846:INFO:Initializing Linear Discriminant Analysis
2024-11-26 15:08:02,846:INFO:Total runtime is 3.573557857672373 minutes
2024-11-26 15:08:02,866:INFO:SubProcess create_model() called ==================================
2024-11-26 15:08:02,866:INFO:Initializing create_model()
2024-11-26 15:08:02,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:08:02,866:INFO:Checking exceptions
2024-11-26 15:08:02,866:INFO:Importing libraries
2024-11-26 15:08:02,866:INFO:Copying training dataset
2024-11-26 15:08:02,984:INFO:Defining folds
2024-11-26 15:08:02,993:INFO:Declaring metric variables
2024-11-26 15:08:03,034:INFO:Importing untrained model
2024-11-26 15:08:03,034:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 15:08:03,065:INFO:Starting cross validation
2024-11-26 15:08:03,088:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:08:03,762:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:03,790:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:03,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:03,945:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:04,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:04,087:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:05,293:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:05,528:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:05,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:05,648:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:05,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:06,157:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:06,808:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:06,905:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:06,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:07,069:INFO:Calculating mean and std
2024-11-26 15:08:07,069:INFO:Creating metrics dataframe
2024-11-26 15:08:07,085:INFO:Uploading results into container
2024-11-26 15:08:07,086:INFO:Uploading model into container now
2024-11-26 15:08:07,103:INFO:_master_model_container: 11
2024-11-26 15:08:07,103:INFO:_display_container: 2
2024-11-26 15:08:07,103:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 15:08:07,103:INFO:create_model() successfully completed......................................
2024-11-26 15:08:07,493:INFO:SubProcess create_model() end ==================================
2024-11-26 15:08:07,493:INFO:Creating metrics dataframe
2024-11-26 15:08:07,542:INFO:Initializing Extra Trees Classifier
2024-11-26 15:08:07,542:INFO:Total runtime is 3.6518193840980526 minutes
2024-11-26 15:08:07,567:INFO:SubProcess create_model() called ==================================
2024-11-26 15:08:07,567:INFO:Initializing create_model()
2024-11-26 15:08:07,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:08:07,568:INFO:Checking exceptions
2024-11-26 15:08:07,568:INFO:Importing libraries
2024-11-26 15:08:07,568:INFO:Copying training dataset
2024-11-26 15:08:07,709:INFO:Defining folds
2024-11-26 15:08:07,709:INFO:Declaring metric variables
2024-11-26 15:08:07,709:INFO:Importing untrained model
2024-11-26 15:08:07,742:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:08:07,742:INFO:Starting cross validation
2024-11-26 15:08:07,742:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:08:21,177:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:21,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:21,552:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:21,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:21,781:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:21,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:35,425:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:35,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:35,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:35,747:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:35,766:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:35,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:43,787:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:43,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:44,024:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:44,126:INFO:Calculating mean and std
2024-11-26 15:08:44,137:INFO:Creating metrics dataframe
2024-11-26 15:08:44,155:INFO:Uploading results into container
2024-11-26 15:08:44,155:INFO:Uploading model into container now
2024-11-26 15:08:44,157:INFO:_master_model_container: 12
2024-11-26 15:08:44,157:INFO:_display_container: 2
2024-11-26 15:08:44,158:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=311, verbose=0,
                     warm_start=False)
2024-11-26 15:08:44,158:INFO:create_model() successfully completed......................................
2024-11-26 15:08:44,714:INFO:SubProcess create_model() end ==================================
2024-11-26 15:08:44,714:INFO:Creating metrics dataframe
2024-11-26 15:08:44,739:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 15:08:44,739:INFO:Total runtime is 4.271768124898275 minutes
2024-11-26 15:08:44,746:INFO:SubProcess create_model() called ==================================
2024-11-26 15:08:44,746:INFO:Initializing create_model()
2024-11-26 15:08:44,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:08:44,746:INFO:Checking exceptions
2024-11-26 15:08:44,746:INFO:Importing libraries
2024-11-26 15:08:44,746:INFO:Copying training dataset
2024-11-26 15:08:44,985:INFO:Defining folds
2024-11-26 15:08:44,985:INFO:Declaring metric variables
2024-11-26 15:08:44,996:INFO:Importing untrained model
2024-11-26 15:08:44,996:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 15:08:45,074:INFO:Starting cross validation
2024-11-26 15:08:45,091:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:08:49,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:49,709:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:49,709:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:49,768:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:49,768:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:49,812:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:52,998:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:53,072:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:53,108:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:53,273:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:53,366:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:53,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:55,694:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:55,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:55,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:55,965:INFO:Calculating mean and std
2024-11-26 15:08:55,965:INFO:Creating metrics dataframe
2024-11-26 15:08:55,965:INFO:Uploading results into container
2024-11-26 15:08:55,965:INFO:Uploading model into container now
2024-11-26 15:08:55,980:INFO:_master_model_container: 13
2024-11-26 15:08:55,980:INFO:_display_container: 2
2024-11-26 15:08:55,999:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=311, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 15:08:55,999:INFO:create_model() successfully completed......................................
2024-11-26 15:08:56,498:INFO:SubProcess create_model() end ==================================
2024-11-26 15:08:56,500:INFO:Creating metrics dataframe
2024-11-26 15:08:56,537:INFO:Initializing Dummy Classifier
2024-11-26 15:08:56,537:INFO:Total runtime is 4.468404046694437 minutes
2024-11-26 15:08:56,556:INFO:SubProcess create_model() called ==================================
2024-11-26 15:08:56,556:INFO:Initializing create_model()
2024-11-26 15:08:56,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FAB14A2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:08:56,556:INFO:Checking exceptions
2024-11-26 15:08:56,556:INFO:Importing libraries
2024-11-26 15:08:56,556:INFO:Copying training dataset
2024-11-26 15:08:56,742:INFO:Defining folds
2024-11-26 15:08:56,743:INFO:Declaring metric variables
2024-11-26 15:08:56,774:INFO:Importing untrained model
2024-11-26 15:08:56,809:INFO:Dummy Classifier Imported successfully
2024-11-26 15:08:57,022:INFO:Starting cross validation
2024-11-26 15:08:57,025:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 15:08:57,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:57,335:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:57,345:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:57,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:57,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:08:57,455:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:57,481:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:08:57,539:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:57,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:57,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:58,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:08:58,059:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:58,095:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:58,448:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:08:58,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:58,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:59,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:59,193:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:08:59,263:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:08:59,517:INFO:Calculating mean and std
2024-11-26 15:08:59,519:INFO:Creating metrics dataframe
2024-11-26 15:08:59,522:INFO:Uploading results into container
2024-11-26 15:08:59,522:INFO:Uploading model into container now
2024-11-26 15:08:59,523:INFO:_master_model_container: 14
2024-11-26 15:08:59,523:INFO:_display_container: 2
2024-11-26 15:08:59,523:INFO:DummyClassifier(constant=None, random_state=311, strategy='prior')
2024-11-26 15:08:59,523:INFO:create_model() successfully completed......................................
2024-11-26 15:09:00,439:INFO:SubProcess create_model() end ==================================
2024-11-26 15:09:00,439:INFO:Creating metrics dataframe
2024-11-26 15:09:00,529:INFO:Initializing create_model()
2024-11-26 15:09:00,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=311, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:09:00,529:INFO:Checking exceptions
2024-11-26 15:09:00,529:INFO:Importing libraries
2024-11-26 15:09:00,529:INFO:Copying training dataset
2024-11-26 15:09:00,712:INFO:Defining folds
2024-11-26 15:09:00,712:INFO:Declaring metric variables
2024-11-26 15:09:00,712:INFO:Importing untrained model
2024-11-26 15:09:00,712:INFO:Declaring custom model
2024-11-26 15:09:00,712:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:09:00,717:INFO:Cross validation set to False
2024-11-26 15:09:00,717:INFO:Fitting Model
2024-11-26 15:09:10,272:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=311, verbose=0,
                     warm_start=False)
2024-11-26 15:09:10,272:INFO:create_model() successfully completed......................................
2024-11-26 15:09:11,460:INFO:_master_model_container: 14
2024-11-26 15:09:11,460:INFO:_display_container: 2
2024-11-26 15:09:11,463:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=311, verbose=0,
                     warm_start=False)
2024-11-26 15:09:11,463:INFO:compare_models() successfully completed......................................
2024-11-26 15:09:25,969:INFO:Initializing predict_model()
2024-11-26 15:09:25,969:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3298, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022FAB654FE0>)
2024-11-26 15:09:25,969:INFO:Checking exceptions
2024-11-26 15:09:25,969:INFO:Preloading libraries
2024-11-26 15:09:40,489:INFO:Initializing predict_model()
2024-11-26 15:09:40,489:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=311, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022FAB732CA0>)
2024-11-26 15:09:40,489:INFO:Checking exceptions
2024-11-26 15:09:40,489:INFO:Preloading libraries
2024-11-26 15:10:30,540:INFO:Initializing predict_model()
2024-11-26 15:10:30,540:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=311, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022FAB656DE0>)
2024-11-26 15:10:30,540:INFO:Checking exceptions
2024-11-26 15:10:30,540:INFO:Preloading libraries
2024-11-26 15:10:30,540:INFO:Set up data.
2024-11-26 15:10:30,636:INFO:Set up index.
2024-11-26 15:10:42,245:INFO:Initializing predict_model()
2024-11-26 15:10:42,245:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F9D563450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=311, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022FAB655C60>)
2024-11-26 15:10:42,250:INFO:Checking exceptions
2024-11-26 15:10:42,250:INFO:Preloading libraries
2024-11-26 15:24:58,901:INFO:PyCaret ClassificationExperiment
2024-11-26 15:24:58,901:INFO:Logging name: clf-default-name
2024-11-26 15:24:58,901:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 15:24:58,901:INFO:version 3.3.2
2024-11-26 15:24:58,901:INFO:Initializing setup()
2024-11-26 15:24:58,901:INFO:self.USI: 9436
2024-11-26 15:24:58,901:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 15:24:58,901:INFO:Checking environment
2024-11-26 15:24:58,901:INFO:python_version: 3.11.9
2024-11-26 15:24:58,901:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 15:24:58,901:INFO:machine: AMD64
2024-11-26 15:24:58,901:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 15:24:58,901:INFO:Memory: svmem(total=4293971968, available=886145024, percent=79.4, used=3407826944, free=886145024)
2024-11-26 15:24:58,901:INFO:Physical Core: 2
2024-11-26 15:24:58,901:INFO:Logical Core: 2
2024-11-26 15:24:58,901:INFO:Checking libraries
2024-11-26 15:24:58,901:INFO:System:
2024-11-26 15:24:58,901:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 15:24:58,901:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 15:24:58,901:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 15:24:58,901:INFO:PyCaret required dependencies:
2024-11-26 15:24:58,901:INFO:                 pip: 24.3.1
2024-11-26 15:24:58,901:INFO:          setuptools: 65.5.0
2024-11-26 15:24:58,901:INFO:             pycaret: 3.3.2
2024-11-26 15:24:58,901:INFO:             IPython: 8.26.0
2024-11-26 15:24:58,901:INFO:          ipywidgets: 8.1.5
2024-11-26 15:24:58,901:INFO:                tqdm: 4.66.5
2024-11-26 15:24:58,901:INFO:               numpy: 1.26.4
2024-11-26 15:24:58,901:INFO:              pandas: 2.1.4
2024-11-26 15:24:58,901:INFO:              jinja2: 3.1.4
2024-11-26 15:24:58,901:INFO:               scipy: 1.11.4
2024-11-26 15:24:58,901:INFO:              joblib: 1.3.2
2024-11-26 15:24:58,901:INFO:             sklearn: 1.4.2
2024-11-26 15:24:58,901:INFO:                pyod: 2.0.2
2024-11-26 15:24:58,901:INFO:            imblearn: 0.12.4
2024-11-26 15:24:58,901:INFO:   category_encoders: 2.6.4
2024-11-26 15:24:58,901:INFO:            lightgbm: 4.5.0
2024-11-26 15:24:58,901:INFO:               numba: 0.60.0
2024-11-26 15:24:58,901:INFO:            requests: 2.32.3
2024-11-26 15:24:58,901:INFO:          matplotlib: 3.7.5
2024-11-26 15:24:58,901:INFO:          scikitplot: 0.3.7
2024-11-26 15:24:58,901:INFO:         yellowbrick: 1.5
2024-11-26 15:24:58,901:INFO:              plotly: 5.24.1
2024-11-26 15:24:58,901:INFO:    plotly-resampler: Not installed
2024-11-26 15:24:58,901:INFO:             kaleido: 0.2.1
2024-11-26 15:24:58,901:INFO:           schemdraw: 0.15
2024-11-26 15:24:58,901:INFO:         statsmodels: 0.14.3
2024-11-26 15:24:58,901:INFO:              sktime: 0.26.0
2024-11-26 15:24:58,901:INFO:               tbats: 1.1.3
2024-11-26 15:24:58,901:INFO:            pmdarima: 2.0.4
2024-11-26 15:24:58,901:INFO:              psutil: 6.0.0
2024-11-26 15:24:58,901:INFO:          markupsafe: 3.0.2
2024-11-26 15:24:58,901:INFO:             pickle5: Not installed
2024-11-26 15:24:58,901:INFO:         cloudpickle: 3.0.0
2024-11-26 15:24:58,901:INFO:         deprecation: 2.1.0
2024-11-26 15:24:58,901:INFO:              xxhash: 3.5.0
2024-11-26 15:24:58,901:INFO:           wurlitzer: Not installed
2024-11-26 15:24:58,901:INFO:PyCaret optional dependencies:
2024-11-26 15:24:58,901:INFO:                shap: 0.46.0
2024-11-26 15:24:58,901:INFO:           interpret: Not installed
2024-11-26 15:24:58,901:INFO:                umap: Not installed
2024-11-26 15:24:58,901:INFO:     ydata_profiling: Not installed
2024-11-26 15:24:58,901:INFO:  explainerdashboard: Not installed
2024-11-26 15:24:58,901:INFO:             autoviz: Not installed
2024-11-26 15:24:58,901:INFO:           fairlearn: Not installed
2024-11-26 15:24:58,901:INFO:          deepchecks: Not installed
2024-11-26 15:24:58,901:INFO:             xgboost: Not installed
2024-11-26 15:24:58,901:INFO:            catboost: Not installed
2024-11-26 15:24:58,901:INFO:              kmodes: Not installed
2024-11-26 15:24:58,901:INFO:             mlxtend: Not installed
2024-11-26 15:24:58,901:INFO:       statsforecast: Not installed
2024-11-26 15:24:58,901:INFO:        tune_sklearn: Not installed
2024-11-26 15:24:58,901:INFO:                 ray: Not installed
2024-11-26 15:24:58,901:INFO:            hyperopt: Not installed
2024-11-26 15:24:58,916:INFO:              optuna: 4.1.0
2024-11-26 15:24:58,916:INFO:               skopt: Not installed
2024-11-26 15:24:58,916:INFO:              mlflow: Not installed
2024-11-26 15:24:58,916:INFO:              gradio: Not installed
2024-11-26 15:24:58,916:INFO:             fastapi: Not installed
2024-11-26 15:24:58,916:INFO:             uvicorn: Not installed
2024-11-26 15:24:58,916:INFO:              m2cgen: Not installed
2024-11-26 15:24:58,916:INFO:           evidently: Not installed
2024-11-26 15:24:58,916:INFO:               fugue: Not installed
2024-11-26 15:24:58,916:INFO:           streamlit: Not installed
2024-11-26 15:24:58,916:INFO:             prophet: Not installed
2024-11-26 15:24:58,916:INFO:None
2024-11-26 15:24:58,916:INFO:Set up data.
2024-11-26 15:24:59,182:INFO:Set up folding strategy.
2024-11-26 15:24:59,182:INFO:Set up train/test split.
2024-11-26 15:24:59,697:INFO:Set up index.
2024-11-26 15:24:59,713:INFO:Assigning column types.
2024-11-26 15:25:00,222:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 15:25:00,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 15:25:00,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:25:00,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:00,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:01,166:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 15:25:01,166:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:25:01,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:01,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:01,306:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 15:25:01,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:25:02,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:02,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:02,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:25:02,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:02,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:02,635:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 15:25:02,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:02,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:03,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:03,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:03,056:INFO:Preparing preprocessing pipeline...
2024-11-26 15:25:03,088:INFO:Set up label encoding.
2024-11-26 15:25:03,088:INFO:Set up simple imputation.
2024-11-26 15:25:03,650:INFO:Finished creating preprocessing pipeline.
2024-11-26 15:25:03,698:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             '...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 15:25:03,698:INFO:Creating final display dataframe.
2024-11-26 15:25:04,838:INFO:Setup _display_container:                     Description             Value
0                    Session id              1252
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              9436
2024-11-26 15:25:05,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:05,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:05,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:05,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:25:05,302:INFO:setup() successfully completed in 6.67s...............
2024-11-26 15:25:05,302:INFO:Initializing compare_models()
2024-11-26 15:25:05,302:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 15:25:05,302:INFO:Checking exceptions
2024-11-26 15:25:05,370:INFO:Preparing display monitor
2024-11-26 15:25:05,510:INFO:Initializing Logistic Regression
2024-11-26 15:25:05,556:INFO:Total runtime is 0.0 minutes
2024-11-26 15:25:05,791:INFO:SubProcess create_model() called ==================================
2024-11-26 15:25:05,791:INFO:Initializing create_model()
2024-11-26 15:25:05,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:25:05,791:INFO:Checking exceptions
2024-11-26 15:25:05,791:INFO:Importing libraries
2024-11-26 15:25:05,791:INFO:Copying training dataset
2024-11-26 15:25:06,010:INFO:Defining folds
2024-11-26 15:25:06,010:INFO:Declaring metric variables
2024-11-26 15:25:06,010:INFO:Importing untrained model
2024-11-26 15:25:06,025:INFO:Logistic Regression Imported successfully
2024-11-26 15:25:06,103:INFO:Starting cross validation
2024-11-26 15:25:06,103:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:25:57,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:57,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:57,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:57,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:57,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:57,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:59,119:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:59,167:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:59,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:59,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:59,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:25:59,306:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:00,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:00,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:00,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:00,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:00,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:00,705:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:01,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:01,590:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:01,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:01,881:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:01,956:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:02,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:03,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:03,119:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:03,169:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:03,179:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:03,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:03,273:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:03,350:INFO:Calculating mean and std
2024-11-26 15:26:03,352:INFO:Creating metrics dataframe
2024-11-26 15:26:03,377:INFO:Uploading results into container
2024-11-26 15:26:03,377:INFO:Uploading model into container now
2024-11-26 15:26:03,377:INFO:_master_model_container: 1
2024-11-26 15:26:03,377:INFO:_display_container: 2
2024-11-26 15:26:03,377:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1252, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 15:26:03,377:INFO:create_model() successfully completed......................................
2024-11-26 15:26:04,008:INFO:SubProcess create_model() end ==================================
2024-11-26 15:26:04,008:INFO:Creating metrics dataframe
2024-11-26 15:26:04,026:INFO:Initializing K Neighbors Classifier
2024-11-26 15:26:04,026:INFO:Total runtime is 0.9752718885739644 minutes
2024-11-26 15:26:04,035:INFO:SubProcess create_model() called ==================================
2024-11-26 15:26:04,035:INFO:Initializing create_model()
2024-11-26 15:26:04,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:26:04,035:INFO:Checking exceptions
2024-11-26 15:26:04,035:INFO:Importing libraries
2024-11-26 15:26:04,035:INFO:Copying training dataset
2024-11-26 15:26:04,156:INFO:Defining folds
2024-11-26 15:26:04,157:INFO:Declaring metric variables
2024-11-26 15:26:04,162:INFO:Importing untrained model
2024-11-26 15:26:04,165:INFO:K Neighbors Classifier Imported successfully
2024-11-26 15:26:04,197:INFO:Starting cross validation
2024-11-26 15:26:04,198:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:26:07,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:07,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:07,773:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:08,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:08,033:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:08,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:09,728:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:09,814:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:09,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:10,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:10,318:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:10,383:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:13,605:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:13,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:13,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:13,963:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:13,997:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:14,040:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:16,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:16,482:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:16,525:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:16,551:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:16,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:16,639:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:18,792:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:18,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:18,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:18,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:18,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:18,933:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:19,027:INFO:Calculating mean and std
2024-11-26 15:26:19,027:INFO:Creating metrics dataframe
2024-11-26 15:26:19,027:INFO:Uploading results into container
2024-11-26 15:26:19,054:INFO:Uploading model into container now
2024-11-26 15:26:19,058:INFO:_master_model_container: 2
2024-11-26 15:26:19,058:INFO:_display_container: 2
2024-11-26 15:26:19,061:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 15:26:19,063:INFO:create_model() successfully completed......................................
2024-11-26 15:26:19,481:INFO:SubProcess create_model() end ==================================
2024-11-26 15:26:19,481:INFO:Creating metrics dataframe
2024-11-26 15:26:19,512:INFO:Initializing Naive Bayes
2024-11-26 15:26:19,512:INFO:Total runtime is 1.2333709875742593 minutes
2024-11-26 15:26:19,527:INFO:SubProcess create_model() called ==================================
2024-11-26 15:26:19,527:INFO:Initializing create_model()
2024-11-26 15:26:19,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:26:19,527:INFO:Checking exceptions
2024-11-26 15:26:19,527:INFO:Importing libraries
2024-11-26 15:26:19,527:INFO:Copying training dataset
2024-11-26 15:26:19,685:INFO:Defining folds
2024-11-26 15:26:19,685:INFO:Declaring metric variables
2024-11-26 15:26:19,722:INFO:Importing untrained model
2024-11-26 15:26:19,746:INFO:Naive Bayes Imported successfully
2024-11-26 15:26:19,794:INFO:Starting cross validation
2024-11-26 15:26:19,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:26:20,187:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,187:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,214:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,230:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,284:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,710:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,737:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:20,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:21,378:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:21,400:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:21,422:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:21,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:21,457:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:21,468:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:22,567:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:22,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:22,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:22,868:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:23,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:23,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:23,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:23,762:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:23,762:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:23,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:23,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:23,914:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:24,036:INFO:Calculating mean and std
2024-11-26 15:26:24,036:INFO:Creating metrics dataframe
2024-11-26 15:26:24,036:INFO:Uploading results into container
2024-11-26 15:26:24,036:INFO:Uploading model into container now
2024-11-26 15:26:24,036:INFO:_master_model_container: 3
2024-11-26 15:26:24,036:INFO:_display_container: 2
2024-11-26 15:26:24,036:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 15:26:24,036:INFO:create_model() successfully completed......................................
2024-11-26 15:26:24,456:INFO:SubProcess create_model() end ==================================
2024-11-26 15:26:24,456:INFO:Creating metrics dataframe
2024-11-26 15:26:24,505:INFO:Initializing Decision Tree Classifier
2024-11-26 15:26:24,518:INFO:Total runtime is 1.316805577278137 minutes
2024-11-26 15:26:24,552:INFO:SubProcess create_model() called ==================================
2024-11-26 15:26:24,552:INFO:Initializing create_model()
2024-11-26 15:26:24,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:26:24,552:INFO:Checking exceptions
2024-11-26 15:26:24,552:INFO:Importing libraries
2024-11-26 15:26:24,552:INFO:Copying training dataset
2024-11-26 15:26:24,672:INFO:Defining folds
2024-11-26 15:26:24,672:INFO:Declaring metric variables
2024-11-26 15:26:24,698:INFO:Importing untrained model
2024-11-26 15:26:24,704:INFO:Decision Tree Classifier Imported successfully
2024-11-26 15:26:24,732:INFO:Starting cross validation
2024-11-26 15:26:24,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:26:29,884:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:30,119:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:30,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:30,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:30,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:30,485:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:33,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:33,455:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:33,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:33,482:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:33,509:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:33,580:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:36,656:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:36,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:36,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:36,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:37,003:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:37,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:41,230:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:41,264:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:41,305:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:41,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:41,395:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:41,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:44,423:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:44,503:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:44,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:44,741:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:44,817:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:44,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:44,918:INFO:Calculating mean and std
2024-11-26 15:26:44,918:INFO:Creating metrics dataframe
2024-11-26 15:26:44,918:INFO:Uploading results into container
2024-11-26 15:26:44,934:INFO:Uploading model into container now
2024-11-26 15:26:44,936:INFO:_master_model_container: 4
2024-11-26 15:26:44,936:INFO:_display_container: 2
2024-11-26 15:26:44,937:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1252, splitter='best')
2024-11-26 15:26:44,937:INFO:create_model() successfully completed......................................
2024-11-26 15:26:45,732:INFO:SubProcess create_model() end ==================================
2024-11-26 15:26:45,735:INFO:Creating metrics dataframe
2024-11-26 15:26:45,981:INFO:Initializing SVM - Linear Kernel
2024-11-26 15:26:45,981:INFO:Total runtime is 1.6745236436525979 minutes
2024-11-26 15:26:46,016:INFO:SubProcess create_model() called ==================================
2024-11-26 15:26:46,017:INFO:Initializing create_model()
2024-11-26 15:26:46,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:26:46,017:INFO:Checking exceptions
2024-11-26 15:26:46,017:INFO:Importing libraries
2024-11-26 15:26:46,017:INFO:Copying training dataset
2024-11-26 15:26:46,235:INFO:Defining folds
2024-11-26 15:26:46,235:INFO:Declaring metric variables
2024-11-26 15:26:46,247:INFO:Importing untrained model
2024-11-26 15:26:46,281:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 15:26:46,309:INFO:Starting cross validation
2024-11-26 15:26:46,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:26:47,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:48,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:48,234:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:48,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:48,452:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:48,552:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:50,936:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,047:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,063:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,139:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,706:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:51,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:52,023:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:52,085:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:52,423:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:52,455:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:52,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:52,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:52,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:52,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:53,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:53,319:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:53,345:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:53,486:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:53,537:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:53,581:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:53,646:INFO:Calculating mean and std
2024-11-26 15:26:53,646:INFO:Creating metrics dataframe
2024-11-26 15:26:53,646:INFO:Uploading results into container
2024-11-26 15:26:53,646:INFO:Uploading model into container now
2024-11-26 15:26:53,646:INFO:_master_model_container: 5
2024-11-26 15:26:53,646:INFO:_display_container: 2
2024-11-26 15:26:53,660:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1252, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 15:26:53,660:INFO:create_model() successfully completed......................................
2024-11-26 15:26:54,010:INFO:SubProcess create_model() end ==================================
2024-11-26 15:26:54,010:INFO:Creating metrics dataframe
2024-11-26 15:26:54,033:INFO:Initializing Ridge Classifier
2024-11-26 15:26:54,033:INFO:Total runtime is 1.8087148984273274 minutes
2024-11-26 15:26:54,037:INFO:SubProcess create_model() called ==================================
2024-11-26 15:26:54,037:INFO:Initializing create_model()
2024-11-26 15:26:54,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:26:54,037:INFO:Checking exceptions
2024-11-26 15:26:54,037:INFO:Importing libraries
2024-11-26 15:26:54,037:INFO:Copying training dataset
2024-11-26 15:26:54,227:INFO:Defining folds
2024-11-26 15:26:54,227:INFO:Declaring metric variables
2024-11-26 15:26:54,227:INFO:Importing untrained model
2024-11-26 15:26:54,240:INFO:Ridge Classifier Imported successfully
2024-11-26 15:26:54,308:INFO:Starting cross validation
2024-11-26 15:26:54,311:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:26:54,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,654:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,931:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,957:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:54,989:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:55,005:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:55,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:55,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:55,328:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:55,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:55,422:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:55,642:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:55,668:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:56,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:56,134:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:56,145:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:56,208:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:56,208:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:56,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:57,520:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:57,523:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:57,561:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:57,561:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:57,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:57,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:26:57,643:INFO:Calculating mean and std
2024-11-26 15:26:57,643:INFO:Creating metrics dataframe
2024-11-26 15:26:57,643:INFO:Uploading results into container
2024-11-26 15:26:57,643:INFO:Uploading model into container now
2024-11-26 15:26:57,670:INFO:_master_model_container: 6
2024-11-26 15:26:57,671:INFO:_display_container: 2
2024-11-26 15:26:57,671:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1252, solver='auto',
                tol=0.0001)
2024-11-26 15:26:57,671:INFO:create_model() successfully completed......................................
2024-11-26 15:26:58,032:INFO:SubProcess create_model() end ==================================
2024-11-26 15:26:58,032:INFO:Creating metrics dataframe
2024-11-26 15:26:58,049:INFO:Initializing Random Forest Classifier
2024-11-26 15:26:58,049:INFO:Total runtime is 1.8756608565648396 minutes
2024-11-26 15:26:58,049:INFO:SubProcess create_model() called ==================================
2024-11-26 15:26:58,049:INFO:Initializing create_model()
2024-11-26 15:26:58,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:26:58,049:INFO:Checking exceptions
2024-11-26 15:26:58,049:INFO:Importing libraries
2024-11-26 15:26:58,049:INFO:Copying training dataset
2024-11-26 15:26:58,176:INFO:Defining folds
2024-11-26 15:26:58,176:INFO:Declaring metric variables
2024-11-26 15:26:58,190:INFO:Importing untrained model
2024-11-26 15:26:58,190:INFO:Random Forest Classifier Imported successfully
2024-11-26 15:26:58,265:INFO:Starting cross validation
2024-11-26 15:26:58,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:27:21,346:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:21,429:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:21,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:21,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:21,657:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:21,744:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:46,268:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:46,324:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:46,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:46,717:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:46,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:27:46,792:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:10,480:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:10,499:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:10,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:10,755:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:10,768:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:10,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:35,496:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:35,541:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:35,630:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:35,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:35,968:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:28:36,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:01,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:01,375:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:01,545:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:01,714:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:01,772:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:01,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:01,892:INFO:Calculating mean and std
2024-11-26 15:29:01,897:INFO:Creating metrics dataframe
2024-11-26 15:29:01,901:INFO:Uploading results into container
2024-11-26 15:29:01,904:INFO:Uploading model into container now
2024-11-26 15:29:01,904:INFO:_master_model_container: 7
2024-11-26 15:29:01,904:INFO:_display_container: 2
2024-11-26 15:29:01,904:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1252, verbose=0,
                       warm_start=False)
2024-11-26 15:29:01,904:INFO:create_model() successfully completed......................................
2024-11-26 15:29:02,435:INFO:SubProcess create_model() end ==================================
2024-11-26 15:29:02,435:INFO:Creating metrics dataframe
2024-11-26 15:29:02,487:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 15:29:02,487:INFO:Total runtime is 3.9496173739433287 minutes
2024-11-26 15:29:02,503:INFO:SubProcess create_model() called ==================================
2024-11-26 15:29:02,513:INFO:Initializing create_model()
2024-11-26 15:29:02,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:29:02,513:INFO:Checking exceptions
2024-11-26 15:29:02,513:INFO:Importing libraries
2024-11-26 15:29:02,513:INFO:Copying training dataset
2024-11-26 15:29:02,764:INFO:Defining folds
2024-11-26 15:29:02,764:INFO:Declaring metric variables
2024-11-26 15:29:02,781:INFO:Importing untrained model
2024-11-26 15:29:02,794:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 15:29:02,834:INFO:Starting cross validation
2024-11-26 15:29:02,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:29:03,397:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:03,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:03,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:03,569:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:03,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:03,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:03,680:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:03,680:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:04,450:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:04,556:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:04,730:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:04,789:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:04,801:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:04,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:04,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:05,013:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:05,375:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:05,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:05,841:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:05,841:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:06,145:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:06,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:06,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:06,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:06,706:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:06,925:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:06,925:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:06,964:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:06,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,076:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,130:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:07,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:29:07,375:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,402:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,504:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,532:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:07,588:INFO:Calculating mean and std
2024-11-26 15:29:07,588:INFO:Creating metrics dataframe
2024-11-26 15:29:07,588:INFO:Uploading results into container
2024-11-26 15:29:07,588:INFO:Uploading model into container now
2024-11-26 15:29:07,588:INFO:_master_model_container: 8
2024-11-26 15:29:07,588:INFO:_display_container: 2
2024-11-26 15:29:07,601:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 15:29:07,602:INFO:create_model() successfully completed......................................
2024-11-26 15:29:08,002:INFO:SubProcess create_model() end ==================================
2024-11-26 15:29:08,002:INFO:Creating metrics dataframe
2024-11-26 15:29:08,010:INFO:Initializing Ada Boost Classifier
2024-11-26 15:29:08,028:INFO:Total runtime is 4.041966831684112 minutes
2024-11-26 15:29:08,041:INFO:SubProcess create_model() called ==================================
2024-11-26 15:29:08,041:INFO:Initializing create_model()
2024-11-26 15:29:08,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:29:08,041:INFO:Checking exceptions
2024-11-26 15:29:08,041:INFO:Importing libraries
2024-11-26 15:29:08,041:INFO:Copying training dataset
2024-11-26 15:29:08,257:INFO:Defining folds
2024-11-26 15:29:08,257:INFO:Declaring metric variables
2024-11-26 15:29:08,321:INFO:Importing untrained model
2024-11-26 15:29:08,325:INFO:Ada Boost Classifier Imported successfully
2024-11-26 15:29:08,338:INFO:Starting cross validation
2024-11-26 15:29:08,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:29:08,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:08,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:15,919:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:15,994:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:16,070:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:16,191:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:16,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:16,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:16,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:16,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:22,814:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:22,823:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:22,844:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:22,861:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:22,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:22,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:23,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:23,112:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:29,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:29,690:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:29,719:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:29,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:29,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:29,866:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:29,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:29,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:37,566:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:37,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:37,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:37,666:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:37,706:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:37,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:37,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:37,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:29:44,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:44,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:44,301:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:44,406:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:44,472:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:44,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:29:44,578:INFO:Calculating mean and std
2024-11-26 15:29:44,578:INFO:Creating metrics dataframe
2024-11-26 15:29:44,583:INFO:Uploading results into container
2024-11-26 15:29:44,606:INFO:Uploading model into container now
2024-11-26 15:29:44,607:INFO:_master_model_container: 9
2024-11-26 15:29:44,607:INFO:_display_container: 2
2024-11-26 15:29:44,607:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1252)
2024-11-26 15:29:44,607:INFO:create_model() successfully completed......................................
2024-11-26 15:29:45,085:INFO:SubProcess create_model() end ==================================
2024-11-26 15:29:45,085:INFO:Creating metrics dataframe
2024-11-26 15:29:45,101:INFO:Initializing Gradient Boosting Classifier
2024-11-26 15:29:45,101:INFO:Total runtime is 4.659852703412374 minutes
2024-11-26 15:29:45,123:INFO:SubProcess create_model() called ==================================
2024-11-26 15:29:45,123:INFO:Initializing create_model()
2024-11-26 15:29:45,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:29:45,123:INFO:Checking exceptions
2024-11-26 15:29:45,123:INFO:Importing libraries
2024-11-26 15:29:45,123:INFO:Copying training dataset
2024-11-26 15:29:45,333:INFO:Defining folds
2024-11-26 15:29:45,333:INFO:Declaring metric variables
2024-11-26 15:29:45,350:INFO:Importing untrained model
2024-11-26 15:29:45,352:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 15:29:45,397:INFO:Starting cross validation
2024-11-26 15:29:45,397:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:30:16,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:16,472:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:16,532:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:17,254:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:17,330:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:17,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:47,910:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:47,964:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:47,997:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:49,040:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:49,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:30:49,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:20,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:20,613:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:20,654:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:22,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:22,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:22,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:51,923:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:51,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:51,995:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:53,540:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:53,584:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:31:53,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:24,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:24,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:24,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:26,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:26,648:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:26,679:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:26,767:INFO:Calculating mean and std
2024-11-26 15:32:26,767:INFO:Creating metrics dataframe
2024-11-26 15:32:26,812:INFO:Uploading results into container
2024-11-26 15:32:26,815:INFO:Uploading model into container now
2024-11-26 15:32:26,816:INFO:_master_model_container: 10
2024-11-26 15:32:26,816:INFO:_display_container: 2
2024-11-26 15:32:26,818:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1252, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 15:32:26,818:INFO:create_model() successfully completed......................................
2024-11-26 15:32:27,188:INFO:SubProcess create_model() end ==================================
2024-11-26 15:32:27,188:INFO:Creating metrics dataframe
2024-11-26 15:32:27,224:INFO:Initializing Linear Discriminant Analysis
2024-11-26 15:32:27,224:INFO:Total runtime is 7.361910800139109 minutes
2024-11-26 15:32:27,235:INFO:SubProcess create_model() called ==================================
2024-11-26 15:32:27,235:INFO:Initializing create_model()
2024-11-26 15:32:27,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:32:27,255:INFO:Checking exceptions
2024-11-26 15:32:27,256:INFO:Importing libraries
2024-11-26 15:32:27,256:INFO:Copying training dataset
2024-11-26 15:32:27,442:INFO:Defining folds
2024-11-26 15:32:27,442:INFO:Declaring metric variables
2024-11-26 15:32:27,520:INFO:Importing untrained model
2024-11-26 15:32:27,533:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 15:32:27,591:INFO:Starting cross validation
2024-11-26 15:32:27,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:32:28,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,090:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,111:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,132:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,390:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,421:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,463:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:28,489:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:29,278:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:29,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:29,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:29,361:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:29,399:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:29,441:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:30,743:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:30,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:30,869:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:30,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:30,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:30,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:31,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:31,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:31,361:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:31,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:31,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:31,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:31,559:INFO:Calculating mean and std
2024-11-26 15:32:31,593:INFO:Creating metrics dataframe
2024-11-26 15:32:31,593:INFO:Uploading results into container
2024-11-26 15:32:31,593:INFO:Uploading model into container now
2024-11-26 15:32:31,593:INFO:_master_model_container: 11
2024-11-26 15:32:31,593:INFO:_display_container: 2
2024-11-26 15:32:31,618:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 15:32:31,618:INFO:create_model() successfully completed......................................
2024-11-26 15:32:32,037:INFO:SubProcess create_model() end ==================================
2024-11-26 15:32:32,038:INFO:Creating metrics dataframe
2024-11-26 15:32:32,080:INFO:Initializing Extra Trees Classifier
2024-11-26 15:32:32,080:INFO:Total runtime is 7.4428439418474825 minutes
2024-11-26 15:32:32,112:INFO:SubProcess create_model() called ==================================
2024-11-26 15:32:32,112:INFO:Initializing create_model()
2024-11-26 15:32:32,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:32:32,112:INFO:Checking exceptions
2024-11-26 15:32:32,112:INFO:Importing libraries
2024-11-26 15:32:32,112:INFO:Copying training dataset
2024-11-26 15:32:32,271:INFO:Defining folds
2024-11-26 15:32:32,271:INFO:Declaring metric variables
2024-11-26 15:32:32,289:INFO:Importing untrained model
2024-11-26 15:32:32,307:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:32:32,370:INFO:Starting cross validation
2024-11-26 15:32:32,370:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:32:46,406:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:46,489:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:46,573:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:46,742:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:46,786:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:46,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:59,485:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:59,520:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:59,566:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:59,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:59,850:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:32:59,902:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:11,826:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:11,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:11,959:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:12,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:12,156:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:12,276:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:23,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:23,468:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:23,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:23,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:23,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:23,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:35,977:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:36,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:36,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:36,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:36,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:36,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:36,507:INFO:Calculating mean and std
2024-11-26 15:33:36,515:INFO:Creating metrics dataframe
2024-11-26 15:33:36,555:INFO:Uploading results into container
2024-11-26 15:33:36,555:INFO:Uploading model into container now
2024-11-26 15:33:36,555:INFO:_master_model_container: 12
2024-11-26 15:33:36,555:INFO:_display_container: 2
2024-11-26 15:33:36,555:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False)
2024-11-26 15:33:36,555:INFO:create_model() successfully completed......................................
2024-11-26 15:33:36,972:INFO:SubProcess create_model() end ==================================
2024-11-26 15:33:36,972:INFO:Creating metrics dataframe
2024-11-26 15:33:37,012:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 15:33:37,012:INFO:Total runtime is 8.525041838486988 minutes
2024-11-26 15:33:37,019:INFO:SubProcess create_model() called ==================================
2024-11-26 15:33:37,019:INFO:Initializing create_model()
2024-11-26 15:33:37,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:33:37,019:INFO:Checking exceptions
2024-11-26 15:33:37,019:INFO:Importing libraries
2024-11-26 15:33:37,019:INFO:Copying training dataset
2024-11-26 15:33:37,247:INFO:Defining folds
2024-11-26 15:33:37,247:INFO:Declaring metric variables
2024-11-26 15:33:37,253:INFO:Importing untrained model
2024-11-26 15:33:37,287:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 15:33:37,301:INFO:Starting cross validation
2024-11-26 15:33:37,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:33:41,581:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:41,635:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:41,681:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:42,064:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:42,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:42,171:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:44,975:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:45,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:45,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:45,321:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:45,356:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:45,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:48,440:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:48,470:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:48,519:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:48,843:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:48,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:49,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:51,317:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:51,388:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:51,410:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:51,495:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:51,513:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:51,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:54,000:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:54,070:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:54,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:54,173:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:54,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:54,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:54,375:INFO:Calculating mean and std
2024-11-26 15:33:54,407:INFO:Creating metrics dataframe
2024-11-26 15:33:54,407:INFO:Uploading results into container
2024-11-26 15:33:54,407:INFO:Uploading model into container now
2024-11-26 15:33:54,407:INFO:_master_model_container: 13
2024-11-26 15:33:54,407:INFO:_display_container: 2
2024-11-26 15:33:54,407:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1252, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 15:33:54,407:INFO:create_model() successfully completed......................................
2024-11-26 15:33:54,813:INFO:SubProcess create_model() end ==================================
2024-11-26 15:33:54,813:INFO:Creating metrics dataframe
2024-11-26 15:33:54,831:INFO:Initializing Dummy Classifier
2024-11-26 15:33:54,831:INFO:Total runtime is 8.822016203403471 minutes
2024-11-26 15:33:54,852:INFO:SubProcess create_model() called ==================================
2024-11-26 15:33:54,852:INFO:Initializing create_model()
2024-11-26 15:33:54,852:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E37BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:33:54,853:INFO:Checking exceptions
2024-11-26 15:33:54,853:INFO:Importing libraries
2024-11-26 15:33:54,853:INFO:Copying training dataset
2024-11-26 15:33:55,114:INFO:Defining folds
2024-11-26 15:33:55,114:INFO:Declaring metric variables
2024-11-26 15:33:55,140:INFO:Importing untrained model
2024-11-26 15:33:55,158:INFO:Dummy Classifier Imported successfully
2024-11-26 15:33:55,250:INFO:Starting cross validation
2024-11-26 15:33:55,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:33:55,537:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,561:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:55,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,651:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:55,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,881:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:55,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:56,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:56,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:56,046:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:56,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:56,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:56,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:56,595:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:56,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:56,606:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:56,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,022:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:57,071:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,262:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,270:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,304:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:57,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,593:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:57,605:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:57,839:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:57,869:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:58,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:58,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:58,468:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:33:58,485:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:33:58,526:INFO:Calculating mean and std
2024-11-26 15:33:58,526:INFO:Creating metrics dataframe
2024-11-26 15:33:58,534:INFO:Uploading results into container
2024-11-26 15:33:58,543:INFO:Uploading model into container now
2024-11-26 15:33:58,543:INFO:_master_model_container: 14
2024-11-26 15:33:58,543:INFO:_display_container: 2
2024-11-26 15:33:58,543:INFO:DummyClassifier(constant=None, random_state=1252, strategy='prior')
2024-11-26 15:33:58,543:INFO:create_model() successfully completed......................................
2024-11-26 15:33:58,963:INFO:SubProcess create_model() end ==================================
2024-11-26 15:33:58,963:INFO:Creating metrics dataframe
2024-11-26 15:33:59,107:INFO:Initializing create_model()
2024-11-26 15:33:59,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:33:59,107:INFO:Checking exceptions
2024-11-26 15:33:59,151:INFO:Importing libraries
2024-11-26 15:33:59,151:INFO:Copying training dataset
2024-11-26 15:33:59,282:INFO:Defining folds
2024-11-26 15:33:59,284:INFO:Declaring metric variables
2024-11-26 15:33:59,284:INFO:Importing untrained model
2024-11-26 15:33:59,284:INFO:Declaring custom model
2024-11-26 15:33:59,286:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:33:59,287:INFO:Cross validation set to False
2024-11-26 15:33:59,287:INFO:Fitting Model
2024-11-26 15:34:07,636:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False)
2024-11-26 15:34:07,636:INFO:create_model() successfully completed......................................
2024-11-26 15:34:08,526:INFO:_master_model_container: 14
2024-11-26 15:34:08,526:INFO:_display_container: 2
2024-11-26 15:34:08,526:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False)
2024-11-26 15:34:08,526:INFO:compare_models() successfully completed......................................
2024-11-26 15:34:08,558:INFO:Initializing automl()
2024-11-26 15:34:08,558:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 15:34:08,559:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 15:34:08,559:INFO:Checking model 0
2024-11-26 15:34:08,559:INFO:Checking model 1
2024-11-26 15:34:08,560:INFO:Checking model 2
2024-11-26 15:34:08,560:INFO:Checking model 3
2024-11-26 15:34:08,560:INFO:Checking model 4
2024-11-26 15:34:08,560:INFO:Checking model 5
2024-11-26 15:34:08,560:INFO:Checking model 6
2024-11-26 15:34:08,560:INFO:Checking model 7
2024-11-26 15:34:08,560:INFO:Checking model 8
2024-11-26 15:34:08,560:INFO:Checking model 9
2024-11-26 15:34:08,560:INFO:Checking model 10
2024-11-26 15:34:08,560:INFO:Checking model 11
2024-11-26 15:34:08,560:INFO:Checking model 12
2024-11-26 15:34:08,560:INFO:Checking model 13
2024-11-26 15:34:08,560:INFO:Initializing create_model()
2024-11-26 15:34:08,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:34:08,560:INFO:Checking exceptions
2024-11-26 15:34:08,583:INFO:Importing libraries
2024-11-26 15:34:08,583:INFO:Copying training dataset
2024-11-26 15:34:08,840:INFO:Defining folds
2024-11-26 15:34:08,840:INFO:Declaring metric variables
2024-11-26 15:34:08,840:INFO:Importing untrained model
2024-11-26 15:34:08,840:INFO:Declaring custom model
2024-11-26 15:34:08,842:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:34:08,843:INFO:Cross validation set to False
2024-11-26 15:34:08,843:INFO:Fitting Model
2024-11-26 15:34:15,513:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False)
2024-11-26 15:34:15,513:INFO:create_model() successfully completed......................................
2024-11-26 15:34:16,502:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False)
2024-11-26 15:34:16,502:INFO:automl() successfully completed......................................
2024-11-26 15:34:48,343:INFO:Initializing predict_model()
2024-11-26 15:34:48,343:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D8A1D00>)
2024-11-26 15:34:48,343:INFO:Checking exceptions
2024-11-26 15:34:48,343:INFO:Preloading libraries
2024-11-26 15:43:09,415:INFO:Initializing predict_model()
2024-11-26 15:43:09,415:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FB3063450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1252, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D8A1620>)
2024-11-26 15:43:09,415:INFO:Checking exceptions
2024-11-26 15:43:09,415:INFO:Preloading libraries
2024-11-26 15:43:09,439:INFO:Set up data.
2024-11-26 15:43:09,474:INFO:Set up index.
2024-11-26 15:50:43,033:INFO:PyCaret ClassificationExperiment
2024-11-26 15:50:43,033:INFO:Logging name: clf-default-name
2024-11-26 15:50:43,033:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 15:50:43,033:INFO:version 3.3.2
2024-11-26 15:50:43,033:INFO:Initializing setup()
2024-11-26 15:50:43,034:INFO:self.USI: 90b9
2024-11-26 15:50:43,034:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 15:50:43,034:INFO:Checking environment
2024-11-26 15:50:43,035:INFO:python_version: 3.11.9
2024-11-26 15:50:43,035:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 15:50:43,035:INFO:machine: AMD64
2024-11-26 15:50:43,035:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 15:50:43,046:INFO:Memory: svmem(total=4293971968, available=1018851328, percent=76.3, used=3275120640, free=1018851328)
2024-11-26 15:50:43,046:INFO:Physical Core: 2
2024-11-26 15:50:43,047:INFO:Logical Core: 2
2024-11-26 15:50:43,047:INFO:Checking libraries
2024-11-26 15:50:43,047:INFO:System:
2024-11-26 15:50:43,047:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 15:50:43,047:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 15:50:43,047:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 15:50:43,047:INFO:PyCaret required dependencies:
2024-11-26 15:50:43,047:INFO:                 pip: 24.3.1
2024-11-26 15:50:43,047:INFO:          setuptools: 65.5.0
2024-11-26 15:50:43,047:INFO:             pycaret: 3.3.2
2024-11-26 15:50:43,047:INFO:             IPython: 8.26.0
2024-11-26 15:50:43,047:INFO:          ipywidgets: 8.1.5
2024-11-26 15:50:43,047:INFO:                tqdm: 4.66.5
2024-11-26 15:50:43,047:INFO:               numpy: 1.26.4
2024-11-26 15:50:43,047:INFO:              pandas: 2.1.4
2024-11-26 15:50:43,047:INFO:              jinja2: 3.1.4
2024-11-26 15:50:43,047:INFO:               scipy: 1.11.4
2024-11-26 15:50:43,047:INFO:              joblib: 1.3.2
2024-11-26 15:50:43,047:INFO:             sklearn: 1.4.2
2024-11-26 15:50:43,047:INFO:                pyod: 2.0.2
2024-11-26 15:50:43,047:INFO:            imblearn: 0.12.4
2024-11-26 15:50:43,048:INFO:   category_encoders: 2.6.4
2024-11-26 15:50:43,048:INFO:            lightgbm: 4.5.0
2024-11-26 15:50:43,048:INFO:               numba: 0.60.0
2024-11-26 15:50:43,048:INFO:            requests: 2.32.3
2024-11-26 15:50:43,048:INFO:          matplotlib: 3.7.5
2024-11-26 15:50:43,048:INFO:          scikitplot: 0.3.7
2024-11-26 15:50:43,048:INFO:         yellowbrick: 1.5
2024-11-26 15:50:43,048:INFO:              plotly: 5.24.1
2024-11-26 15:50:43,048:INFO:    plotly-resampler: Not installed
2024-11-26 15:50:43,048:INFO:             kaleido: 0.2.1
2024-11-26 15:50:43,048:INFO:           schemdraw: 0.15
2024-11-26 15:50:43,048:INFO:         statsmodels: 0.14.3
2024-11-26 15:50:43,048:INFO:              sktime: 0.26.0
2024-11-26 15:50:43,048:INFO:               tbats: 1.1.3
2024-11-26 15:50:43,048:INFO:            pmdarima: 2.0.4
2024-11-26 15:50:43,048:INFO:              psutil: 6.0.0
2024-11-26 15:50:43,048:INFO:          markupsafe: 3.0.2
2024-11-26 15:50:43,048:INFO:             pickle5: Not installed
2024-11-26 15:50:43,048:INFO:         cloudpickle: 3.0.0
2024-11-26 15:50:43,048:INFO:         deprecation: 2.1.0
2024-11-26 15:50:43,048:INFO:              xxhash: 3.5.0
2024-11-26 15:50:43,048:INFO:           wurlitzer: Not installed
2024-11-26 15:50:43,048:INFO:PyCaret optional dependencies:
2024-11-26 15:50:43,048:INFO:                shap: 0.46.0
2024-11-26 15:50:43,050:INFO:           interpret: Not installed
2024-11-26 15:50:43,050:INFO:                umap: Not installed
2024-11-26 15:50:43,050:INFO:     ydata_profiling: Not installed
2024-11-26 15:50:43,050:INFO:  explainerdashboard: Not installed
2024-11-26 15:50:43,050:INFO:             autoviz: Not installed
2024-11-26 15:50:43,050:INFO:           fairlearn: Not installed
2024-11-26 15:50:43,050:INFO:          deepchecks: Not installed
2024-11-26 15:50:43,050:INFO:             xgboost: Not installed
2024-11-26 15:50:43,050:INFO:            catboost: Not installed
2024-11-26 15:50:43,050:INFO:              kmodes: Not installed
2024-11-26 15:50:43,050:INFO:             mlxtend: Not installed
2024-11-26 15:50:43,050:INFO:       statsforecast: Not installed
2024-11-26 15:50:43,050:INFO:        tune_sklearn: Not installed
2024-11-26 15:50:43,050:INFO:                 ray: Not installed
2024-11-26 15:50:43,050:INFO:            hyperopt: Not installed
2024-11-26 15:50:43,050:INFO:              optuna: 4.1.0
2024-11-26 15:50:43,050:INFO:               skopt: Not installed
2024-11-26 15:50:43,050:INFO:              mlflow: Not installed
2024-11-26 15:50:43,050:INFO:              gradio: Not installed
2024-11-26 15:50:43,050:INFO:             fastapi: Not installed
2024-11-26 15:50:43,050:INFO:             uvicorn: Not installed
2024-11-26 15:50:43,050:INFO:              m2cgen: Not installed
2024-11-26 15:50:43,050:INFO:           evidently: Not installed
2024-11-26 15:50:43,050:INFO:               fugue: Not installed
2024-11-26 15:50:43,050:INFO:           streamlit: Not installed
2024-11-26 15:50:43,050:INFO:             prophet: Not installed
2024-11-26 15:50:43,050:INFO:None
2024-11-26 15:50:43,051:INFO:Set up data.
2024-11-26 15:50:43,471:INFO:Set up folding strategy.
2024-11-26 15:50:43,471:INFO:Set up train/test split.
2024-11-26 15:50:43,690:INFO:Set up index.
2024-11-26 15:50:43,690:INFO:Assigning column types.
2024-11-26 15:50:43,817:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 15:50:43,954:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 15:50:43,957:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:50:44,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:44,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:44,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 15:50:44,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:50:44,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:44,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:44,304:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 15:50:45,006:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:50:45,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:45,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:45,537:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 15:50:45,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:45,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:45,615:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 15:50:46,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:46,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:46,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:46,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:46,582:INFO:Preparing preprocessing pipeline...
2024-11-26 15:50:46,582:INFO:Set up label encoding.
2024-11-26 15:50:46,582:INFO:Set up simple imputation.
2024-11-26 15:50:46,847:INFO:Finished creating preprocessing pipeline.
2024-11-26 15:50:46,861:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '2...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 15:50:46,861:INFO:Creating final display dataframe.
2024-11-26 15:50:47,502:INFO:Setup _display_container:                     Description             Value
0                    Session id              6453
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              90b9
2024-11-26 15:50:47,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:47,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:48,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:48,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 15:50:48,096:INFO:setup() successfully completed in 5.11s...............
2024-11-26 15:50:48,096:INFO:Initializing compare_models()
2024-11-26 15:50:48,096:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 15:50:48,096:INFO:Checking exceptions
2024-11-26 15:50:48,174:INFO:Preparing display monitor
2024-11-26 15:50:48,377:INFO:Initializing Logistic Regression
2024-11-26 15:50:48,377:INFO:Total runtime is 0.0 minutes
2024-11-26 15:50:48,377:INFO:SubProcess create_model() called ==================================
2024-11-26 15:50:48,377:INFO:Initializing create_model()
2024-11-26 15:50:48,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:50:48,377:INFO:Checking exceptions
2024-11-26 15:50:48,377:INFO:Importing libraries
2024-11-26 15:50:48,377:INFO:Copying training dataset
2024-11-26 15:50:48,492:INFO:Defining folds
2024-11-26 15:50:48,497:INFO:Declaring metric variables
2024-11-26 15:50:48,652:INFO:Importing untrained model
2024-11-26 15:50:48,660:INFO:Logistic Regression Imported successfully
2024-11-26 15:50:48,674:INFO:Starting cross validation
2024-11-26 15:50:48,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:51:01,640:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:01,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:01,726:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:02,040:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:02,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:02,115:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:03,345:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:03,403:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:03,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:03,689:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:03,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:03,784:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:04,359:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:04,382:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:04,422:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:04,821:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:04,858:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:04,881:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:05,679:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:05,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:05,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:06,446:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:06,490:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:06,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:06,977:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:07,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:07,088:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:07,616:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:07,673:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:07,690:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:07,727:INFO:Calculating mean and std
2024-11-26 15:51:07,727:INFO:Creating metrics dataframe
2024-11-26 15:51:07,727:INFO:Uploading results into container
2024-11-26 15:51:07,751:INFO:Uploading model into container now
2024-11-26 15:51:07,752:INFO:_master_model_container: 1
2024-11-26 15:51:07,752:INFO:_display_container: 2
2024-11-26 15:51:07,755:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6453, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 15:51:07,755:INFO:create_model() successfully completed......................................
2024-11-26 15:51:08,930:INFO:SubProcess create_model() end ==================================
2024-11-26 15:51:08,930:INFO:Creating metrics dataframe
2024-11-26 15:51:08,962:INFO:Initializing K Neighbors Classifier
2024-11-26 15:51:08,962:INFO:Total runtime is 0.34308238824208576 minutes
2024-11-26 15:51:08,962:INFO:SubProcess create_model() called ==================================
2024-11-26 15:51:08,962:INFO:Initializing create_model()
2024-11-26 15:51:08,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:51:08,962:INFO:Checking exceptions
2024-11-26 15:51:08,962:INFO:Importing libraries
2024-11-26 15:51:08,962:INFO:Copying training dataset
2024-11-26 15:51:09,153:INFO:Defining folds
2024-11-26 15:51:09,153:INFO:Declaring metric variables
2024-11-26 15:51:09,202:INFO:Importing untrained model
2024-11-26 15:51:09,219:INFO:K Neighbors Classifier Imported successfully
2024-11-26 15:51:09,305:INFO:Starting cross validation
2024-11-26 15:51:09,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:51:13,089:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:13,122:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:13,136:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:13,172:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:13,172:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:13,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:15,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:15,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:15,741:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:15,768:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:15,790:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:15,815:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:19,380:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:19,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:19,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:19,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:19,491:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:19,586:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:21,951:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:21,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:22,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:22,029:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:22,068:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:22,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:24,516:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:24,600:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:24,616:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:24,640:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:24,656:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:24,682:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:24,782:INFO:Calculating mean and std
2024-11-26 15:51:24,834:INFO:Creating metrics dataframe
2024-11-26 15:51:24,834:INFO:Uploading results into container
2024-11-26 15:51:24,834:INFO:Uploading model into container now
2024-11-26 15:51:24,834:INFO:_master_model_container: 2
2024-11-26 15:51:24,834:INFO:_display_container: 2
2024-11-26 15:51:24,844:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 15:51:24,844:INFO:create_model() successfully completed......................................
2024-11-26 15:51:25,193:INFO:SubProcess create_model() end ==================================
2024-11-26 15:51:25,193:INFO:Creating metrics dataframe
2024-11-26 15:51:25,214:INFO:Initializing Naive Bayes
2024-11-26 15:51:25,214:INFO:Total runtime is 0.6139518936475118 minutes
2024-11-26 15:51:25,219:INFO:SubProcess create_model() called ==================================
2024-11-26 15:51:25,219:INFO:Initializing create_model()
2024-11-26 15:51:25,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:51:25,219:INFO:Checking exceptions
2024-11-26 15:51:25,219:INFO:Importing libraries
2024-11-26 15:51:25,219:INFO:Copying training dataset
2024-11-26 15:51:25,344:INFO:Defining folds
2024-11-26 15:51:25,344:INFO:Declaring metric variables
2024-11-26 15:51:25,344:INFO:Importing untrained model
2024-11-26 15:51:25,364:INFO:Naive Bayes Imported successfully
2024-11-26 15:51:25,395:INFO:Starting cross validation
2024-11-26 15:51:25,395:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:51:25,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:25,663:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:25,663:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:25,682:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:25,682:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:25,709:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:26,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:26,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:26,129:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:26,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:26,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:26,227:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:27,352:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:27,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:27,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:27,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:27,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:27,684:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:28,018:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:28,176:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:28,241:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:28,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:28,670:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:28,839:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:29,161:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:29,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:29,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:29,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:29,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:29,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:29,493:INFO:Calculating mean and std
2024-11-26 15:51:29,508:INFO:Creating metrics dataframe
2024-11-26 15:51:29,521:INFO:Uploading results into container
2024-11-26 15:51:29,521:INFO:Uploading model into container now
2024-11-26 15:51:29,521:INFO:_master_model_container: 3
2024-11-26 15:51:29,521:INFO:_display_container: 2
2024-11-26 15:51:29,521:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 15:51:29,521:INFO:create_model() successfully completed......................................
2024-11-26 15:51:29,864:INFO:SubProcess create_model() end ==================================
2024-11-26 15:51:29,864:INFO:Creating metrics dataframe
2024-11-26 15:51:29,912:INFO:Initializing Decision Tree Classifier
2024-11-26 15:51:29,912:INFO:Total runtime is 0.6922595342000325 minutes
2024-11-26 15:51:29,931:INFO:SubProcess create_model() called ==================================
2024-11-26 15:51:29,931:INFO:Initializing create_model()
2024-11-26 15:51:29,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:51:29,931:INFO:Checking exceptions
2024-11-26 15:51:29,931:INFO:Importing libraries
2024-11-26 15:51:29,931:INFO:Copying training dataset
2024-11-26 15:51:30,161:INFO:Defining folds
2024-11-26 15:51:30,161:INFO:Declaring metric variables
2024-11-26 15:51:30,192:INFO:Importing untrained model
2024-11-26 15:51:30,192:INFO:Decision Tree Classifier Imported successfully
2024-11-26 15:51:30,254:INFO:Starting cross validation
2024-11-26 15:51:30,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:51:33,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:33,607:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:33,623:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:33,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:33,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:33,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:36,046:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:36,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:36,107:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:36,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:36,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:36,244:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:38,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:38,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:38,319:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:38,332:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:38,364:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:38,408:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:40,333:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:40,380:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:40,412:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:40,412:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:40,455:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:40,494:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:42,222:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:42,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:42,296:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:42,309:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:42,348:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:42,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:42,470:INFO:Calculating mean and std
2024-11-26 15:51:42,470:INFO:Creating metrics dataframe
2024-11-26 15:51:42,479:INFO:Uploading results into container
2024-11-26 15:51:42,481:INFO:Uploading model into container now
2024-11-26 15:51:42,482:INFO:_master_model_container: 4
2024-11-26 15:51:42,482:INFO:_display_container: 2
2024-11-26 15:51:42,488:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6453, splitter='best')
2024-11-26 15:51:42,489:INFO:create_model() successfully completed......................................
2024-11-26 15:51:42,830:INFO:SubProcess create_model() end ==================================
2024-11-26 15:51:42,830:INFO:Creating metrics dataframe
2024-11-26 15:51:42,871:INFO:Initializing SVM - Linear Kernel
2024-11-26 15:51:42,877:INFO:Total runtime is 0.9083313862482706 minutes
2024-11-26 15:51:42,877:INFO:SubProcess create_model() called ==================================
2024-11-26 15:51:42,877:INFO:Initializing create_model()
2024-11-26 15:51:42,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:51:42,877:INFO:Checking exceptions
2024-11-26 15:51:42,877:INFO:Importing libraries
2024-11-26 15:51:42,877:INFO:Copying training dataset
2024-11-26 15:51:43,080:INFO:Defining folds
2024-11-26 15:51:43,080:INFO:Declaring metric variables
2024-11-26 15:51:43,096:INFO:Importing untrained model
2024-11-26 15:51:43,130:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 15:51:43,164:INFO:Starting cross validation
2024-11-26 15:51:43,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:51:43,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:44,000:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:44,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:44,085:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:44,144:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:44,209:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:45,353:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:45,441:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:45,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:46,671:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:46,719:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:46,751:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:46,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:46,835:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:46,923:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,003:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,036:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,206:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,231:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,880:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,905:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:48,935:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:49,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:49,112:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:49,194:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:49,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:49,672:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:49,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:49,737:INFO:Calculating mean and std
2024-11-26 15:51:49,758:INFO:Creating metrics dataframe
2024-11-26 15:51:49,765:INFO:Uploading results into container
2024-11-26 15:51:49,774:INFO:Uploading model into container now
2024-11-26 15:51:49,774:INFO:_master_model_container: 5
2024-11-26 15:51:49,775:INFO:_display_container: 2
2024-11-26 15:51:49,775:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6453, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 15:51:49,775:INFO:create_model() successfully completed......................................
2024-11-26 15:51:50,173:INFO:SubProcess create_model() end ==================================
2024-11-26 15:51:50,173:INFO:Creating metrics dataframe
2024-11-26 15:51:50,173:INFO:Initializing Ridge Classifier
2024-11-26 15:51:50,173:INFO:Total runtime is 1.0299322843551635 minutes
2024-11-26 15:51:50,173:INFO:SubProcess create_model() called ==================================
2024-11-26 15:51:50,173:INFO:Initializing create_model()
2024-11-26 15:51:50,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:51:50,173:INFO:Checking exceptions
2024-11-26 15:51:50,173:INFO:Importing libraries
2024-11-26 15:51:50,173:INFO:Copying training dataset
2024-11-26 15:51:50,347:INFO:Defining folds
2024-11-26 15:51:50,347:INFO:Declaring metric variables
2024-11-26 15:51:50,347:INFO:Importing untrained model
2024-11-26 15:51:50,363:INFO:Ridge Classifier Imported successfully
2024-11-26 15:51:50,411:INFO:Starting cross validation
2024-11-26 15:51:50,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:51:50,803:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:50,810:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:50,832:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:50,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:50,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:50,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:51,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:51,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:51,302:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:51,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:51,330:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:51,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:52,645:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:52,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:52,734:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:52,761:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:52,776:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:52,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:53,364:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:53,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:53,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:53,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:53,489:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:53,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:54,390:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:54,457:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:54,483:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:54,547:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:54,584:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:54,627:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:51:54,689:INFO:Calculating mean and std
2024-11-26 15:51:54,689:INFO:Creating metrics dataframe
2024-11-26 15:51:54,689:INFO:Uploading results into container
2024-11-26 15:51:54,713:INFO:Uploading model into container now
2024-11-26 15:51:54,716:INFO:_master_model_container: 6
2024-11-26 15:51:54,716:INFO:_display_container: 2
2024-11-26 15:51:54,717:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6453, solver='auto',
                tol=0.0001)
2024-11-26 15:51:54,717:INFO:create_model() successfully completed......................................
2024-11-26 15:51:55,041:INFO:SubProcess create_model() end ==================================
2024-11-26 15:51:55,041:INFO:Creating metrics dataframe
2024-11-26 15:51:55,064:INFO:Initializing Random Forest Classifier
2024-11-26 15:51:55,064:INFO:Total runtime is 1.1114505728085835 minutes
2024-11-26 15:51:55,064:INFO:SubProcess create_model() called ==================================
2024-11-26 15:51:55,081:INFO:Initializing create_model()
2024-11-26 15:51:55,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:51:55,087:INFO:Checking exceptions
2024-11-26 15:51:55,087:INFO:Importing libraries
2024-11-26 15:51:55,087:INFO:Copying training dataset
2024-11-26 15:51:55,360:INFO:Defining folds
2024-11-26 15:51:55,361:INFO:Declaring metric variables
2024-11-26 15:51:55,396:INFO:Importing untrained model
2024-11-26 15:51:55,408:INFO:Random Forest Classifier Imported successfully
2024-11-26 15:51:55,450:INFO:Starting cross validation
2024-11-26 15:51:55,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:52:24,186:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:24,228:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:24,255:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:24,670:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:24,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:24,826:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:52,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:52,129:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:52,235:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:52,397:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:52,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:52:52,464:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:20,842:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:20,929:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:20,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:21,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:21,163:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:21,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:47,783:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:47,883:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:47,946:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:47,948:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:47,990:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:53:48,018:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:15,742:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:15,769:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:15,836:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:16,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:16,047:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:16,102:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:16,168:INFO:Calculating mean and std
2024-11-26 15:54:16,168:INFO:Creating metrics dataframe
2024-11-26 15:54:16,198:INFO:Uploading results into container
2024-11-26 15:54:16,198:INFO:Uploading model into container now
2024-11-26 15:54:16,198:INFO:_master_model_container: 7
2024-11-26 15:54:16,198:INFO:_display_container: 2
2024-11-26 15:54:16,198:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6453, verbose=0,
                       warm_start=False)
2024-11-26 15:54:16,198:INFO:create_model() successfully completed......................................
2024-11-26 15:54:16,638:INFO:SubProcess create_model() end ==================================
2024-11-26 15:54:16,638:INFO:Creating metrics dataframe
2024-11-26 15:54:16,665:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 15:54:16,666:INFO:Total runtime is 3.471495056152344 minutes
2024-11-26 15:54:16,669:INFO:SubProcess create_model() called ==================================
2024-11-26 15:54:16,669:INFO:Initializing create_model()
2024-11-26 15:54:16,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:54:16,669:INFO:Checking exceptions
2024-11-26 15:54:16,669:INFO:Importing libraries
2024-11-26 15:54:16,669:INFO:Copying training dataset
2024-11-26 15:54:16,916:INFO:Defining folds
2024-11-26 15:54:16,916:INFO:Declaring metric variables
2024-11-26 15:54:16,948:INFO:Importing untrained model
2024-11-26 15:54:16,948:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 15:54:17,003:INFO:Starting cross validation
2024-11-26 15:54:17,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:54:17,510:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:17,510:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:17,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:17,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:17,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:17,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:17,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:17,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:18,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:18,753:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:18,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:18,924:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:18,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:19,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:19,196:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:19,296:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:19,472:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:19,929:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:19,971:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:20,020:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:20,020:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:20,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:20,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:20,953:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:20,953:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:21,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,217:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,303:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,355:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:21,500:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,562:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,595:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:21,865:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,922:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:21,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 15:54:22,137:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:22,186:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:22,234:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:22,308:INFO:Calculating mean and std
2024-11-26 15:54:22,360:INFO:Creating metrics dataframe
2024-11-26 15:54:22,367:INFO:Uploading results into container
2024-11-26 15:54:22,368:INFO:Uploading model into container now
2024-11-26 15:54:22,369:INFO:_master_model_container: 8
2024-11-26 15:54:22,369:INFO:_display_container: 2
2024-11-26 15:54:22,370:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 15:54:22,370:INFO:create_model() successfully completed......................................
2024-11-26 15:54:22,934:INFO:SubProcess create_model() end ==================================
2024-11-26 15:54:22,934:INFO:Creating metrics dataframe
2024-11-26 15:54:22,945:INFO:Initializing Ada Boost Classifier
2024-11-26 15:54:22,945:INFO:Total runtime is 3.5761395335197452 minutes
2024-11-26 15:54:22,981:INFO:SubProcess create_model() called ==================================
2024-11-26 15:54:22,981:INFO:Initializing create_model()
2024-11-26 15:54:22,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:54:22,992:INFO:Checking exceptions
2024-11-26 15:54:22,992:INFO:Importing libraries
2024-11-26 15:54:22,992:INFO:Copying training dataset
2024-11-26 15:54:23,133:INFO:Defining folds
2024-11-26 15:54:23,144:INFO:Declaring metric variables
2024-11-26 15:54:23,197:INFO:Importing untrained model
2024-11-26 15:54:23,212:INFO:Ada Boost Classifier Imported successfully
2024-11-26 15:54:23,243:INFO:Starting cross validation
2024-11-26 15:54:23,273:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:54:23,517:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:23,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:31,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:31,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:31,972:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:32,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:32,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:32,050:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:32,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:32,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:39,715:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:39,762:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:39,823:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:39,823:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:39,877:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:39,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:40,138:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:40,182:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:48,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:48,702:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:48,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:48,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:48,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:48,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:48,949:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:48,971:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:56,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:56,851:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:56,881:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:56,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:56,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:57,029:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:54:57,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:54:57,166:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 15:55:04,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:04,073:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:04,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:04,508:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:04,589:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:04,647:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:04,765:INFO:Calculating mean and std
2024-11-26 15:55:04,796:INFO:Creating metrics dataframe
2024-11-26 15:55:04,820:INFO:Uploading results into container
2024-11-26 15:55:04,829:INFO:Uploading model into container now
2024-11-26 15:55:04,832:INFO:_master_model_container: 9
2024-11-26 15:55:04,832:INFO:_display_container: 2
2024-11-26 15:55:04,832:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6453)
2024-11-26 15:55:04,832:INFO:create_model() successfully completed......................................
2024-11-26 15:55:05,271:INFO:SubProcess create_model() end ==================================
2024-11-26 15:55:05,271:INFO:Creating metrics dataframe
2024-11-26 15:55:05,283:INFO:Initializing Gradient Boosting Classifier
2024-11-26 15:55:05,283:INFO:Total runtime is 4.281778192520142 minutes
2024-11-26 15:55:05,283:INFO:SubProcess create_model() called ==================================
2024-11-26 15:55:05,283:INFO:Initializing create_model()
2024-11-26 15:55:05,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:55:05,283:INFO:Checking exceptions
2024-11-26 15:55:05,283:INFO:Importing libraries
2024-11-26 15:55:05,283:INFO:Copying training dataset
2024-11-26 15:55:05,431:INFO:Defining folds
2024-11-26 15:55:05,431:INFO:Declaring metric variables
2024-11-26 15:55:05,435:INFO:Importing untrained model
2024-11-26 15:55:05,456:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 15:55:05,600:INFO:Starting cross validation
2024-11-26 15:55:05,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:55:41,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:41,847:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:41,860:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:41,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:41,945:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:55:42,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:18,233:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:18,300:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:18,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:18,351:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:18,428:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:18,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:53,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:54,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:54,103:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:54,171:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:54,213:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:56:54,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:57:27,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:57:27,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:57:27,895:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:57:28,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:57:28,531:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:57:28,570:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:02,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:02,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:02,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:02,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:03,034:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:03,098:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:03,212:INFO:Calculating mean and std
2024-11-26 15:58:03,212:INFO:Creating metrics dataframe
2024-11-26 15:58:03,245:INFO:Uploading results into container
2024-11-26 15:58:03,255:INFO:Uploading model into container now
2024-11-26 15:58:03,258:INFO:_master_model_container: 10
2024-11-26 15:58:03,258:INFO:_display_container: 2
2024-11-26 15:58:03,259:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6453, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 15:58:03,259:INFO:create_model() successfully completed......................................
2024-11-26 15:58:03,694:INFO:SubProcess create_model() end ==================================
2024-11-26 15:58:03,694:INFO:Creating metrics dataframe
2024-11-26 15:58:03,725:INFO:Initializing Linear Discriminant Analysis
2024-11-26 15:58:03,725:INFO:Total runtime is 7.255803775787355 minutes
2024-11-26 15:58:03,756:INFO:SubProcess create_model() called ==================================
2024-11-26 15:58:03,756:INFO:Initializing create_model()
2024-11-26 15:58:03,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:58:03,766:INFO:Checking exceptions
2024-11-26 15:58:03,766:INFO:Importing libraries
2024-11-26 15:58:03,766:INFO:Copying training dataset
2024-11-26 15:58:03,943:INFO:Defining folds
2024-11-26 15:58:03,943:INFO:Declaring metric variables
2024-11-26 15:58:03,965:INFO:Importing untrained model
2024-11-26 15:58:03,978:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 15:58:04,020:INFO:Starting cross validation
2024-11-26 15:58:04,021:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:58:04,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:04,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:04,506:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:04,530:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:04,544:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:04,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:04,983:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:05,029:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:05,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:05,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:05,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:05,696:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:06,264:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:06,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:06,413:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:06,599:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:06,632:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:06,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:07,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:07,599:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:07,649:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:07,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:07,924:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:07,992:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:08,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:08,175:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:08,226:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:08,367:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:08,432:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:08,474:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:08,549:INFO:Calculating mean and std
2024-11-26 15:58:08,549:INFO:Creating metrics dataframe
2024-11-26 15:58:08,549:INFO:Uploading results into container
2024-11-26 15:58:08,559:INFO:Uploading model into container now
2024-11-26 15:58:08,559:INFO:_master_model_container: 11
2024-11-26 15:58:08,559:INFO:_display_container: 2
2024-11-26 15:58:08,559:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 15:58:08,559:INFO:create_model() successfully completed......................................
2024-11-26 15:58:08,941:INFO:SubProcess create_model() end ==================================
2024-11-26 15:58:08,941:INFO:Creating metrics dataframe
2024-11-26 15:58:08,965:INFO:Initializing Extra Trees Classifier
2024-11-26 15:58:08,965:INFO:Total runtime is 7.343144663174948 minutes
2024-11-26 15:58:08,993:INFO:SubProcess create_model() called ==================================
2024-11-26 15:58:08,995:INFO:Initializing create_model()
2024-11-26 15:58:08,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:58:08,995:INFO:Checking exceptions
2024-11-26 15:58:08,995:INFO:Importing libraries
2024-11-26 15:58:08,997:INFO:Copying training dataset
2024-11-26 15:58:09,156:INFO:Defining folds
2024-11-26 15:58:09,156:INFO:Declaring metric variables
2024-11-26 15:58:09,156:INFO:Importing untrained model
2024-11-26 15:58:09,156:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:58:09,199:INFO:Starting cross validation
2024-11-26 15:58:09,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:58:23,556:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:23,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:23,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:23,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:23,815:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:23,850:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:37,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:38,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:38,070:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:38,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:38,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:38,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:52,287:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:52,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:52,621:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:52,899:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:52,899:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:58:52,930:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:06,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:06,280:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:06,360:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:06,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:06,683:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:06,737:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:19,594:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:19,731:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:19,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:20,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:20,071:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:20,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:20,146:INFO:Calculating mean and std
2024-11-26 15:59:20,164:INFO:Creating metrics dataframe
2024-11-26 15:59:20,164:INFO:Uploading results into container
2024-11-26 15:59:20,164:INFO:Uploading model into container now
2024-11-26 15:59:20,164:INFO:_master_model_container: 12
2024-11-26 15:59:20,164:INFO:_display_container: 2
2024-11-26 15:59:20,164:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False)
2024-11-26 15:59:20,164:INFO:create_model() successfully completed......................................
2024-11-26 15:59:20,629:INFO:SubProcess create_model() end ==================================
2024-11-26 15:59:20,629:INFO:Creating metrics dataframe
2024-11-26 15:59:20,652:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 15:59:20,652:INFO:Total runtime is 8.537921285629274 minutes
2024-11-26 15:59:20,660:INFO:SubProcess create_model() called ==================================
2024-11-26 15:59:20,660:INFO:Initializing create_model()
2024-11-26 15:59:20,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:59:20,660:INFO:Checking exceptions
2024-11-26 15:59:20,660:INFO:Importing libraries
2024-11-26 15:59:20,660:INFO:Copying training dataset
2024-11-26 15:59:21,066:INFO:Defining folds
2024-11-26 15:59:21,066:INFO:Declaring metric variables
2024-11-26 15:59:21,106:INFO:Importing untrained model
2024-11-26 15:59:21,121:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 15:59:21,166:INFO:Starting cross validation
2024-11-26 15:59:21,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:59:25,968:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:25,995:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:26,028:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:26,515:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:26,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:26,629:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:28,817:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:28,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:28,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:29,502:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:29,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:29,565:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:32,483:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:32,619:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:32,772:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:33,428:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:33,477:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:33,522:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:36,438:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:36,501:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:36,534:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:36,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:36,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:36,670:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:39,987:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:40,071:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:40,071:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:40,125:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:40,125:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:40,200:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:40,315:INFO:Calculating mean and std
2024-11-26 15:59:40,315:INFO:Creating metrics dataframe
2024-11-26 15:59:40,339:INFO:Uploading results into container
2024-11-26 15:59:40,354:INFO:Uploading model into container now
2024-11-26 15:59:40,354:INFO:_master_model_container: 13
2024-11-26 15:59:40,354:INFO:_display_container: 2
2024-11-26 15:59:40,370:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6453, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 15:59:40,370:INFO:create_model() successfully completed......................................
2024-11-26 15:59:40,757:INFO:SubProcess create_model() end ==================================
2024-11-26 15:59:40,757:INFO:Creating metrics dataframe
2024-11-26 15:59:40,807:INFO:Initializing Dummy Classifier
2024-11-26 15:59:40,807:INFO:Total runtime is 8.873830143610638 minutes
2024-11-26 15:59:40,815:INFO:SubProcess create_model() called ==================================
2024-11-26 15:59:40,815:INFO:Initializing create_model()
2024-11-26 15:59:40,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E4B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:59:40,815:INFO:Checking exceptions
2024-11-26 15:59:40,815:INFO:Importing libraries
2024-11-26 15:59:40,815:INFO:Copying training dataset
2024-11-26 15:59:41,062:INFO:Defining folds
2024-11-26 15:59:41,062:INFO:Declaring metric variables
2024-11-26 15:59:41,065:INFO:Importing untrained model
2024-11-26 15:59:41,071:INFO:Dummy Classifier Imported successfully
2024-11-26 15:59:41,133:INFO:Starting cross validation
2024-11-26 15:59:41,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-26 15:59:41,513:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:41,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:41,596:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:41,644:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:41,669:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:41,678:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:41,718:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:41,752:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:42,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:42,073:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:42,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:42,148:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:42,315:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:42,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:42,644:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:42,880:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:43,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:43,379:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:43,414:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:43,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:43,504:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:43,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:43,838:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:44,192:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,452:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,479:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,499:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:44,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,758:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:44,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,918:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,950:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:44,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:45,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:45,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:45,117:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:45,145:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 15:59:45,167:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 15:59:45,231:INFO:Calculating mean and std
2024-11-26 15:59:45,260:INFO:Creating metrics dataframe
2024-11-26 15:59:45,270:INFO:Uploading results into container
2024-11-26 15:59:45,271:INFO:Uploading model into container now
2024-11-26 15:59:45,274:INFO:_master_model_container: 14
2024-11-26 15:59:45,274:INFO:_display_container: 2
2024-11-26 15:59:45,275:INFO:DummyClassifier(constant=None, random_state=6453, strategy='prior')
2024-11-26 15:59:45,275:INFO:create_model() successfully completed......................................
2024-11-26 15:59:45,778:INFO:SubProcess create_model() end ==================================
2024-11-26 15:59:45,779:INFO:Creating metrics dataframe
2024-11-26 15:59:45,969:INFO:Initializing create_model()
2024-11-26 15:59:45,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:59:45,970:INFO:Checking exceptions
2024-11-26 15:59:46,035:INFO:Importing libraries
2024-11-26 15:59:46,035:INFO:Copying training dataset
2024-11-26 15:59:46,180:INFO:Defining folds
2024-11-26 15:59:46,197:INFO:Declaring metric variables
2024-11-26 15:59:46,198:INFO:Importing untrained model
2024-11-26 15:59:46,198:INFO:Declaring custom model
2024-11-26 15:59:46,198:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:59:46,198:INFO:Cross validation set to False
2024-11-26 15:59:46,198:INFO:Fitting Model
2024-11-26 15:59:55,164:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False)
2024-11-26 15:59:55,164:INFO:create_model() successfully completed......................................
2024-11-26 15:59:55,765:INFO:_master_model_container: 14
2024-11-26 15:59:55,765:INFO:_display_container: 2
2024-11-26 15:59:55,767:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False)
2024-11-26 15:59:55,767:INFO:compare_models() successfully completed......................................
2024-11-26 15:59:55,807:INFO:Initializing automl()
2024-11-26 15:59:55,807:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 15:59:55,807:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 15:59:55,807:INFO:Checking model 0
2024-11-26 15:59:55,809:INFO:Checking model 1
2024-11-26 15:59:55,809:INFO:Checking model 2
2024-11-26 15:59:55,827:INFO:Checking model 3
2024-11-26 15:59:55,849:INFO:Checking model 4
2024-11-26 15:59:55,850:INFO:Checking model 5
2024-11-26 15:59:55,851:INFO:Checking model 6
2024-11-26 15:59:55,851:INFO:Checking model 7
2024-11-26 15:59:55,852:INFO:Checking model 8
2024-11-26 15:59:55,852:INFO:Checking model 9
2024-11-26 15:59:55,853:INFO:Checking model 10
2024-11-26 15:59:55,857:INFO:Checking model 11
2024-11-26 15:59:55,858:INFO:Checking model 12
2024-11-26 15:59:55,867:INFO:Checking model 13
2024-11-26 15:59:55,870:INFO:Initializing create_model()
2024-11-26 15:59:55,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 15:59:55,870:INFO:Checking exceptions
2024-11-26 15:59:55,873:INFO:Importing libraries
2024-11-26 15:59:55,873:INFO:Copying training dataset
2024-11-26 15:59:56,029:INFO:Defining folds
2024-11-26 15:59:56,029:INFO:Declaring metric variables
2024-11-26 15:59:56,029:INFO:Importing untrained model
2024-11-26 15:59:56,029:INFO:Declaring custom model
2024-11-26 15:59:56,029:INFO:Extra Trees Classifier Imported successfully
2024-11-26 15:59:56,029:INFO:Cross validation set to False
2024-11-26 15:59:56,029:INFO:Fitting Model
2024-11-26 16:00:04,692:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False)
2024-11-26 16:00:04,692:INFO:create_model() successfully completed......................................
2024-11-26 16:00:05,881:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False)
2024-11-26 16:00:05,881:INFO:automl() successfully completed......................................
2024-11-26 16:01:06,366:INFO:Initializing predict_model()
2024-11-26 16:01:06,366:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B39C680>)
2024-11-26 16:01:06,366:INFO:Checking exceptions
2024-11-26 16:01:06,366:INFO:Preloading libraries
2024-11-26 16:01:06,382:INFO:Set up data.
2024-11-26 16:01:06,420:INFO:Set up index.
2024-11-26 16:01:17,068:INFO:Initializing plot_model()
2024-11-26 16:01:17,068:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-26 16:01:17,068:INFO:Checking exceptions
2024-11-26 16:01:17,408:INFO:Preloading libraries
2024-11-26 16:01:18,049:INFO:Copying training dataset
2024-11-26 16:01:18,049:INFO:Plot type: feature
2024-11-26 16:01:18,097:WARNING:No coef_ found. Trying feature_importances_
2024-11-26 16:01:20,696:INFO:Visual Rendered Successfully
2024-11-26 16:01:21,211:INFO:plot_model() successfully completed......................................
2024-11-26 16:01:32,125:INFO:Initializing plot_model()
2024-11-26 16:01:32,125:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA0C263D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6453, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-26 16:01:32,125:INFO:Checking exceptions
2024-11-26 16:01:32,491:INFO:Preloading libraries
2024-11-26 16:01:32,929:INFO:Copying training dataset
2024-11-26 16:01:32,929:INFO:Plot type: auc
2024-11-26 16:01:34,367:INFO:Fitting Model
2024-11-26 16:01:34,367:INFO:Scoring test/hold-out set
2024-11-26 16:01:36,782:INFO:Visual Rendered Successfully
2024-11-26 16:01:37,173:INFO:plot_model() successfully completed......................................
2024-11-26 16:08:53,078:INFO:PyCaret ClassificationExperiment
2024-11-26 16:08:53,079:INFO:Logging name: clf-default-name
2024-11-26 16:08:53,080:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 16:08:53,080:INFO:version 3.3.2
2024-11-26 16:08:53,080:INFO:Initializing setup()
2024-11-26 16:08:53,080:INFO:self.USI: 9362
2024-11-26 16:08:53,080:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 16:08:53,080:INFO:Checking environment
2024-11-26 16:08:53,080:INFO:python_version: 3.11.9
2024-11-26 16:08:53,080:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 16:08:53,080:INFO:machine: AMD64
2024-11-26 16:08:53,080:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 16:08:53,083:INFO:Memory: svmem(total=4293971968, available=870436864, percent=79.7, used=3423535104, free=870436864)
2024-11-26 16:08:53,083:INFO:Physical Core: 2
2024-11-26 16:08:53,083:INFO:Logical Core: 2
2024-11-26 16:08:53,083:INFO:Checking libraries
2024-11-26 16:08:53,083:INFO:System:
2024-11-26 16:08:53,083:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 16:08:53,083:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 16:08:53,083:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 16:08:53,083:INFO:PyCaret required dependencies:
2024-11-26 16:08:53,083:INFO:                 pip: 24.3.1
2024-11-26 16:08:53,083:INFO:          setuptools: 65.5.0
2024-11-26 16:08:53,083:INFO:             pycaret: 3.3.2
2024-11-26 16:08:53,083:INFO:             IPython: 8.26.0
2024-11-26 16:08:53,084:INFO:          ipywidgets: 8.1.5
2024-11-26 16:08:53,084:INFO:                tqdm: 4.66.5
2024-11-26 16:08:53,084:INFO:               numpy: 1.26.4
2024-11-26 16:08:53,084:INFO:              pandas: 2.1.4
2024-11-26 16:08:53,084:INFO:              jinja2: 3.1.4
2024-11-26 16:08:53,084:INFO:               scipy: 1.11.4
2024-11-26 16:08:53,084:INFO:              joblib: 1.3.2
2024-11-26 16:08:53,084:INFO:             sklearn: 1.4.2
2024-11-26 16:08:53,084:INFO:                pyod: 2.0.2
2024-11-26 16:08:53,084:INFO:            imblearn: 0.12.4
2024-11-26 16:08:53,084:INFO:   category_encoders: 2.6.4
2024-11-26 16:08:53,084:INFO:            lightgbm: 4.5.0
2024-11-26 16:08:53,084:INFO:               numba: 0.60.0
2024-11-26 16:08:53,084:INFO:            requests: 2.32.3
2024-11-26 16:08:53,084:INFO:          matplotlib: 3.7.5
2024-11-26 16:08:53,084:INFO:          scikitplot: 0.3.7
2024-11-26 16:08:53,084:INFO:         yellowbrick: 1.5
2024-11-26 16:08:53,084:INFO:              plotly: 5.24.1
2024-11-26 16:08:53,084:INFO:    plotly-resampler: Not installed
2024-11-26 16:08:53,084:INFO:             kaleido: 0.2.1
2024-11-26 16:08:53,084:INFO:           schemdraw: 0.15
2024-11-26 16:08:53,084:INFO:         statsmodels: 0.14.3
2024-11-26 16:08:53,084:INFO:              sktime: 0.26.0
2024-11-26 16:08:53,084:INFO:               tbats: 1.1.3
2024-11-26 16:08:53,084:INFO:            pmdarima: 2.0.4
2024-11-26 16:08:53,084:INFO:              psutil: 6.0.0
2024-11-26 16:08:53,084:INFO:          markupsafe: 3.0.2
2024-11-26 16:08:53,084:INFO:             pickle5: Not installed
2024-11-26 16:08:53,085:INFO:         cloudpickle: 3.0.0
2024-11-26 16:08:53,085:INFO:         deprecation: 2.1.0
2024-11-26 16:08:53,085:INFO:              xxhash: 3.5.0
2024-11-26 16:08:53,085:INFO:           wurlitzer: Not installed
2024-11-26 16:08:53,085:INFO:PyCaret optional dependencies:
2024-11-26 16:08:53,085:INFO:                shap: 0.46.0
2024-11-26 16:08:53,085:INFO:           interpret: Not installed
2024-11-26 16:08:53,085:INFO:                umap: Not installed
2024-11-26 16:08:53,085:INFO:     ydata_profiling: Not installed
2024-11-26 16:08:53,085:INFO:  explainerdashboard: Not installed
2024-11-26 16:08:53,085:INFO:             autoviz: Not installed
2024-11-26 16:08:53,085:INFO:           fairlearn: Not installed
2024-11-26 16:08:53,085:INFO:          deepchecks: Not installed
2024-11-26 16:08:53,085:INFO:             xgboost: Not installed
2024-11-26 16:08:53,085:INFO:            catboost: Not installed
2024-11-26 16:08:53,085:INFO:              kmodes: Not installed
2024-11-26 16:08:53,085:INFO:             mlxtend: Not installed
2024-11-26 16:08:53,085:INFO:       statsforecast: Not installed
2024-11-26 16:08:53,086:INFO:        tune_sklearn: Not installed
2024-11-26 16:08:53,086:INFO:                 ray: Not installed
2024-11-26 16:08:53,086:INFO:            hyperopt: Not installed
2024-11-26 16:08:53,086:INFO:              optuna: 4.1.0
2024-11-26 16:08:53,086:INFO:               skopt: Not installed
2024-11-26 16:08:53,086:INFO:              mlflow: Not installed
2024-11-26 16:08:53,086:INFO:              gradio: Not installed
2024-11-26 16:08:53,086:INFO:             fastapi: Not installed
2024-11-26 16:08:53,086:INFO:             uvicorn: Not installed
2024-11-26 16:08:53,086:INFO:              m2cgen: Not installed
2024-11-26 16:08:53,086:INFO:           evidently: Not installed
2024-11-26 16:08:53,086:INFO:               fugue: Not installed
2024-11-26 16:08:53,086:INFO:           streamlit: Not installed
2024-11-26 16:08:53,086:INFO:             prophet: Not installed
2024-11-26 16:08:53,086:INFO:None
2024-11-26 16:08:53,086:INFO:Set up data.
2024-11-26 16:08:53,345:INFO:Set up folding strategy.
2024-11-26 16:08:53,345:INFO:Set up train/test split.
2024-11-26 16:08:53,468:INFO:Set up index.
2024-11-26 16:08:53,468:INFO:Assigning column types.
2024-11-26 16:08:53,578:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 16:08:54,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 16:08:54,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 16:08:54,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:54,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:54,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 16:08:54,155:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 16:08:54,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:54,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:54,709:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 16:08:55,249:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 16:08:55,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:55,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:55,955:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 16:08:56,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:56,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:56,374:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 16:08:57,459:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:57,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:57,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:57,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:57,687:INFO:Preparing preprocessing pipeline...
2024-11-26 16:08:57,687:INFO:Set up label encoding.
2024-11-26 16:08:57,687:INFO:Set up simple imputation.
2024-11-26 16:08:57,932:INFO:Finished creating preprocessing pipeline.
2024-11-26 16:08:57,933:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '2...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 16:08:57,933:INFO:Creating final display dataframe.
2024-11-26 16:08:58,687:INFO:Setup _display_container:                     Description             Value
0                    Session id              7546
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              9362
2024-11-26 16:08:59,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:59,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:59,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:59,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:08:59,296:INFO:setup() successfully completed in 6.25s...............
2024-11-26 16:08:59,358:INFO:Initializing compare_models()
2024-11-26 16:08:59,358:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 16:08:59,358:INFO:Checking exceptions
2024-11-26 16:08:59,468:INFO:Preparing display monitor
2024-11-26 16:08:59,686:INFO:Initializing Logistic Regression
2024-11-26 16:08:59,686:INFO:Total runtime is 0.0 minutes
2024-11-26 16:08:59,686:INFO:SubProcess create_model() called ==================================
2024-11-26 16:08:59,705:INFO:Initializing create_model()
2024-11-26 16:08:59,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:08:59,718:INFO:Checking exceptions
2024-11-26 16:08:59,718:INFO:Importing libraries
2024-11-26 16:08:59,718:INFO:Copying training dataset
2024-11-26 16:09:00,155:INFO:Defining folds
2024-11-26 16:09:00,155:INFO:Declaring metric variables
2024-11-26 16:09:00,155:INFO:Importing untrained model
2024-11-26 16:09:00,213:INFO:Logistic Regression Imported successfully
2024-11-26 16:09:00,266:INFO:Starting cross validation
2024-11-26 16:09:00,268:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:09:16,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:16,834:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:16,903:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:17,014:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:17,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:17,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:18,478:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:18,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:18,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:18,749:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:18,780:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:18,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:19,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:19,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:19,802:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:19,906:INFO:Calculating mean and std
2024-11-26 16:09:19,906:INFO:Creating metrics dataframe
2024-11-26 16:09:19,906:INFO:Uploading results into container
2024-11-26 16:09:19,924:INFO:Uploading model into container now
2024-11-26 16:09:19,926:INFO:_master_model_container: 1
2024-11-26 16:09:19,927:INFO:_display_container: 2
2024-11-26 16:09:19,928:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7546, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 16:09:19,928:INFO:create_model() successfully completed......................................
2024-11-26 16:09:20,382:INFO:SubProcess create_model() end ==================================
2024-11-26 16:09:20,382:INFO:Creating metrics dataframe
2024-11-26 16:09:20,406:INFO:Initializing K Neighbors Classifier
2024-11-26 16:09:20,406:INFO:Total runtime is 0.3453307310740153 minutes
2024-11-26 16:09:20,421:INFO:SubProcess create_model() called ==================================
2024-11-26 16:09:20,421:INFO:Initializing create_model()
2024-11-26 16:09:20,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:09:20,421:INFO:Checking exceptions
2024-11-26 16:09:20,421:INFO:Importing libraries
2024-11-26 16:09:20,421:INFO:Copying training dataset
2024-11-26 16:09:20,594:INFO:Defining folds
2024-11-26 16:09:20,594:INFO:Declaring metric variables
2024-11-26 16:09:20,594:INFO:Importing untrained model
2024-11-26 16:09:20,611:INFO:K Neighbors Classifier Imported successfully
2024-11-26 16:09:20,634:INFO:Starting cross validation
2024-11-26 16:09:20,636:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:09:25,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:25,331:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:25,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:25,402:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:25,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:25,582:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:28,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:28,988:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:29,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:29,044:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:29,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:29,101:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:32,100:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:32,147:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:32,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:32,274:INFO:Calculating mean and std
2024-11-26 16:09:32,281:INFO:Creating metrics dataframe
2024-11-26 16:09:32,294:INFO:Uploading results into container
2024-11-26 16:09:32,295:INFO:Uploading model into container now
2024-11-26 16:09:32,295:INFO:_master_model_container: 2
2024-11-26 16:09:32,295:INFO:_display_container: 2
2024-11-26 16:09:32,295:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 16:09:32,295:INFO:create_model() successfully completed......................................
2024-11-26 16:09:32,658:INFO:SubProcess create_model() end ==================================
2024-11-26 16:09:32,658:INFO:Creating metrics dataframe
2024-11-26 16:09:32,680:INFO:Initializing Naive Bayes
2024-11-26 16:09:32,680:INFO:Total runtime is 0.5498993476231893 minutes
2024-11-26 16:09:32,680:INFO:SubProcess create_model() called ==================================
2024-11-26 16:09:32,680:INFO:Initializing create_model()
2024-11-26 16:09:32,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:09:32,680:INFO:Checking exceptions
2024-11-26 16:09:32,680:INFO:Importing libraries
2024-11-26 16:09:32,680:INFO:Copying training dataset
2024-11-26 16:09:32,898:INFO:Defining folds
2024-11-26 16:09:32,898:INFO:Declaring metric variables
2024-11-26 16:09:32,925:INFO:Importing untrained model
2024-11-26 16:09:32,930:INFO:Naive Bayes Imported successfully
2024-11-26 16:09:32,958:INFO:Starting cross validation
2024-11-26 16:09:32,959:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:09:33,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,326:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,344:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,376:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,760:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,770:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:33,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:34,263:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:34,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:34,752:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:34,852:INFO:Calculating mean and std
2024-11-26 16:09:34,872:INFO:Creating metrics dataframe
2024-11-26 16:09:34,872:INFO:Uploading results into container
2024-11-26 16:09:34,872:INFO:Uploading model into container now
2024-11-26 16:09:34,872:INFO:_master_model_container: 3
2024-11-26 16:09:34,872:INFO:_display_container: 2
2024-11-26 16:09:34,872:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 16:09:34,872:INFO:create_model() successfully completed......................................
2024-11-26 16:09:35,704:INFO:SubProcess create_model() end ==================================
2024-11-26 16:09:35,704:INFO:Creating metrics dataframe
2024-11-26 16:09:35,711:INFO:Initializing Decision Tree Classifier
2024-11-26 16:09:35,711:INFO:Total runtime is 0.6004130442937214 minutes
2024-11-26 16:09:35,711:INFO:SubProcess create_model() called ==================================
2024-11-26 16:09:35,711:INFO:Initializing create_model()
2024-11-26 16:09:35,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:09:35,711:INFO:Checking exceptions
2024-11-26 16:09:35,711:INFO:Importing libraries
2024-11-26 16:09:35,711:INFO:Copying training dataset
2024-11-26 16:09:35,850:INFO:Defining folds
2024-11-26 16:09:35,850:INFO:Declaring metric variables
2024-11-26 16:09:35,850:INFO:Importing untrained model
2024-11-26 16:09:35,918:INFO:Decision Tree Classifier Imported successfully
2024-11-26 16:09:35,944:INFO:Starting cross validation
2024-11-26 16:09:35,944:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:09:38,713:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:38,805:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:38,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:38,904:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:38,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:38,962:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:40,521:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:40,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:40,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:40,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:40,987:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:41,088:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:42,524:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:42,591:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:42,661:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:42,748:INFO:Calculating mean and std
2024-11-26 16:09:42,760:INFO:Creating metrics dataframe
2024-11-26 16:09:42,790:INFO:Uploading results into container
2024-11-26 16:09:42,793:INFO:Uploading model into container now
2024-11-26 16:09:42,797:INFO:_master_model_container: 4
2024-11-26 16:09:42,798:INFO:_display_container: 2
2024-11-26 16:09:42,808:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7546, splitter='best')
2024-11-26 16:09:42,809:INFO:create_model() successfully completed......................................
2024-11-26 16:09:43,213:INFO:SubProcess create_model() end ==================================
2024-11-26 16:09:43,213:INFO:Creating metrics dataframe
2024-11-26 16:09:43,229:INFO:Initializing SVM - Linear Kernel
2024-11-26 16:09:43,229:INFO:Total runtime is 0.7257044633229572 minutes
2024-11-26 16:09:43,244:INFO:SubProcess create_model() called ==================================
2024-11-26 16:09:43,244:INFO:Initializing create_model()
2024-11-26 16:09:43,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:09:43,244:INFO:Checking exceptions
2024-11-26 16:09:43,244:INFO:Importing libraries
2024-11-26 16:09:43,244:INFO:Copying training dataset
2024-11-26 16:09:43,391:INFO:Defining folds
2024-11-26 16:09:43,400:INFO:Declaring metric variables
2024-11-26 16:09:43,400:INFO:Importing untrained model
2024-11-26 16:09:43,400:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 16:09:43,510:INFO:Starting cross validation
2024-11-26 16:09:43,510:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:09:44,217:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:44,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:44,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:44,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:44,326:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:44,394:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:45,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:45,760:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:46,116:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:46,244:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:46,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:46,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:47,029:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:47,079:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:47,153:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:47,249:INFO:Calculating mean and std
2024-11-26 16:09:47,266:INFO:Creating metrics dataframe
2024-11-26 16:09:47,294:INFO:Uploading results into container
2024-11-26 16:09:47,294:INFO:Uploading model into container now
2024-11-26 16:09:47,294:INFO:_master_model_container: 5
2024-11-26 16:09:47,294:INFO:_display_container: 2
2024-11-26 16:09:47,294:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7546, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 16:09:47,294:INFO:create_model() successfully completed......................................
2024-11-26 16:09:47,654:INFO:SubProcess create_model() end ==================================
2024-11-26 16:09:47,654:INFO:Creating metrics dataframe
2024-11-26 16:09:47,675:INFO:Initializing Ridge Classifier
2024-11-26 16:09:47,675:INFO:Total runtime is 0.7998030424118041 minutes
2024-11-26 16:09:47,685:INFO:SubProcess create_model() called ==================================
2024-11-26 16:09:47,685:INFO:Initializing create_model()
2024-11-26 16:09:47,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:09:47,685:INFO:Checking exceptions
2024-11-26 16:09:47,685:INFO:Importing libraries
2024-11-26 16:09:47,685:INFO:Copying training dataset
2024-11-26 16:09:47,841:INFO:Defining folds
2024-11-26 16:09:47,841:INFO:Declaring metric variables
2024-11-26 16:09:47,841:INFO:Importing untrained model
2024-11-26 16:09:47,863:INFO:Ridge Classifier Imported successfully
2024-11-26 16:09:47,986:INFO:Starting cross validation
2024-11-26 16:09:47,986:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:09:48,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:48,420:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:48,501:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:48,501:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:48,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:48,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:49,128:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:49,327:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:49,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:49,524:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:49,556:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:49,641:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:50,177:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:50,442:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:50,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:09:50,653:INFO:Calculating mean and std
2024-11-26 16:09:50,753:INFO:Creating metrics dataframe
2024-11-26 16:09:50,757:INFO:Uploading results into container
2024-11-26 16:09:50,762:INFO:Uploading model into container now
2024-11-26 16:09:50,762:INFO:_master_model_container: 6
2024-11-26 16:09:50,762:INFO:_display_container: 2
2024-11-26 16:09:50,762:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7546, solver='auto',
                tol=0.0001)
2024-11-26 16:09:50,762:INFO:create_model() successfully completed......................................
2024-11-26 16:09:51,351:INFO:SubProcess create_model() end ==================================
2024-11-26 16:09:51,351:INFO:Creating metrics dataframe
2024-11-26 16:09:51,397:INFO:Initializing Random Forest Classifier
2024-11-26 16:09:51,397:INFO:Total runtime is 0.8618475159009297 minutes
2024-11-26 16:09:51,397:INFO:SubProcess create_model() called ==================================
2024-11-26 16:09:51,397:INFO:Initializing create_model()
2024-11-26 16:09:51,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:09:51,397:INFO:Checking exceptions
2024-11-26 16:09:51,397:INFO:Importing libraries
2024-11-26 16:09:51,397:INFO:Copying training dataset
2024-11-26 16:09:51,613:INFO:Defining folds
2024-11-26 16:09:51,613:INFO:Declaring metric variables
2024-11-26 16:09:51,663:INFO:Importing untrained model
2024-11-26 16:09:51,678:INFO:Random Forest Classifier Imported successfully
2024-11-26 16:09:51,714:INFO:Starting cross validation
2024-11-26 16:09:51,716:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:10:11,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:12,103:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:12,245:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:12,274:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:12,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:12,420:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:31,716:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:31,823:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:31,824:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:31,865:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:31,865:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:31,936:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:41,253:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:41,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:41,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:41,385:INFO:Calculating mean and std
2024-11-26 16:10:41,385:INFO:Creating metrics dataframe
2024-11-26 16:10:41,411:INFO:Uploading results into container
2024-11-26 16:10:41,411:INFO:Uploading model into container now
2024-11-26 16:10:41,411:INFO:_master_model_container: 7
2024-11-26 16:10:41,411:INFO:_display_container: 2
2024-11-26 16:10:41,411:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7546, verbose=0,
                       warm_start=False)
2024-11-26 16:10:41,411:INFO:create_model() successfully completed......................................
2024-11-26 16:10:41,805:INFO:SubProcess create_model() end ==================================
2024-11-26 16:10:41,805:INFO:Creating metrics dataframe
2024-11-26 16:10:41,805:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 16:10:41,805:INFO:Total runtime is 1.701968228816986 minutes
2024-11-26 16:10:41,805:INFO:SubProcess create_model() called ==================================
2024-11-26 16:10:41,805:INFO:Initializing create_model()
2024-11-26 16:10:41,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:10:41,805:INFO:Checking exceptions
2024-11-26 16:10:41,805:INFO:Importing libraries
2024-11-26 16:10:41,805:INFO:Copying training dataset
2024-11-26 16:10:41,976:INFO:Defining folds
2024-11-26 16:10:41,976:INFO:Declaring metric variables
2024-11-26 16:10:41,996:INFO:Importing untrained model
2024-11-26 16:10:42,022:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 16:10:42,034:INFO:Starting cross validation
2024-11-26 16:10:42,036:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:10:42,297:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:10:42,388:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:10:42,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:42,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:42,527:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:42,613:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:42,636:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:42,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:42,906:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:10:43,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:10:43,061:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:43,331:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:43,537:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:43,674:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:43,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:43,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:44,075:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:10:44,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:44,373:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:44,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:44,834:INFO:Calculating mean and std
2024-11-26 16:10:44,834:INFO:Creating metrics dataframe
2024-11-26 16:10:44,856:INFO:Uploading results into container
2024-11-26 16:10:44,867:INFO:Uploading model into container now
2024-11-26 16:10:44,869:INFO:_master_model_container: 8
2024-11-26 16:10:44,869:INFO:_display_container: 2
2024-11-26 16:10:44,870:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 16:10:44,870:INFO:create_model() successfully completed......................................
2024-11-26 16:10:45,281:INFO:SubProcess create_model() end ==================================
2024-11-26 16:10:45,282:INFO:Creating metrics dataframe
2024-11-26 16:10:45,291:INFO:Initializing Ada Boost Classifier
2024-11-26 16:10:45,291:INFO:Total runtime is 1.7600703120231627 minutes
2024-11-26 16:10:45,301:INFO:SubProcess create_model() called ==================================
2024-11-26 16:10:45,304:INFO:Initializing create_model()
2024-11-26 16:10:45,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:10:45,304:INFO:Checking exceptions
2024-11-26 16:10:45,304:INFO:Importing libraries
2024-11-26 16:10:45,304:INFO:Copying training dataset
2024-11-26 16:10:45,541:INFO:Defining folds
2024-11-26 16:10:45,541:INFO:Declaring metric variables
2024-11-26 16:10:45,551:INFO:Importing untrained model
2024-11-26 16:10:45,577:INFO:Ada Boost Classifier Imported successfully
2024-11-26 16:10:45,609:INFO:Starting cross validation
2024-11-26 16:10:45,610:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:10:45,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:10:45,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:10:52,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:52,635:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:52,640:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:52,680:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:52,680:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:52,718:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:52,881:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:10:52,987:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:10:58,604:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:58,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:58,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:58,725:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:58,788:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:58,829:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:10:58,938:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:11:03,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:03,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:03,965:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:04,039:INFO:Calculating mean and std
2024-11-26 16:11:04,039:INFO:Creating metrics dataframe
2024-11-26 16:11:04,039:INFO:Uploading results into container
2024-11-26 16:11:04,039:INFO:Uploading model into container now
2024-11-26 16:11:04,039:INFO:_master_model_container: 9
2024-11-26 16:11:04,039:INFO:_display_container: 2
2024-11-26 16:11:04,039:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7546)
2024-11-26 16:11:04,039:INFO:create_model() successfully completed......................................
2024-11-26 16:11:04,446:INFO:SubProcess create_model() end ==================================
2024-11-26 16:11:04,446:INFO:Creating metrics dataframe
2024-11-26 16:11:04,509:INFO:Initializing Gradient Boosting Classifier
2024-11-26 16:11:04,509:INFO:Total runtime is 2.0803769588470455 minutes
2024-11-26 16:11:04,509:INFO:SubProcess create_model() called ==================================
2024-11-26 16:11:04,509:INFO:Initializing create_model()
2024-11-26 16:11:04,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:11:04,529:INFO:Checking exceptions
2024-11-26 16:11:04,529:INFO:Importing libraries
2024-11-26 16:11:04,530:INFO:Copying training dataset
2024-11-26 16:11:04,752:INFO:Defining folds
2024-11-26 16:11:04,752:INFO:Declaring metric variables
2024-11-26 16:11:04,759:INFO:Importing untrained model
2024-11-26 16:11:04,783:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 16:11:04,824:INFO:Starting cross validation
2024-11-26 16:11:04,831:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:11:29,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:29,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:29,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:29,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:29,504:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:29,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:52,380:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:52,417:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:52,493:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:52,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:52,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:11:53,051:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:14,528:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:14,597:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:14,631:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:14,796:INFO:Calculating mean and std
2024-11-26 16:12:14,796:INFO:Creating metrics dataframe
2024-11-26 16:12:14,796:INFO:Uploading results into container
2024-11-26 16:12:14,796:INFO:Uploading model into container now
2024-11-26 16:12:14,796:INFO:_master_model_container: 10
2024-11-26 16:12:14,796:INFO:_display_container: 2
2024-11-26 16:12:14,826:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7546, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 16:12:14,826:INFO:create_model() successfully completed......................................
2024-11-26 16:12:15,172:INFO:SubProcess create_model() end ==================================
2024-11-26 16:12:15,172:INFO:Creating metrics dataframe
2024-11-26 16:12:15,202:INFO:Initializing Linear Discriminant Analysis
2024-11-26 16:12:15,202:INFO:Total runtime is 3.2585864265759783 minutes
2024-11-26 16:12:15,209:INFO:SubProcess create_model() called ==================================
2024-11-26 16:12:15,209:INFO:Initializing create_model()
2024-11-26 16:12:15,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:12:15,209:INFO:Checking exceptions
2024-11-26 16:12:15,209:INFO:Importing libraries
2024-11-26 16:12:15,209:INFO:Copying training dataset
2024-11-26 16:12:15,362:INFO:Defining folds
2024-11-26 16:12:15,362:INFO:Declaring metric variables
2024-11-26 16:12:15,362:INFO:Importing untrained model
2024-11-26 16:12:15,422:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 16:12:15,451:INFO:Starting cross validation
2024-11-26 16:12:15,455:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:12:15,765:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:15,828:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:15,911:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:15,944:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:15,944:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:16,015:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:16,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:16,466:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:16,691:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:16,882:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:17,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:17,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:17,643:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:17,693:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:17,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:18,257:INFO:Calculating mean and std
2024-11-26 16:12:18,257:INFO:Creating metrics dataframe
2024-11-26 16:12:18,275:INFO:Uploading results into container
2024-11-26 16:12:18,275:INFO:Uploading model into container now
2024-11-26 16:12:18,278:INFO:_master_model_container: 11
2024-11-26 16:12:18,278:INFO:_display_container: 2
2024-11-26 16:12:18,278:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 16:12:18,278:INFO:create_model() successfully completed......................................
2024-11-26 16:12:18,570:INFO:SubProcess create_model() end ==================================
2024-11-26 16:12:18,570:INFO:Creating metrics dataframe
2024-11-26 16:12:18,593:INFO:Initializing Extra Trees Classifier
2024-11-26 16:12:18,593:INFO:Total runtime is 3.3151176810264587 minutes
2024-11-26 16:12:18,601:INFO:SubProcess create_model() called ==================================
2024-11-26 16:12:18,601:INFO:Initializing create_model()
2024-11-26 16:12:18,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:12:18,601:INFO:Checking exceptions
2024-11-26 16:12:18,601:INFO:Importing libraries
2024-11-26 16:12:18,601:INFO:Copying training dataset
2024-11-26 16:12:18,789:INFO:Defining folds
2024-11-26 16:12:18,789:INFO:Declaring metric variables
2024-11-26 16:12:18,789:INFO:Importing untrained model
2024-11-26 16:12:18,835:INFO:Extra Trees Classifier Imported successfully
2024-11-26 16:12:18,857:INFO:Starting cross validation
2024-11-26 16:12:18,875:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:12:29,124:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:29,272:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:29,303:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:29,315:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:29,367:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:29,432:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:38,318:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:38,452:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:38,559:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:38,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:38,611:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:38,652:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:42,777:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:42,876:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:42,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:42,967:INFO:Calculating mean and std
2024-11-26 16:12:42,967:INFO:Creating metrics dataframe
2024-11-26 16:12:42,979:INFO:Uploading results into container
2024-11-26 16:12:42,980:INFO:Uploading model into container now
2024-11-26 16:12:42,980:INFO:_master_model_container: 12
2024-11-26 16:12:42,980:INFO:_display_container: 2
2024-11-26 16:12:42,980:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7546, verbose=0,
                     warm_start=False)
2024-11-26 16:12:42,980:INFO:create_model() successfully completed......................................
2024-11-26 16:12:43,372:INFO:SubProcess create_model() end ==================================
2024-11-26 16:12:43,372:INFO:Creating metrics dataframe
2024-11-26 16:12:43,408:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 16:12:43,408:INFO:Total runtime is 3.7286957780520122 minutes
2024-11-26 16:12:43,421:INFO:SubProcess create_model() called ==================================
2024-11-26 16:12:43,421:INFO:Initializing create_model()
2024-11-26 16:12:43,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:12:43,421:INFO:Checking exceptions
2024-11-26 16:12:43,421:INFO:Importing libraries
2024-11-26 16:12:43,421:INFO:Copying training dataset
2024-11-26 16:12:43,544:INFO:Defining folds
2024-11-26 16:12:43,544:INFO:Declaring metric variables
2024-11-26 16:12:43,602:INFO:Importing untrained model
2024-11-26 16:12:43,625:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 16:12:43,654:INFO:Starting cross validation
2024-11-26 16:12:43,658:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:12:47,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:47,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:47,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:47,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:47,879:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:47,904:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:50,173:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:50,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:50,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:50,439:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:50,483:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:50,569:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:51,713:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:51,747:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:51,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:51,852:INFO:Calculating mean and std
2024-11-26 16:12:51,852:INFO:Creating metrics dataframe
2024-11-26 16:12:51,852:INFO:Uploading results into container
2024-11-26 16:12:51,852:INFO:Uploading model into container now
2024-11-26 16:12:51,852:INFO:_master_model_container: 13
2024-11-26 16:12:51,852:INFO:_display_container: 2
2024-11-26 16:12:51,852:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7546, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 16:12:51,879:INFO:create_model() successfully completed......................................
2024-11-26 16:12:52,230:INFO:SubProcess create_model() end ==================================
2024-11-26 16:12:52,231:INFO:Creating metrics dataframe
2024-11-26 16:12:52,243:INFO:Initializing Dummy Classifier
2024-11-26 16:12:52,243:INFO:Total runtime is 3.8759465018908186 minutes
2024-11-26 16:12:52,243:INFO:SubProcess create_model() called ==================================
2024-11-26 16:12:52,243:INFO:Initializing create_model()
2024-11-26 16:12:52,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FA8E61310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:12:52,243:INFO:Checking exceptions
2024-11-26 16:12:52,243:INFO:Importing libraries
2024-11-26 16:12:52,243:INFO:Copying training dataset
2024-11-26 16:12:52,431:INFO:Defining folds
2024-11-26 16:12:52,432:INFO:Declaring metric variables
2024-11-26 16:12:52,449:INFO:Importing untrained model
2024-11-26 16:12:52,463:INFO:Dummy Classifier Imported successfully
2024-11-26 16:12:52,516:INFO:Starting cross validation
2024-11-26 16:12:52,520:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:12:52,887:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:52,887:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:52,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:52,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:53,029:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:12:53,038:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:12:53,038:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:53,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:53,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:53,344:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:53,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:53,422:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:53,432:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:12:53,432:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:12:53,444:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:53,456:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:54,112:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:54,198:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:54,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:12:54,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:12:54,407:INFO:Calculating mean and std
2024-11-26 16:12:54,407:INFO:Creating metrics dataframe
2024-11-26 16:12:54,407:INFO:Uploading results into container
2024-11-26 16:12:54,407:INFO:Uploading model into container now
2024-11-26 16:12:54,407:INFO:_master_model_container: 14
2024-11-26 16:12:54,407:INFO:_display_container: 2
2024-11-26 16:12:54,407:INFO:DummyClassifier(constant=None, random_state=7546, strategy='prior')
2024-11-26 16:12:54,407:INFO:create_model() successfully completed......................................
2024-11-26 16:12:55,359:INFO:SubProcess create_model() end ==================================
2024-11-26 16:12:55,359:INFO:Creating metrics dataframe
2024-11-26 16:12:55,443:INFO:Initializing create_model()
2024-11-26 16:12:55,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7546, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:12:55,443:INFO:Checking exceptions
2024-11-26 16:12:55,453:INFO:Importing libraries
2024-11-26 16:12:55,453:INFO:Copying training dataset
2024-11-26 16:12:55,578:INFO:Defining folds
2024-11-26 16:12:55,578:INFO:Declaring metric variables
2024-11-26 16:12:55,578:INFO:Importing untrained model
2024-11-26 16:12:55,578:INFO:Declaring custom model
2024-11-26 16:12:55,578:INFO:Extra Trees Classifier Imported successfully
2024-11-26 16:12:55,578:INFO:Cross validation set to False
2024-11-26 16:12:55,578:INFO:Fitting Model
2024-11-26 16:13:03,277:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7546, verbose=0,
                     warm_start=False)
2024-11-26 16:13:03,277:INFO:create_model() successfully completed......................................
2024-11-26 16:13:04,236:INFO:_master_model_container: 14
2024-11-26 16:13:04,236:INFO:_display_container: 2
2024-11-26 16:13:04,236:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7546, verbose=0,
                     warm_start=False)
2024-11-26 16:13:04,236:INFO:compare_models() successfully completed......................................
2024-11-26 16:13:04,357:INFO:Initializing automl()
2024-11-26 16:13:04,357:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, optimize=F1, use_holdout=False, turbo=True, return_train_score=False)
2024-11-26 16:13:04,357:INFO:Model Selection Basis : CV Results on Training set
2024-11-26 16:13:04,357:INFO:Initializing create_model()
2024-11-26 16:13:04,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F906C10D0>, estimator=None, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:13:04,357:INFO:Checking exceptions
2024-11-26 16:16:42,869:INFO:PyCaret ClassificationExperiment
2024-11-26 16:16:42,869:INFO:Logging name: clf-default-name
2024-11-26 16:16:42,869:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 16:16:42,869:INFO:version 3.3.2
2024-11-26 16:16:42,869:INFO:Initializing setup()
2024-11-26 16:16:42,869:INFO:self.USI: d49d
2024-11-26 16:16:42,869:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'USI', 'is_multiclass', 'y', 'target_param', 'seed', 'idx', '_ml_usecase', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'fold_generator', 'y_train', 'X_train', 'y_test', 'exp_name_log', 'X', 'memory', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'log_plots_param', 'logging_param', 'html_param', 'gpu_n_jobs_param'}
2024-11-26 16:16:42,869:INFO:Checking environment
2024-11-26 16:16:42,869:INFO:python_version: 3.11.9
2024-11-26 16:16:42,869:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 16:16:42,869:INFO:machine: AMD64
2024-11-26 16:16:42,869:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 16:16:42,869:INFO:Memory: svmem(total=4293971968, available=690016256, percent=83.9, used=3603955712, free=690016256)
2024-11-26 16:16:42,869:INFO:Physical Core: 2
2024-11-26 16:16:42,869:INFO:Logical Core: 2
2024-11-26 16:16:42,869:INFO:Checking libraries
2024-11-26 16:16:42,869:INFO:System:
2024-11-26 16:16:42,869:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 16:16:42,869:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 16:16:42,869:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 16:16:42,869:INFO:PyCaret required dependencies:
2024-11-26 16:16:42,869:INFO:                 pip: 24.3.1
2024-11-26 16:16:42,869:INFO:          setuptools: 65.5.0
2024-11-26 16:16:42,869:INFO:             pycaret: 3.3.2
2024-11-26 16:16:42,869:INFO:             IPython: 8.26.0
2024-11-26 16:16:42,869:INFO:          ipywidgets: 8.1.5
2024-11-26 16:16:42,869:INFO:                tqdm: 4.66.5
2024-11-26 16:16:42,869:INFO:               numpy: 1.26.4
2024-11-26 16:16:42,869:INFO:              pandas: 2.1.4
2024-11-26 16:16:42,869:INFO:              jinja2: 3.1.4
2024-11-26 16:16:42,869:INFO:               scipy: 1.11.4
2024-11-26 16:16:42,869:INFO:              joblib: 1.3.2
2024-11-26 16:16:42,869:INFO:             sklearn: 1.4.2
2024-11-26 16:16:42,869:INFO:                pyod: 2.0.2
2024-11-26 16:16:42,869:INFO:            imblearn: 0.12.4
2024-11-26 16:16:42,869:INFO:   category_encoders: 2.6.4
2024-11-26 16:16:42,869:INFO:            lightgbm: 4.5.0
2024-11-26 16:16:42,869:INFO:               numba: 0.60.0
2024-11-26 16:16:42,869:INFO:            requests: 2.32.3
2024-11-26 16:16:42,869:INFO:          matplotlib: 3.7.5
2024-11-26 16:16:42,869:INFO:          scikitplot: 0.3.7
2024-11-26 16:16:42,869:INFO:         yellowbrick: 1.5
2024-11-26 16:16:42,869:INFO:              plotly: 5.24.1
2024-11-26 16:16:42,869:INFO:    plotly-resampler: Not installed
2024-11-26 16:16:42,869:INFO:             kaleido: 0.2.1
2024-11-26 16:16:42,869:INFO:           schemdraw: 0.15
2024-11-26 16:16:42,869:INFO:         statsmodels: 0.14.3
2024-11-26 16:16:42,869:INFO:              sktime: 0.26.0
2024-11-26 16:16:42,869:INFO:               tbats: 1.1.3
2024-11-26 16:16:42,869:INFO:            pmdarima: 2.0.4
2024-11-26 16:16:42,869:INFO:              psutil: 6.0.0
2024-11-26 16:16:42,869:INFO:          markupsafe: 3.0.2
2024-11-26 16:16:42,869:INFO:             pickle5: Not installed
2024-11-26 16:16:42,869:INFO:         cloudpickle: 3.0.0
2024-11-26 16:16:42,869:INFO:         deprecation: 2.1.0
2024-11-26 16:16:42,869:INFO:              xxhash: 3.5.0
2024-11-26 16:16:42,869:INFO:           wurlitzer: Not installed
2024-11-26 16:16:42,869:INFO:PyCaret optional dependencies:
2024-11-26 16:16:42,869:INFO:                shap: 0.46.0
2024-11-26 16:16:42,869:INFO:           interpret: Not installed
2024-11-26 16:16:42,869:INFO:                umap: Not installed
2024-11-26 16:16:42,869:INFO:     ydata_profiling: Not installed
2024-11-26 16:16:42,869:INFO:  explainerdashboard: Not installed
2024-11-26 16:16:42,869:INFO:             autoviz: Not installed
2024-11-26 16:16:42,869:INFO:           fairlearn: Not installed
2024-11-26 16:16:42,869:INFO:          deepchecks: Not installed
2024-11-26 16:16:42,869:INFO:             xgboost: Not installed
2024-11-26 16:16:42,869:INFO:            catboost: Not installed
2024-11-26 16:16:42,869:INFO:              kmodes: Not installed
2024-11-26 16:16:42,869:INFO:             mlxtend: Not installed
2024-11-26 16:16:42,869:INFO:       statsforecast: Not installed
2024-11-26 16:16:42,869:INFO:        tune_sklearn: Not installed
2024-11-26 16:16:42,869:INFO:                 ray: Not installed
2024-11-26 16:16:42,869:INFO:            hyperopt: Not installed
2024-11-26 16:16:42,869:INFO:              optuna: 4.1.0
2024-11-26 16:16:42,869:INFO:               skopt: Not installed
2024-11-26 16:16:42,869:INFO:              mlflow: Not installed
2024-11-26 16:16:42,869:INFO:              gradio: Not installed
2024-11-26 16:16:42,869:INFO:             fastapi: Not installed
2024-11-26 16:16:42,869:INFO:             uvicorn: Not installed
2024-11-26 16:16:42,869:INFO:              m2cgen: Not installed
2024-11-26 16:16:42,869:INFO:           evidently: Not installed
2024-11-26 16:16:42,869:INFO:               fugue: Not installed
2024-11-26 16:16:42,869:INFO:           streamlit: Not installed
2024-11-26 16:16:42,869:INFO:             prophet: Not installed
2024-11-26 16:16:42,869:INFO:None
2024-11-26 16:16:42,869:INFO:Set up data.
2024-11-26 16:16:43,132:INFO:Set up folding strategy.
2024-11-26 16:16:43,132:INFO:Set up train/test split.
2024-11-26 16:16:43,213:INFO:Set up index.
2024-11-26 16:16:43,213:INFO:Assigning column types.
2024-11-26 16:16:43,293:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 16:16:43,338:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 16:16:43,367:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 16:16:43,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:43,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:43,494:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 16:16:43,494:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 16:16:43,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:43,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:43,582:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 16:16:43,650:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 16:16:43,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:43,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:43,885:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 16:16:43,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:43,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:43,932:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 16:16:44,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:44,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:44,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:44,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:44,853:INFO:Preparing preprocessing pipeline...
2024-11-26 16:16:45,119:INFO:Set up label encoding.
2024-11-26 16:16:45,119:INFO:Set up simple imputation.
2024-11-26 16:16:45,932:INFO:Finished creating preprocessing pipeline.
2024-11-26 16:16:45,932:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '2...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 16:16:45,932:INFO:Creating final display dataframe.
2024-11-26 16:16:46,791:INFO:Setup _display_container:                     Description             Value
0                    Session id              6896
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 39)
5        Transformed data shape       (34434, 39)
6   Transformed train set shape       (24103, 39)
7    Transformed test set shape       (10331, 39)
8              Numeric features                38
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              d49d
2024-11-26 16:16:46,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:46,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:47,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:47,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 16:16:47,166:INFO:setup() successfully completed in 4.33s...............
2024-11-26 16:16:47,166:INFO:Initializing compare_models()
2024-11-26 16:16:47,166:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 16:16:47,166:INFO:Checking exceptions
2024-11-26 16:16:47,245:INFO:Preparing display monitor
2024-11-26 16:16:47,436:INFO:Initializing Logistic Regression
2024-11-26 16:16:47,436:INFO:Total runtime is 0.0 minutes
2024-11-26 16:16:47,439:INFO:SubProcess create_model() called ==================================
2024-11-26 16:16:47,439:INFO:Initializing create_model()
2024-11-26 16:16:47,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:16:47,439:INFO:Checking exceptions
2024-11-26 16:16:47,439:INFO:Importing libraries
2024-11-26 16:16:47,439:INFO:Copying training dataset
2024-11-26 16:16:47,780:INFO:Defining folds
2024-11-26 16:16:47,780:INFO:Declaring metric variables
2024-11-26 16:16:47,799:INFO:Importing untrained model
2024-11-26 16:16:47,807:INFO:Logistic Regression Imported successfully
2024-11-26 16:16:47,896:INFO:Starting cross validation
2024-11-26 16:16:47,901:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:16:49,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:49,409:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:49,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:49,743:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:49,925:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:49,943:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:51,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:51,635:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:51,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:51,682:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:51,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:51,762:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:52,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:52,657:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:52,699:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:52,793:INFO:Calculating mean and std
2024-11-26 16:16:52,793:INFO:Creating metrics dataframe
2024-11-26 16:16:52,829:INFO:Uploading results into container
2024-11-26 16:16:52,830:INFO:Uploading model into container now
2024-11-26 16:16:52,838:INFO:_master_model_container: 1
2024-11-26 16:16:52,838:INFO:_display_container: 2
2024-11-26 16:16:52,839:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6896, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 16:16:52,840:INFO:create_model() successfully completed......................................
2024-11-26 16:16:53,356:INFO:SubProcess create_model() end ==================================
2024-11-26 16:16:53,356:INFO:Creating metrics dataframe
2024-11-26 16:16:53,387:INFO:Initializing K Neighbors Classifier
2024-11-26 16:16:53,387:INFO:Total runtime is 0.09918346007664998 minutes
2024-11-26 16:16:53,387:INFO:SubProcess create_model() called ==================================
2024-11-26 16:16:53,387:INFO:Initializing create_model()
2024-11-26 16:16:53,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:16:53,387:INFO:Checking exceptions
2024-11-26 16:16:53,387:INFO:Importing libraries
2024-11-26 16:16:53,387:INFO:Copying training dataset
2024-11-26 16:16:53,575:INFO:Defining folds
2024-11-26 16:16:53,575:INFO:Declaring metric variables
2024-11-26 16:16:53,621:INFO:Importing untrained model
2024-11-26 16:16:53,621:INFO:K Neighbors Classifier Imported successfully
2024-11-26 16:16:53,668:INFO:Starting cross validation
2024-11-26 16:16:53,673:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:16:58,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:58,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:58,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:58,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:58,184:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:16:58,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:01,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:01,080:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:01,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:01,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:01,220:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:01,222:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:03,873:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:03,926:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:03,994:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:04,094:INFO:Calculating mean and std
2024-11-26 16:17:04,094:INFO:Creating metrics dataframe
2024-11-26 16:17:04,094:INFO:Uploading results into container
2024-11-26 16:17:04,109:INFO:Uploading model into container now
2024-11-26 16:17:04,122:INFO:_master_model_container: 2
2024-11-26 16:17:04,122:INFO:_display_container: 2
2024-11-26 16:17:04,122:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 16:17:04,122:INFO:create_model() successfully completed......................................
2024-11-26 16:17:04,539:INFO:SubProcess create_model() end ==================================
2024-11-26 16:17:04,539:INFO:Creating metrics dataframe
2024-11-26 16:17:04,561:INFO:Initializing Naive Bayes
2024-11-26 16:17:04,561:INFO:Total runtime is 0.28540613651275637 minutes
2024-11-26 16:17:04,564:INFO:SubProcess create_model() called ==================================
2024-11-26 16:17:04,564:INFO:Initializing create_model()
2024-11-26 16:17:04,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:17:04,564:INFO:Checking exceptions
2024-11-26 16:17:04,564:INFO:Importing libraries
2024-11-26 16:17:04,564:INFO:Copying training dataset
2024-11-26 16:17:04,679:INFO:Defining folds
2024-11-26 16:17:04,680:INFO:Declaring metric variables
2024-11-26 16:17:04,729:INFO:Importing untrained model
2024-11-26 16:17:04,737:INFO:Naive Bayes Imported successfully
2024-11-26 16:17:04,749:INFO:Starting cross validation
2024-11-26 16:17:04,749:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:17:05,198:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:05,204:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:05,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:05,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:05,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:05,371:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:05,765:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:05,840:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:06,049:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:06,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:06,473:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:06,555:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:07,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:07,103:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:07,628:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:07,854:INFO:Calculating mean and std
2024-11-26 16:17:07,858:INFO:Creating metrics dataframe
2024-11-26 16:17:07,860:INFO:Uploading results into container
2024-11-26 16:17:07,861:INFO:Uploading model into container now
2024-11-26 16:17:07,862:INFO:_master_model_container: 3
2024-11-26 16:17:07,863:INFO:_display_container: 2
2024-11-26 16:17:07,863:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 16:17:07,863:INFO:create_model() successfully completed......................................
2024-11-26 16:17:08,179:INFO:SubProcess create_model() end ==================================
2024-11-26 16:17:08,179:INFO:Creating metrics dataframe
2024-11-26 16:17:08,200:INFO:Initializing Decision Tree Classifier
2024-11-26 16:17:08,200:INFO:Total runtime is 0.34606842597325643 minutes
2024-11-26 16:17:08,210:INFO:SubProcess create_model() called ==================================
2024-11-26 16:17:08,210:INFO:Initializing create_model()
2024-11-26 16:17:08,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:17:08,210:INFO:Checking exceptions
2024-11-26 16:17:08,210:INFO:Importing libraries
2024-11-26 16:17:08,210:INFO:Copying training dataset
2024-11-26 16:17:08,331:INFO:Defining folds
2024-11-26 16:17:08,331:INFO:Declaring metric variables
2024-11-26 16:17:08,356:INFO:Importing untrained model
2024-11-26 16:17:08,398:INFO:Decision Tree Classifier Imported successfully
2024-11-26 16:17:08,436:INFO:Starting cross validation
2024-11-26 16:17:08,446:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:17:11,301:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:11,362:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:11,420:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:11,420:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:11,443:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:11,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:13,082:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:13,209:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:13,241:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:13,262:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:13,293:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:13,352:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:14,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:14,772:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:14,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:14,974:INFO:Calculating mean and std
2024-11-26 16:17:14,974:INFO:Creating metrics dataframe
2024-11-26 16:17:14,974:INFO:Uploading results into container
2024-11-26 16:17:14,974:INFO:Uploading model into container now
2024-11-26 16:17:14,988:INFO:_master_model_container: 4
2024-11-26 16:17:14,988:INFO:_display_container: 2
2024-11-26 16:17:14,988:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6896, splitter='best')
2024-11-26 16:17:14,988:INFO:create_model() successfully completed......................................
2024-11-26 16:17:15,598:INFO:SubProcess create_model() end ==================================
2024-11-26 16:17:15,598:INFO:Creating metrics dataframe
2024-11-26 16:17:15,648:INFO:Initializing SVM - Linear Kernel
2024-11-26 16:17:15,649:INFO:Total runtime is 0.47021153767903645 minutes
2024-11-26 16:17:15,658:INFO:SubProcess create_model() called ==================================
2024-11-26 16:17:15,659:INFO:Initializing create_model()
2024-11-26 16:17:15,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:17:15,659:INFO:Checking exceptions
2024-11-26 16:17:15,659:INFO:Importing libraries
2024-11-26 16:17:15,659:INFO:Copying training dataset
2024-11-26 16:17:15,778:INFO:Defining folds
2024-11-26 16:17:15,778:INFO:Declaring metric variables
2024-11-26 16:17:15,812:INFO:Importing untrained model
2024-11-26 16:17:15,816:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 16:17:15,839:INFO:Starting cross validation
2024-11-26 16:17:15,841:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:17:16,677:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:16,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:16,779:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:16,849:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:16,872:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:16,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:18,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:18,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:18,858:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:18,929:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:18,950:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:18,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:19,721:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:19,788:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:19,842:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:19,907:INFO:Calculating mean and std
2024-11-26 16:17:19,907:INFO:Creating metrics dataframe
2024-11-26 16:17:19,907:INFO:Uploading results into container
2024-11-26 16:17:19,907:INFO:Uploading model into container now
2024-11-26 16:17:19,907:INFO:_master_model_container: 5
2024-11-26 16:17:19,907:INFO:_display_container: 2
2024-11-26 16:17:19,907:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6896, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 16:17:19,907:INFO:create_model() successfully completed......................................
2024-11-26 16:17:20,300:INFO:SubProcess create_model() end ==================================
2024-11-26 16:17:20,300:INFO:Creating metrics dataframe
2024-11-26 16:17:20,326:INFO:Initializing Ridge Classifier
2024-11-26 16:17:20,326:INFO:Total runtime is 0.5481598456700643 minutes
2024-11-26 16:17:20,326:INFO:SubProcess create_model() called ==================================
2024-11-26 16:17:20,326:INFO:Initializing create_model()
2024-11-26 16:17:20,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:17:20,326:INFO:Checking exceptions
2024-11-26 16:17:20,326:INFO:Importing libraries
2024-11-26 16:17:20,326:INFO:Copying training dataset
2024-11-26 16:17:20,451:INFO:Defining folds
2024-11-26 16:17:20,451:INFO:Declaring metric variables
2024-11-26 16:17:20,518:INFO:Importing untrained model
2024-11-26 16:17:20,524:INFO:Ridge Classifier Imported successfully
2024-11-26 16:17:20,543:INFO:Starting cross validation
2024-11-26 16:17:20,545:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:17:20,841:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:20,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:20,943:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,012:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,071:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,083:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,413:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,446:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,469:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,496:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,527:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:21,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:22,154:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:22,190:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:22,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:22,551:INFO:Calculating mean and std
2024-11-26 16:17:22,554:INFO:Creating metrics dataframe
2024-11-26 16:17:22,554:INFO:Uploading results into container
2024-11-26 16:17:22,554:INFO:Uploading model into container now
2024-11-26 16:17:22,554:INFO:_master_model_container: 6
2024-11-26 16:17:22,554:INFO:_display_container: 2
2024-11-26 16:17:22,554:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6896, solver='auto',
                tol=0.0001)
2024-11-26 16:17:22,567:INFO:create_model() successfully completed......................................
2024-11-26 16:17:23,474:INFO:SubProcess create_model() end ==================================
2024-11-26 16:17:23,474:INFO:Creating metrics dataframe
2024-11-26 16:17:23,497:INFO:Initializing Random Forest Classifier
2024-11-26 16:17:23,497:INFO:Total runtime is 0.6010088801383972 minutes
2024-11-26 16:17:23,504:INFO:SubProcess create_model() called ==================================
2024-11-26 16:17:23,504:INFO:Initializing create_model()
2024-11-26 16:17:23,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:17:23,504:INFO:Checking exceptions
2024-11-26 16:17:23,504:INFO:Importing libraries
2024-11-26 16:17:23,504:INFO:Copying training dataset
2024-11-26 16:17:23,567:INFO:Defining folds
2024-11-26 16:17:23,567:INFO:Declaring metric variables
2024-11-26 16:17:23,583:INFO:Importing untrained model
2024-11-26 16:17:23,614:INFO:Random Forest Classifier Imported successfully
2024-11-26 16:17:23,640:INFO:Starting cross validation
2024-11-26 16:17:23,663:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:17:45,557:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:45,704:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:45,925:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:45,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:46,019:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:17:46,111:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:06,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:06,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:06,386:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:06,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:06,523:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:06,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:15,796:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:15,905:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:15,988:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:16,054:INFO:Calculating mean and std
2024-11-26 16:18:16,054:INFO:Creating metrics dataframe
2024-11-26 16:18:16,054:INFO:Uploading results into container
2024-11-26 16:18:16,163:INFO:Uploading model into container now
2024-11-26 16:18:16,163:INFO:_master_model_container: 7
2024-11-26 16:18:16,163:INFO:_display_container: 2
2024-11-26 16:18:16,163:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6896, verbose=0,
                       warm_start=False)
2024-11-26 16:18:16,163:INFO:create_model() successfully completed......................................
2024-11-26 16:18:16,715:INFO:SubProcess create_model() end ==================================
2024-11-26 16:18:16,715:INFO:Creating metrics dataframe
2024-11-26 16:18:16,761:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 16:18:16,761:INFO:Total runtime is 1.4887418508529664 minutes
2024-11-26 16:18:16,775:INFO:SubProcess create_model() called ==================================
2024-11-26 16:18:16,775:INFO:Initializing create_model()
2024-11-26 16:18:16,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:18:16,775:INFO:Checking exceptions
2024-11-26 16:18:16,775:INFO:Importing libraries
2024-11-26 16:18:16,775:INFO:Copying training dataset
2024-11-26 16:18:16,949:INFO:Defining folds
2024-11-26 16:18:16,949:INFO:Declaring metric variables
2024-11-26 16:18:16,978:INFO:Importing untrained model
2024-11-26 16:18:16,978:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 16:18:17,023:INFO:Starting cross validation
2024-11-26 16:18:17,023:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:18:17,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:18:17,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:18:17,499:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:17,540:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:17,547:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:17,591:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:17,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:17,686:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:18,017:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:18:18,063:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:18:18,720:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:18,788:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:18,830:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:18,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:18,889:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:19,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:19,259:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-26 16:18:19,716:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:19,756:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:19,806:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:19,882:INFO:Calculating mean and std
2024-11-26 16:18:19,912:INFO:Creating metrics dataframe
2024-11-26 16:18:19,935:INFO:Uploading results into container
2024-11-26 16:18:19,942:INFO:Uploading model into container now
2024-11-26 16:18:19,944:INFO:_master_model_container: 8
2024-11-26 16:18:19,944:INFO:_display_container: 2
2024-11-26 16:18:19,944:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 16:18:19,944:INFO:create_model() successfully completed......................................
2024-11-26 16:18:20,265:INFO:SubProcess create_model() end ==================================
2024-11-26 16:18:20,265:INFO:Creating metrics dataframe
2024-11-26 16:18:20,288:INFO:Initializing Ada Boost Classifier
2024-11-26 16:18:20,288:INFO:Total runtime is 1.547527015209198 minutes
2024-11-26 16:18:20,288:INFO:SubProcess create_model() called ==================================
2024-11-26 16:18:20,305:INFO:Initializing create_model()
2024-11-26 16:18:20,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:18:20,305:INFO:Checking exceptions
2024-11-26 16:18:20,305:INFO:Importing libraries
2024-11-26 16:18:20,305:INFO:Copying training dataset
2024-11-26 16:18:20,584:INFO:Defining folds
2024-11-26 16:18:20,584:INFO:Declaring metric variables
2024-11-26 16:18:20,623:INFO:Importing untrained model
2024-11-26 16:18:20,657:INFO:Ada Boost Classifier Imported successfully
2024-11-26 16:18:20,699:INFO:Starting cross validation
2024-11-26 16:18:20,699:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:18:20,896:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:18:20,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:18:27,426:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:27,470:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:27,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:27,612:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:27,638:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:27,690:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:27,850:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:18:27,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:18:33,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:33,391:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:33,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:33,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:33,542:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:33,654:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:33,700:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 16:18:38,827:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:38,891:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:38,993:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:18:39,128:INFO:Calculating mean and std
2024-11-26 16:18:39,130:INFO:Creating metrics dataframe
2024-11-26 16:18:39,143:INFO:Uploading results into container
2024-11-26 16:18:39,145:INFO:Uploading model into container now
2024-11-26 16:18:39,145:INFO:_master_model_container: 9
2024-11-26 16:18:39,145:INFO:_display_container: 2
2024-11-26 16:18:39,145:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6896)
2024-11-26 16:18:39,145:INFO:create_model() successfully completed......................................
2024-11-26 16:18:39,711:INFO:SubProcess create_model() end ==================================
2024-11-26 16:18:39,711:INFO:Creating metrics dataframe
2024-11-26 16:18:39,738:INFO:Initializing Gradient Boosting Classifier
2024-11-26 16:18:39,738:INFO:Total runtime is 1.8716875274976095 minutes
2024-11-26 16:18:39,747:INFO:SubProcess create_model() called ==================================
2024-11-26 16:18:39,747:INFO:Initializing create_model()
2024-11-26 16:18:39,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:18:39,747:INFO:Checking exceptions
2024-11-26 16:18:39,747:INFO:Importing libraries
2024-11-26 16:18:39,748:INFO:Copying training dataset
2024-11-26 16:18:39,924:INFO:Defining folds
2024-11-26 16:18:39,924:INFO:Declaring metric variables
2024-11-26 16:18:39,963:INFO:Importing untrained model
2024-11-26 16:18:39,971:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 16:18:39,994:INFO:Starting cross validation
2024-11-26 16:18:39,998:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:19:07,058:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:07,218:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:07,302:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:07,980:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:08,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:08,173:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:33,264:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:33,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:33,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:34,289:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:34,342:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:34,417:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:55,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:55,493:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:55,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:55,639:INFO:Calculating mean and std
2024-11-26 16:19:55,641:INFO:Creating metrics dataframe
2024-11-26 16:19:55,666:INFO:Uploading results into container
2024-11-26 16:19:55,671:INFO:Uploading model into container now
2024-11-26 16:19:55,673:INFO:_master_model_container: 10
2024-11-26 16:19:55,673:INFO:_display_container: 2
2024-11-26 16:19:55,675:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6896, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 16:19:55,675:INFO:create_model() successfully completed......................................
2024-11-26 16:19:56,076:INFO:SubProcess create_model() end ==================================
2024-11-26 16:19:56,076:INFO:Creating metrics dataframe
2024-11-26 16:19:56,116:INFO:Initializing Linear Discriminant Analysis
2024-11-26 16:19:56,116:INFO:Total runtime is 3.1446601549784345 minutes
2024-11-26 16:19:56,120:INFO:SubProcess create_model() called ==================================
2024-11-26 16:19:56,120:INFO:Initializing create_model()
2024-11-26 16:19:56,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:19:56,121:INFO:Checking exceptions
2024-11-26 16:19:56,121:INFO:Importing libraries
2024-11-26 16:19:56,121:INFO:Copying training dataset
2024-11-26 16:19:56,256:INFO:Defining folds
2024-11-26 16:19:56,257:INFO:Declaring metric variables
2024-11-26 16:19:56,292:INFO:Importing untrained model
2024-11-26 16:19:56,306:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 16:19:56,360:INFO:Starting cross validation
2024-11-26 16:19:56,363:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:19:56,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:56,757:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:56,814:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:56,814:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:56,883:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:56,883:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:57,247:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:57,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:57,336:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:57,360:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:57,450:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:57,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:58,067:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:58,321:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:58,489:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:19:58,732:INFO:Calculating mean and std
2024-11-26 16:19:58,732:INFO:Creating metrics dataframe
2024-11-26 16:19:58,732:INFO:Uploading results into container
2024-11-26 16:19:58,732:INFO:Uploading model into container now
2024-11-26 16:19:58,755:INFO:_master_model_container: 11
2024-11-26 16:19:58,755:INFO:_display_container: 2
2024-11-26 16:19:58,756:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 16:19:58,756:INFO:create_model() successfully completed......................................
2024-11-26 16:19:59,128:INFO:SubProcess create_model() end ==================================
2024-11-26 16:19:59,128:INFO:Creating metrics dataframe
2024-11-26 16:19:59,169:INFO:Initializing Extra Trees Classifier
2024-11-26 16:19:59,169:INFO:Total runtime is 3.1955443501472476 minutes
2024-11-26 16:19:59,186:INFO:SubProcess create_model() called ==================================
2024-11-26 16:19:59,186:INFO:Initializing create_model()
2024-11-26 16:19:59,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:19:59,186:INFO:Checking exceptions
2024-11-26 16:19:59,186:INFO:Importing libraries
2024-11-26 16:19:59,186:INFO:Copying training dataset
2024-11-26 16:19:59,367:INFO:Defining folds
2024-11-26 16:19:59,374:INFO:Declaring metric variables
2024-11-26 16:19:59,380:INFO:Importing untrained model
2024-11-26 16:19:59,389:INFO:Extra Trees Classifier Imported successfully
2024-11-26 16:19:59,431:INFO:Starting cross validation
2024-11-26 16:19:59,433:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:20:10,218:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:10,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:10,375:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:10,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:10,450:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:10,577:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:20,157:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:20,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:20,322:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:20,334:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:20,371:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:20,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:25,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:25,502:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:25,614:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:25,678:INFO:Calculating mean and std
2024-11-26 16:20:25,678:INFO:Creating metrics dataframe
2024-11-26 16:20:25,791:INFO:Uploading results into container
2024-11-26 16:20:25,791:INFO:Uploading model into container now
2024-11-26 16:20:25,791:INFO:_master_model_container: 12
2024-11-26 16:20:25,791:INFO:_display_container: 2
2024-11-26 16:20:25,791:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False)
2024-11-26 16:20:25,791:INFO:create_model() successfully completed......................................
2024-11-26 16:20:26,412:INFO:SubProcess create_model() end ==================================
2024-11-26 16:20:26,412:INFO:Creating metrics dataframe
2024-11-26 16:20:26,441:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 16:20:26,441:INFO:Total runtime is 3.6500840226809186 minutes
2024-11-26 16:20:26,441:INFO:SubProcess create_model() called ==================================
2024-11-26 16:20:26,441:INFO:Initializing create_model()
2024-11-26 16:20:26,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:20:26,441:INFO:Checking exceptions
2024-11-26 16:20:26,441:INFO:Importing libraries
2024-11-26 16:20:26,441:INFO:Copying training dataset
2024-11-26 16:20:26,634:INFO:Defining folds
2024-11-26 16:20:26,634:INFO:Declaring metric variables
2024-11-26 16:20:26,680:INFO:Importing untrained model
2024-11-26 16:20:26,698:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 16:20:26,777:INFO:Starting cross validation
2024-11-26 16:20:26,780:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:20:30,837:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:30,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:31,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:31,193:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:31,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:31,320:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:33,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:33,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:33,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:33,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:33,622:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:33,622:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:35,138:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:35,204:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:35,257:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:35,397:INFO:Calculating mean and std
2024-11-26 16:20:35,397:INFO:Creating metrics dataframe
2024-11-26 16:20:35,397:INFO:Uploading results into container
2024-11-26 16:20:35,397:INFO:Uploading model into container now
2024-11-26 16:20:35,397:INFO:_master_model_container: 13
2024-11-26 16:20:35,397:INFO:_display_container: 2
2024-11-26 16:20:35,397:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6896, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 16:20:35,397:INFO:create_model() successfully completed......................................
2024-11-26 16:20:35,777:INFO:SubProcess create_model() end ==================================
2024-11-26 16:20:35,777:INFO:Creating metrics dataframe
2024-11-26 16:20:35,804:INFO:Initializing Dummy Classifier
2024-11-26 16:20:35,804:INFO:Total runtime is 3.8061200658480328 minutes
2024-11-26 16:20:35,827:INFO:SubProcess create_model() called ==================================
2024-11-26 16:20:35,828:INFO:Initializing create_model()
2024-11-26 16:20:35,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022FB2E8C410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:20:35,828:INFO:Checking exceptions
2024-11-26 16:20:35,828:INFO:Importing libraries
2024-11-26 16:20:35,830:INFO:Copying training dataset
2024-11-26 16:20:35,982:INFO:Defining folds
2024-11-26 16:20:35,982:INFO:Declaring metric variables
2024-11-26 16:20:36,007:INFO:Importing untrained model
2024-11-26 16:20:36,028:INFO:Dummy Classifier Imported successfully
2024-11-26 16:20:36,085:INFO:Starting cross validation
2024-11-26 16:20:36,085:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 16:20:36,352:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,378:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,447:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,458:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:20:36,470:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,470:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:20:36,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,794:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,831:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,865:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,935:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,942:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:20:36,987:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:36,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:20:37,048:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:37,915:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:38,103:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:38,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 16:20:38,193:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 16:20:38,392:INFO:Calculating mean and std
2024-11-26 16:20:38,392:INFO:Creating metrics dataframe
2024-11-26 16:20:38,392:INFO:Uploading results into container
2024-11-26 16:20:38,392:INFO:Uploading model into container now
2024-11-26 16:20:38,392:INFO:_master_model_container: 14
2024-11-26 16:20:38,392:INFO:_display_container: 2
2024-11-26 16:20:38,392:INFO:DummyClassifier(constant=None, random_state=6896, strategy='prior')
2024-11-26 16:20:38,392:INFO:create_model() successfully completed......................................
2024-11-26 16:20:39,361:INFO:SubProcess create_model() end ==================================
2024-11-26 16:20:39,361:INFO:Creating metrics dataframe
2024-11-26 16:20:39,611:INFO:Initializing create_model()
2024-11-26 16:20:39,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:20:39,611:INFO:Checking exceptions
2024-11-26 16:20:39,611:INFO:Importing libraries
2024-11-26 16:20:39,611:INFO:Copying training dataset
2024-11-26 16:20:39,782:INFO:Defining folds
2024-11-26 16:20:39,782:INFO:Declaring metric variables
2024-11-26 16:20:39,782:INFO:Importing untrained model
2024-11-26 16:20:39,782:INFO:Declaring custom model
2024-11-26 16:20:39,782:INFO:Extra Trees Classifier Imported successfully
2024-11-26 16:20:39,782:INFO:Cross validation set to False
2024-11-26 16:20:39,782:INFO:Fitting Model
2024-11-26 16:20:49,030:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False)
2024-11-26 16:20:49,030:INFO:create_model() successfully completed......................................
2024-11-26 16:20:49,827:INFO:_master_model_container: 14
2024-11-26 16:20:49,827:INFO:_display_container: 2
2024-11-26 16:20:49,833:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False)
2024-11-26 16:20:49,833:INFO:compare_models() successfully completed......................................
2024-11-26 16:20:49,919:INFO:Initializing automl()
2024-11-26 16:20:49,919:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, optimize=F1, use_holdout=True, turbo=True, return_train_score=False)
2024-11-26 16:20:49,919:INFO:Model Selection Basis : Holdout set
2024-11-26 16:20:49,976:INFO:Checking model {'model': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6896, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5795  0.6079  0.5795  0.5794  0.5789  0.1580  0.1583
1       0.5841  0.6152  0.5841  0.5846  0.5835  0.1683  0.1688
2       0.5833  0.6027  0.5833  0.5878  0.5821  0.1703  0.1723
3       0.5797  0.6075  0.5797  0.5800  0.5789  0.1590  0.1596
4       0.5710  0.5942  0.5710  0.5707  0.5704  0.1407  0.1409
Mean    0.5795  0.6055  0.5795  0.5805  0.5787  0.1592  0.1600
Std     0.0047  0.0069  0.0047  0.0058  0.0046  0.0105  0.0109, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:20:49,976:INFO:Initializing predict_model()
2024-11-26 16:20:49,976:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6896, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33F740>)
2024-11-26 16:20:49,976:INFO:Checking exceptions
2024-11-26 16:20:49,976:INFO:Preloading libraries
2024-11-26 16:20:50,339:WARNING:Model LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6896, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is not fitted, running create_model
2024-11-26 16:20:50,354:INFO:Initializing create_model()
2024-11-26 16:20:50,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6896, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:20:50,354:INFO:Checking exceptions
2024-11-26 16:20:50,371:INFO:Importing libraries
2024-11-26 16:20:50,371:INFO:Copying training dataset
2024-11-26 16:20:50,479:INFO:Defining folds
2024-11-26 16:20:50,479:INFO:Declaring metric variables
2024-11-26 16:20:50,479:INFO:Importing untrained model
2024-11-26 16:20:50,479:INFO:Declaring custom model
2024-11-26 16:20:50,479:INFO:Logistic Regression Imported successfully
2024-11-26 16:20:50,479:INFO:Cross validation set to False
2024-11-26 16:20:50,479:INFO:Fitting Model
2024-11-26 16:20:51,919:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6896, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 16:20:51,920:INFO:create_model() successfully completed......................................
2024-11-26 16:20:52,698:INFO:Initializing predict_model()
2024-11-26 16:20:52,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6896, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:20:52,698:INFO:Checking exceptions
2024-11-26 16:20:52,698:INFO:Preloading libraries
2024-11-26 16:20:53,932:INFO:Checking model {'model': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.6748  0.7724  0.6748  0.7155  0.6606  0.3538  0.3905
1       0.6868  0.7730  0.6868  0.7223  0.6737  0.3734  0.4074
2       0.6870  0.7757  0.6870  0.7110  0.6739  0.3641  0.3916
3       0.6809  0.7676  0.6809  0.7180  0.6672  0.3629  0.3977
4       0.6718  0.7733  0.6718  0.7090  0.6587  0.3483  0.3815
Mean    0.6802  0.7724  0.6802  0.7151  0.6668  0.3605  0.3937
Std     0.0062  0.0027  0.0062  0.0048  0.0063  0.0087  0.0086, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:20:53,932:INFO:Initializing predict_model()
2024-11-26 16:20:53,932:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33FE20>)
2024-11-26 16:20:53,932:INFO:Checking exceptions
2024-11-26 16:20:53,932:INFO:Preloading libraries
2024-11-26 16:20:54,229:WARNING:Model KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') is not fitted, running create_model
2024-11-26 16:20:54,229:INFO:Initializing create_model()
2024-11-26 16:20:54,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:20:54,229:INFO:Checking exceptions
2024-11-26 16:20:54,229:INFO:Importing libraries
2024-11-26 16:20:54,229:INFO:Copying training dataset
2024-11-26 16:20:54,355:INFO:Defining folds
2024-11-26 16:20:54,355:INFO:Declaring metric variables
2024-11-26 16:20:54,355:INFO:Importing untrained model
2024-11-26 16:20:54,355:INFO:Declaring custom model
2024-11-26 16:20:54,355:INFO:K Neighbors Classifier Imported successfully
2024-11-26 16:20:54,355:INFO:Cross validation set to False
2024-11-26 16:20:54,355:INFO:Fitting Model
2024-11-26 16:20:54,417:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 16:20:54,417:INFO:create_model() successfully completed......................................
2024-11-26 16:20:54,839:INFO:Initializing predict_model()
2024-11-26 16:20:54,839:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:20:54,839:INFO:Checking exceptions
2024-11-26 16:20:54,839:INFO:Preloading libraries
2024-11-26 16:21:01,273:INFO:Checking model {'model': GaussianNB(priors=None, var_smoothing=1e-09), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5746  0.6134  0.5746  0.5758  0.5740  0.1502  0.1508
1       0.5814  0.6148  0.5814  0.5823  0.5803  0.1628  0.1636
2       0.5727  0.6028  0.5727  0.5718  0.5712  0.1412  0.1418
3       0.5813  0.6105  0.5813  0.5815  0.5812  0.1628  0.1629
4       0.5705  0.5949  0.5705  0.5721  0.5698  0.1424  0.1432
Mean    0.5761  0.6073  0.5761  0.5767  0.5753  0.1519  0.1525
Std     0.0045  0.0075  0.0045  0.0045  0.0047  0.0094  0.0094, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:21:01,274:INFO:Initializing predict_model()
2024-11-26 16:21:01,274:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33F060>)
2024-11-26 16:21:01,274:INFO:Checking exceptions
2024-11-26 16:21:01,274:INFO:Preloading libraries
2024-11-26 16:21:01,575:WARNING:Model GaussianNB(priors=None, var_smoothing=1e-09) is not fitted, running create_model
2024-11-26 16:21:01,575:INFO:Initializing create_model()
2024-11-26 16:21:01,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:21:01,575:INFO:Checking exceptions
2024-11-26 16:21:01,575:INFO:Importing libraries
2024-11-26 16:21:01,575:INFO:Copying training dataset
2024-11-26 16:21:01,636:INFO:Defining folds
2024-11-26 16:21:01,636:INFO:Declaring metric variables
2024-11-26 16:21:01,664:INFO:Importing untrained model
2024-11-26 16:21:01,664:INFO:Declaring custom model
2024-11-26 16:21:01,665:INFO:Naive Bayes Imported successfully
2024-11-26 16:21:01,666:INFO:Cross validation set to False
2024-11-26 16:21:01,666:INFO:Fitting Model
2024-11-26 16:21:01,758:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 16:21:01,759:INFO:create_model() successfully completed......................................
2024-11-26 16:21:02,138:INFO:Initializing predict_model()
2024-11-26 16:21:02,138:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:21:02,138:INFO:Checking exceptions
2024-11-26 16:21:02,138:INFO:Preloading libraries
2024-11-26 16:21:03,386:INFO:Checking model {'model': DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6896, splitter='best'), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.7355  0.7358  0.7355  0.7360  0.7355  0.4712  0.4715
1       0.7339  0.7339  0.7339  0.7341  0.7338  0.4677  0.4680
2       0.7229  0.7220  0.7229  0.7228  0.7227  0.4445  0.4446
3       0.7330  0.7331  0.7330  0.7334  0.7329  0.4661  0.4664
4       0.7359  0.7361  0.7359  0.7363  0.7359  0.4719  0.4722
Mean    0.7322  0.7322  0.7322  0.7325  0.7322  0.4643  0.4645
Std     0.0048  0.0052  0.0048  0.0050  0.0048  0.0101  0.0102, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:21:03,386:INFO:Initializing predict_model()
2024-11-26 16:21:03,386:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6896, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33F600>)
2024-11-26 16:21:03,386:INFO:Checking exceptions
2024-11-26 16:21:03,386:INFO:Preloading libraries
2024-11-26 16:21:03,719:WARNING:Model DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6896, splitter='best') is not fitted, running create_model
2024-11-26 16:21:03,719:INFO:Initializing create_model()
2024-11-26 16:21:03,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6896, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:21:03,719:INFO:Checking exceptions
2024-11-26 16:21:03,719:INFO:Importing libraries
2024-11-26 16:21:03,719:INFO:Copying training dataset
2024-11-26 16:21:03,823:INFO:Defining folds
2024-11-26 16:21:03,823:INFO:Declaring metric variables
2024-11-26 16:21:03,823:INFO:Importing untrained model
2024-11-26 16:21:03,823:INFO:Declaring custom model
2024-11-26 16:21:03,823:INFO:Decision Tree Classifier Imported successfully
2024-11-26 16:21:03,823:INFO:Cross validation set to False
2024-11-26 16:21:03,823:INFO:Fitting Model
2024-11-26 16:21:05,451:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6896, splitter='best')
2024-11-26 16:21:05,451:INFO:create_model() successfully completed......................................
2024-11-26 16:21:05,843:INFO:Initializing predict_model()
2024-11-26 16:21:05,865:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6896, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:21:05,866:INFO:Checking exceptions
2024-11-26 16:21:05,866:INFO:Preloading libraries
2024-11-26 16:21:07,140:INFO:Checking model {'model': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6896, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5700  0.5932  0.5700  0.5742  0.5597  0.1357  0.1418
1       0.5281  0.5175  0.5281  0.5366  0.4996  0.0565  0.0643
2       0.5677  0.5939  0.5677  0.5784  0.5615  0.1435  0.1494
3       0.5759  0.5917  0.5759  0.5775  0.5733  0.1513  0.1531
4       0.5483  0.5768  0.5483  0.5536  0.5276  0.0896  0.0979
Mean    0.5580  0.5746  0.5580  0.5641  0.5443  0.1153  0.1213
Std     0.0176  0.0292  0.0176  0.0164  0.0270  0.0364  0.0347, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:21:07,155:INFO:Initializing predict_model()
2024-11-26 16:21:07,155:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6896, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33FE20>)
2024-11-26 16:21:07,155:INFO:Checking exceptions
2024-11-26 16:21:07,155:INFO:Preloading libraries
2024-11-26 16:21:07,370:WARNING:Model SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6896, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) is not fitted, running create_model
2024-11-26 16:21:07,370:INFO:Initializing create_model()
2024-11-26 16:21:07,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6896, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:21:07,388:INFO:Checking exceptions
2024-11-26 16:21:07,393:INFO:Importing libraries
2024-11-26 16:21:07,393:INFO:Copying training dataset
2024-11-26 16:21:07,468:INFO:Defining folds
2024-11-26 16:21:07,468:INFO:Declaring metric variables
2024-11-26 16:21:07,468:INFO:Importing untrained model
2024-11-26 16:21:07,468:INFO:Declaring custom model
2024-11-26 16:21:07,468:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 16:21:07,468:INFO:Cross validation set to False
2024-11-26 16:21:07,468:INFO:Fitting Model
2024-11-26 16:21:08,075:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6896, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 16:21:08,076:INFO:create_model() successfully completed......................................
2024-11-26 16:21:08,444:INFO:Initializing predict_model()
2024-11-26 16:21:08,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6896, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:21:08,444:INFO:Checking exceptions
2024-11-26 16:21:08,444:INFO:Preloading libraries
2024-11-26 16:21:09,983:INFO:Checking model {'model': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6896, solver='auto',
                tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5793  0.6081  0.5793  0.5792  0.5786  0.1575  0.1579
1       0.5835  0.6152  0.5835  0.5840  0.5829  0.1670  0.1675
2       0.5825  0.6025  0.5825  0.5871  0.5811  0.1687  0.1708
3       0.5799  0.6075  0.5799  0.5803  0.5791  0.1595  0.1600
4       0.5710  0.5943  0.5710  0.5707  0.5704  0.1407  0.1409
Mean    0.5792  0.6055  0.5792  0.5803  0.5784  0.1587  0.1594
Std     0.0044  0.0069  0.0044  0.0055  0.0043  0.0100  0.0104, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:21:09,984:INFO:Initializing predict_model()
2024-11-26 16:21:09,984:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6896, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33FE20>)
2024-11-26 16:21:09,984:INFO:Checking exceptions
2024-11-26 16:21:09,985:INFO:Preloading libraries
2024-11-26 16:21:10,328:WARNING:Model RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6896, solver='auto',
                tol=0.0001) is not fitted, running create_model
2024-11-26 16:21:10,328:INFO:Initializing create_model()
2024-11-26 16:21:10,328:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6896, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:21:10,328:INFO:Checking exceptions
2024-11-26 16:21:10,328:INFO:Importing libraries
2024-11-26 16:21:10,328:INFO:Copying training dataset
2024-11-26 16:21:10,386:INFO:Defining folds
2024-11-26 16:21:10,386:INFO:Declaring metric variables
2024-11-26 16:21:10,386:INFO:Importing untrained model
2024-11-26 16:21:10,386:INFO:Declaring custom model
2024-11-26 16:21:10,386:INFO:Ridge Classifier Imported successfully
2024-11-26 16:21:10,386:INFO:Cross validation set to False
2024-11-26 16:21:10,386:INFO:Fitting Model
2024-11-26 16:21:10,465:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6896, solver='auto',
                tol=0.0001)
2024-11-26 16:21:10,465:INFO:create_model() successfully completed......................................
2024-11-26 16:21:10,824:INFO:Initializing predict_model()
2024-11-26 16:21:10,824:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6896, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:21:10,824:INFO:Checking exceptions
2024-11-26 16:21:10,824:INFO:Preloading libraries
2024-11-26 16:21:12,183:INFO:Checking model {'model': RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6896, verbose=0,
                       warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8529  0.9118  0.8529  0.8661  0.8513  0.7049  0.7183
1       0.8560  0.9202  0.8560  0.8651  0.8552  0.7121  0.7211
2       0.8411  0.9086  0.8411  0.8555  0.8402  0.6841  0.6972
3       0.8521  0.9136  0.8521  0.8626  0.8509  0.7039  0.7145
4       0.8502  0.9144  0.8502  0.8581  0.8491  0.6995  0.7077
Mean    0.8505  0.9137  0.8505  0.8615  0.8493  0.7009  0.7118
Std     0.0050  0.0038  0.0050  0.0041  0.0050  0.0093  0.0086, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:21:12,183:INFO:Initializing predict_model()
2024-11-26 16:21:12,183:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6896, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33FE20>)
2024-11-26 16:21:12,183:INFO:Checking exceptions
2024-11-26 16:21:12,183:INFO:Preloading libraries
2024-11-26 16:21:12,578:WARNING:Model RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6896, verbose=0,
                       warm_start=False) is not fitted, running create_model
2024-11-26 16:21:12,589:INFO:Initializing create_model()
2024-11-26 16:21:12,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6896, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:21:12,589:INFO:Checking exceptions
2024-11-26 16:21:12,589:INFO:Importing libraries
2024-11-26 16:21:12,589:INFO:Copying training dataset
2024-11-26 16:21:12,620:INFO:Defining folds
2024-11-26 16:21:12,620:INFO:Declaring metric variables
2024-11-26 16:21:12,620:INFO:Importing untrained model
2024-11-26 16:21:12,620:INFO:Declaring custom model
2024-11-26 16:21:12,620:INFO:Random Forest Classifier Imported successfully
2024-11-26 16:21:12,620:INFO:Cross validation set to False
2024-11-26 16:21:12,620:INFO:Fitting Model
2024-11-26 16:21:25,464:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6896, verbose=0,
                       warm_start=False)
2024-11-26 16:21:25,464:INFO:create_model() successfully completed......................................
2024-11-26 16:21:25,938:INFO:Initializing predict_model()
2024-11-26 16:21:25,938:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6896, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:21:25,938:INFO:Checking exceptions
2024-11-26 16:21:25,938:INFO:Preloading libraries
2024-11-26 16:21:27,798:INFO:Checking model {'model': QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5669  0.5848  0.5669  0.5683  0.5615  0.1306  0.1335
1       0.5343  0.5365  0.5343  0.5387  0.5203  0.0685  0.0728
2       0.5654  0.5853  0.5654  0.5703  0.5637  0.1353  0.1372
3       0.5562  0.6023  0.5562  0.5562  0.5560  0.1123  0.1124
4       0.5322  0.5650  0.5322  0.5324  0.5322  0.0645  0.0645
Mean    0.5510  0.5748  0.5510  0.5532  0.5468  0.1022  0.1041
Std     0.0150  0.0225  0.0150  0.0153  0.0174  0.0302  0.0303, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:21:27,798:INFO:Initializing predict_model()
2024-11-26 16:21:27,798:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B3FDD00>)
2024-11-26 16:21:27,798:INFO:Checking exceptions
2024-11-26 16:21:27,798:INFO:Preloading libraries
2024-11-26 16:21:28,423:WARNING:Model QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) is not fitted, running create_model
2024-11-26 16:21:28,423:INFO:Initializing create_model()
2024-11-26 16:21:28,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:21:28,423:INFO:Checking exceptions
2024-11-26 16:21:28,423:INFO:Importing libraries
2024-11-26 16:21:28,423:INFO:Copying training dataset
2024-11-26 16:21:28,625:INFO:Defining folds
2024-11-26 16:21:28,625:INFO:Declaring metric variables
2024-11-26 16:21:28,625:INFO:Importing untrained model
2024-11-26 16:21:28,625:INFO:Declaring custom model
2024-11-26 16:21:28,625:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 16:21:28,642:INFO:Cross validation set to False
2024-11-26 16:21:28,642:INFO:Fitting Model
2024-11-26 16:21:28,875:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 16:21:28,875:INFO:create_model() successfully completed......................................
2024-11-26 16:21:29,343:INFO:Initializing predict_model()
2024-11-26 16:21:29,343:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:21:29,343:INFO:Checking exceptions
2024-11-26 16:21:29,343:INFO:Preloading libraries
2024-11-26 16:21:30,475:INFO:Checking model {'model': AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6896), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.7828  0.8348  0.7828  0.7914  0.7808  0.5643  0.5734
1       0.7710  0.8366  0.7710  0.7773  0.7697  0.5420  0.5483
2       0.7662  0.8230  0.7662  0.7801  0.7646  0.5355  0.5474
3       0.7699  0.8327  0.7699  0.7764  0.7685  0.5395  0.5461
4       0.7649  0.8247  0.7649  0.7688  0.7637  0.5286  0.5330
Mean    0.7710  0.8304  0.7710  0.7788  0.7695  0.5420  0.5496
Std     0.0063  0.0055  0.0063  0.0073  0.0061  0.0120  0.0131, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:21:30,475:INFO:Initializing predict_model()
2024-11-26 16:21:30,475:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6896), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B3FEFC0>)
2024-11-26 16:21:30,475:INFO:Checking exceptions
2024-11-26 16:21:30,475:INFO:Preloading libraries
2024-11-26 16:21:31,079:WARNING:Model AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6896) is not fitted, running create_model
2024-11-26 16:21:31,080:INFO:Initializing create_model()
2024-11-26 16:21:31,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6896), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:21:31,084:INFO:Checking exceptions
2024-11-26 16:21:31,089:INFO:Importing libraries
2024-11-26 16:21:31,089:INFO:Copying training dataset
2024-11-26 16:21:31,156:INFO:Defining folds
2024-11-26 16:21:31,156:INFO:Declaring metric variables
2024-11-26 16:21:31,156:INFO:Importing untrained model
2024-11-26 16:21:31,156:INFO:Declaring custom model
2024-11-26 16:21:31,156:INFO:Ada Boost Classifier Imported successfully
2024-11-26 16:21:31,156:INFO:Cross validation set to False
2024-11-26 16:21:31,156:INFO:Fitting Model
2024-11-26 16:21:37,125:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6896)
2024-11-26 16:21:37,125:INFO:create_model() successfully completed......................................
2024-11-26 16:21:37,453:INFO:Initializing predict_model()
2024-11-26 16:21:37,453:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6896), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:21:37,453:INFO:Checking exceptions
2024-11-26 16:21:37,453:INFO:Preloading libraries
2024-11-26 16:21:38,915:INFO:Checking model {'model': GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6896, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8264  0.8616  0.8264  0.8560  0.8222  0.6510  0.6807
1       0.8318  0.8736  0.8318  0.8564  0.8288  0.6636  0.6877
2       0.8168  0.8614  0.8168  0.8484  0.8139  0.6373  0.6662
3       0.8266  0.8655  0.8266  0.8489  0.8236  0.6527  0.6749
4       0.8280  0.8676  0.8280  0.8515  0.8246  0.6542  0.6781
Mean    0.8259  0.8660  0.8259  0.8522  0.8226  0.6518  0.6775
Std     0.0049  0.0045  0.0049  0.0034  0.0049  0.0085  0.0071, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:21:38,915:INFO:Initializing predict_model()
2024-11-26 16:21:38,915:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6896, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B3FDBC0>)
2024-11-26 16:21:38,915:INFO:Checking exceptions
2024-11-26 16:21:38,915:INFO:Preloading libraries
2024-11-26 16:21:39,150:WARNING:Model GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6896, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is not fitted, running create_model
2024-11-26 16:21:39,150:INFO:Initializing create_model()
2024-11-26 16:21:39,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6896, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:21:39,150:INFO:Checking exceptions
2024-11-26 16:21:39,155:INFO:Importing libraries
2024-11-26 16:21:39,155:INFO:Copying training dataset
2024-11-26 16:21:39,234:INFO:Defining folds
2024-11-26 16:21:39,234:INFO:Declaring metric variables
2024-11-26 16:21:39,234:INFO:Importing untrained model
2024-11-26 16:21:39,234:INFO:Declaring custom model
2024-11-26 16:21:39,234:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 16:21:39,234:INFO:Cross validation set to False
2024-11-26 16:21:39,234:INFO:Fitting Model
2024-11-26 16:22:07,140:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6896, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 16:22:07,140:INFO:create_model() successfully completed......................................
2024-11-26 16:22:07,538:INFO:Initializing predict_model()
2024-11-26 16:22:07,538:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6896, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:22:07,538:INFO:Checking exceptions
2024-11-26 16:22:07,539:INFO:Preloading libraries
2024-11-26 16:22:08,905:INFO:Checking model {'model': LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5793  0.6081  0.5793  0.5792  0.5786  0.1575  0.1579
1       0.5835  0.6152  0.5835  0.5840  0.5829  0.1670  0.1675
2       0.5825  0.6025  0.5825  0.5871  0.5811  0.1687  0.1708
3       0.5799  0.6075  0.5799  0.5803  0.5791  0.1595  0.1600
4       0.5710  0.5943  0.5710  0.5707  0.5704  0.1407  0.1409
Mean    0.5792  0.6055  0.5792  0.5803  0.5784  0.1587  0.1594
Std     0.0044  0.0069  0.0044  0.0055  0.0043  0.0100  0.0104, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:22:08,905:INFO:Initializing predict_model()
2024-11-26 16:22:08,905:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B3FEFC0>)
2024-11-26 16:22:08,905:INFO:Checking exceptions
2024-11-26 16:22:08,905:INFO:Preloading libraries
2024-11-26 16:22:09,205:WARNING:Model LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is not fitted, running create_model
2024-11-26 16:22:09,205:INFO:Initializing create_model()
2024-11-26 16:22:09,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:22:09,205:INFO:Checking exceptions
2024-11-26 16:22:09,205:INFO:Importing libraries
2024-11-26 16:22:09,205:INFO:Copying training dataset
2024-11-26 16:22:09,312:INFO:Defining folds
2024-11-26 16:22:09,312:INFO:Declaring metric variables
2024-11-26 16:22:09,312:INFO:Importing untrained model
2024-11-26 16:22:09,312:INFO:Declaring custom model
2024-11-26 16:22:09,312:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 16:22:09,312:INFO:Cross validation set to False
2024-11-26 16:22:09,312:INFO:Fitting Model
2024-11-26 16:22:09,557:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 16:22:09,557:INFO:create_model() successfully completed......................................
2024-11-26 16:22:09,909:INFO:Initializing predict_model()
2024-11-26 16:22:09,909:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:22:09,909:INFO:Checking exceptions
2024-11-26 16:22:09,909:INFO:Preloading libraries
2024-11-26 16:22:11,265:INFO:Checking model {'model': ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8672  0.9293  0.8672  0.8698  0.8669  0.7341  0.7368
1       0.8691  0.9332  0.8691  0.8704  0.8690  0.7382  0.7395
2       0.8687  0.9316  0.8687  0.8722  0.8687  0.7379  0.7409
3       0.8645  0.9291  0.8645  0.8660  0.8644  0.7290  0.7305
4       0.8730  0.9343  0.8730  0.8738  0.8729  0.7457  0.7466
Mean    0.8685  0.9315  0.8685  0.8704  0.8684  0.7370  0.7389
Std     0.0028  0.0021  0.0028  0.0026  0.0028  0.0055  0.0053, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:22:11,265:INFO:Initializing predict_model()
2024-11-26 16:22:11,265:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B3FDD00>)
2024-11-26 16:22:11,265:INFO:Checking exceptions
2024-11-26 16:22:11,265:INFO:Preloading libraries
2024-11-26 16:22:11,468:WARNING:Model ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False) is not fitted, running create_model
2024-11-26 16:22:11,468:INFO:Initializing create_model()
2024-11-26 16:22:11,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:22:11,468:INFO:Checking exceptions
2024-11-26 16:22:11,468:INFO:Importing libraries
2024-11-26 16:22:11,468:INFO:Copying training dataset
2024-11-26 16:22:11,531:INFO:Defining folds
2024-11-26 16:22:11,531:INFO:Declaring metric variables
2024-11-26 16:22:11,531:INFO:Importing untrained model
2024-11-26 16:22:11,531:INFO:Declaring custom model
2024-11-26 16:22:11,531:INFO:Extra Trees Classifier Imported successfully
2024-11-26 16:22:11,531:INFO:Cross validation set to False
2024-11-26 16:22:11,531:INFO:Fitting Model
2024-11-26 16:22:16,490:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False)
2024-11-26 16:22:16,490:INFO:create_model() successfully completed......................................
2024-11-26 16:22:16,889:INFO:Initializing predict_model()
2024-11-26 16:22:16,889:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:22:16,889:INFO:Checking exceptions
2024-11-26 16:22:16,889:INFO:Preloading libraries
2024-11-26 16:22:18,748:INFO:Checking model {'model': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6896, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8392  0.8675  0.8392  0.8670  0.8357  0.6769  0.7049
1       0.8434  0.8768  0.8434  0.8660  0.8410  0.6868  0.7091
2       0.8305  0.8700  0.8305  0.8622  0.8279  0.6643  0.6936
3       0.8386  0.8783  0.8386  0.8618  0.8359  0.6768  0.6998
4       0.8446  0.8779  0.8446  0.8656  0.8419  0.6877  0.7091
Mean    0.8393  0.8741  0.8393  0.8645  0.8365  0.6785  0.7033
Std     0.0049  0.0045  0.0049  0.0021  0.0050  0.0085  0.0059, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:22:18,748:INFO:Initializing predict_model()
2024-11-26 16:22:18,748:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6896, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33F060>)
2024-11-26 16:22:18,748:INFO:Checking exceptions
2024-11-26 16:22:18,748:INFO:Preloading libraries
2024-11-26 16:22:19,055:WARNING:Model LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6896, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is not fitted, running create_model
2024-11-26 16:22:19,055:INFO:Initializing create_model()
2024-11-26 16:22:19,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6896, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:22:19,055:INFO:Checking exceptions
2024-11-26 16:22:19,060:INFO:Importing libraries
2024-11-26 16:22:19,060:INFO:Copying training dataset
2024-11-26 16:22:19,091:INFO:Defining folds
2024-11-26 16:22:19,091:INFO:Declaring metric variables
2024-11-26 16:22:19,091:INFO:Importing untrained model
2024-11-26 16:22:19,091:INFO:Declaring custom model
2024-11-26 16:22:19,091:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 16:22:19,091:INFO:Cross validation set to False
2024-11-26 16:22:19,091:INFO:Fitting Model
2024-11-26 16:22:19,407:INFO:[LightGBM] [Info] Number of positive: 12052, number of negative: 12051
2024-11-26 16:22:19,434:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.034293 seconds.
2024-11-26 16:22:19,434:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-26 16:22:19,454:INFO:[LightGBM] [Info] Total Bins 9437
2024-11-26 16:22:19,454:INFO:[LightGBM] [Info] Number of data points in the train set: 24103, number of used features: 38
2024-11-26 16:22:19,454:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500021 -> initscore=0.000083
2024-11-26 16:22:19,454:INFO:[LightGBM] [Info] Start training from score 0.000083
2024-11-26 16:22:20,419:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6896, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 16:22:20,419:INFO:create_model() successfully completed......................................
2024-11-26 16:22:20,817:INFO:Initializing predict_model()
2024-11-26 16:22:20,817:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6896, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:22:20,817:INFO:Checking exceptions
2024-11-26 16:22:20,817:INFO:Preloading libraries
2024-11-26 16:22:22,076:INFO:Checking model {'model': DummyClassifier(constant=None, random_state=6896, strategy='prior'), 'scores':       Accuracy  AUC  Recall   Prec.      F1  Kappa  MCC
Fold                                                   
0       0.4918  0.5  0.4918  0.2419  0.3243    0.0  0.0
1       0.4997  0.5  0.4997  0.2497  0.3330    0.0  0.0
2       0.4806  0.5  0.4806  0.2310  0.3120    0.0  0.0
3       0.4979  0.5  0.4979  0.2479  0.3310    0.0  0.0
4       0.4907  0.5  0.4907  0.2408  0.3230    0.0  0.0
Mean    0.4921  0.5  0.4921  0.2422  0.3247    0.0  0.0
Std     0.0067  0.0  0.0067  0.0066  0.0074    0.0  0.0, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 16:22:22,076:INFO:Initializing predict_model()
2024-11-26 16:22:22,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=DummyClassifier(constant=None, random_state=6896, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D33F600>)
2024-11-26 16:22:22,076:INFO:Checking exceptions
2024-11-26 16:22:22,076:INFO:Preloading libraries
2024-11-26 16:22:22,232:WARNING:Model DummyClassifier(constant=None, random_state=6896, strategy='prior') is not fitted, running create_model
2024-11-26 16:22:22,232:INFO:Initializing create_model()
2024-11-26 16:22:22,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=DummyClassifier(constant=None, random_state=6896, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:22:22,232:INFO:Checking exceptions
2024-11-26 16:22:22,232:INFO:Importing libraries
2024-11-26 16:22:22,232:INFO:Copying training dataset
2024-11-26 16:22:22,318:INFO:Defining folds
2024-11-26 16:22:22,318:INFO:Declaring metric variables
2024-11-26 16:22:22,318:INFO:Importing untrained model
2024-11-26 16:22:22,318:INFO:Declaring custom model
2024-11-26 16:22:22,333:INFO:Dummy Classifier Imported successfully
2024-11-26 16:22:22,333:INFO:Cross validation set to False
2024-11-26 16:22:22,333:INFO:Fitting Model
2024-11-26 16:22:22,391:INFO:DummyClassifier(constant=None, random_state=6896, strategy='prior')
2024-11-26 16:22:22,391:INFO:create_model() successfully completed......................................
2024-11-26 16:22:22,762:INFO:Initializing predict_model()
2024-11-26 16:22:22,762:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=DummyClassifier(constant=None, random_state=6896, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9D81B4C0>)
2024-11-26 16:22:22,762:INFO:Checking exceptions
2024-11-26 16:22:22,762:INFO:Preloading libraries
2024-11-26 16:22:24,021:INFO:Initializing create_model()
2024-11-26 16:22:24,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 16:22:24,021:INFO:Checking exceptions
2024-11-26 16:22:24,021:INFO:Importing libraries
2024-11-26 16:22:24,021:INFO:Copying training dataset
2024-11-26 16:22:24,122:INFO:Defining folds
2024-11-26 16:22:24,122:INFO:Declaring metric variables
2024-11-26 16:22:24,122:INFO:Importing untrained model
2024-11-26 16:22:24,122:INFO:Declaring custom model
2024-11-26 16:22:24,122:INFO:Extra Trees Classifier Imported successfully
2024-11-26 16:22:24,122:INFO:Cross validation set to False
2024-11-26 16:22:24,122:INFO:Fitting Model
2024-11-26 16:22:29,598:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False)
2024-11-26 16:22:29,600:INFO:create_model() successfully completed......................................
2024-11-26 16:22:30,316:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False)
2024-11-26 16:22:30,316:INFO:automl() successfully completed......................................
2024-11-26 16:39:45,328:INFO:Initializing predict_model()
2024-11-26 16:39:45,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F9B3FDF80>)
2024-11-26 16:39:45,328:INFO:Checking exceptions
2024-11-26 16:39:45,328:INFO:Preloading libraries
2024-11-26 16:39:45,328:INFO:Set up data.
2024-11-26 16:39:45,359:INFO:Set up index.
2024-11-26 16:40:07,308:INFO:Initializing plot_model()
2024-11-26 16:40:07,308:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022FA9B66F10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6896, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-26 16:40:07,308:INFO:Checking exceptions
2024-11-26 16:40:07,636:INFO:Preloading libraries
2024-11-26 16:40:08,510:INFO:Copying training dataset
2024-11-26 16:40:08,511:INFO:Plot type: auc
2024-11-26 16:40:09,926:INFO:Fitting Model
2024-11-26 16:40:09,929:INFO:Scoring test/hold-out set
2024-11-26 16:40:12,959:INFO:Visual Rendered Successfully
2024-11-26 16:40:13,525:INFO:plot_model() successfully completed......................................
2024-11-26 22:46:58,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-26 22:46:58,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-26 22:46:58,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-26 22:46:58,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-26 23:20:03,080:INFO:PyCaret ClassificationExperiment
2024-11-26 23:20:03,099:INFO:Logging name: clf-default-name
2024-11-26 23:20:03,105:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-26 23:20:03,109:INFO:version 3.3.2
2024-11-26 23:20:03,109:INFO:Initializing setup()
2024-11-26 23:20:03,109:INFO:self.USI: 1f2c
2024-11-26 23:20:03,109:INFO:self._variable_keys: {'memory', 'data', 'y_test', 'y_train', 'log_plots_param', 'gpu_n_jobs_param', 'X', 'USI', 'exp_id', 'X_train', 'idx', 'y', 'X_test', 'fold_generator', 'fold_shuffle_param', 'exp_name_log', '_ml_usecase', 'seed', 'pipeline', 'logging_param', 'target_param', 'fold_groups_param', 'fix_imbalance', 'gpu_param', 'is_multiclass', 'n_jobs_param', 'html_param', '_available_plots'}
2024-11-26 23:20:03,111:INFO:Checking environment
2024-11-26 23:20:03,111:INFO:python_version: 3.11.9
2024-11-26 23:20:03,111:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-26 23:20:03,113:INFO:machine: AMD64
2024-11-26 23:20:03,134:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-26 23:20:03,156:INFO:Memory: svmem(total=4293971968, available=952283136, percent=77.8, used=3341688832, free=952283136)
2024-11-26 23:20:03,156:INFO:Physical Core: 2
2024-11-26 23:20:03,156:INFO:Logical Core: 2
2024-11-26 23:20:03,156:INFO:Checking libraries
2024-11-26 23:20:03,156:INFO:System:
2024-11-26 23:20:03,156:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-26 23:20:03,156:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-26 23:20:03,156:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-26 23:20:03,156:INFO:PyCaret required dependencies:
2024-11-26 23:20:03,388:INFO:                 pip: 24.3.1
2024-11-26 23:20:03,405:INFO:          setuptools: 65.5.0
2024-11-26 23:20:03,405:INFO:             pycaret: 3.3.2
2024-11-26 23:20:03,407:INFO:             IPython: 8.26.0
2024-11-26 23:20:03,407:INFO:          ipywidgets: 8.1.5
2024-11-26 23:20:03,407:INFO:                tqdm: 4.66.5
2024-11-26 23:20:03,408:INFO:               numpy: 1.26.4
2024-11-26 23:20:03,408:INFO:              pandas: 2.1.4
2024-11-26 23:20:03,409:INFO:              jinja2: 3.1.4
2024-11-26 23:20:03,409:INFO:               scipy: 1.11.4
2024-11-26 23:20:03,409:INFO:              joblib: 1.3.2
2024-11-26 23:20:03,410:INFO:             sklearn: 1.4.2
2024-11-26 23:20:03,410:INFO:                pyod: 2.0.2
2024-11-26 23:20:03,410:INFO:            imblearn: 0.12.4
2024-11-26 23:20:03,410:INFO:   category_encoders: 2.6.4
2024-11-26 23:20:03,410:INFO:            lightgbm: 4.5.0
2024-11-26 23:20:03,410:INFO:               numba: 0.60.0
2024-11-26 23:20:03,410:INFO:            requests: 2.32.3
2024-11-26 23:20:03,410:INFO:          matplotlib: 3.7.5
2024-11-26 23:20:03,420:INFO:          scikitplot: 0.3.7
2024-11-26 23:20:03,420:INFO:         yellowbrick: 1.5
2024-11-26 23:20:03,420:INFO:              plotly: 5.24.1
2024-11-26 23:20:03,420:INFO:    plotly-resampler: Not installed
2024-11-26 23:20:03,420:INFO:             kaleido: 0.2.1
2024-11-26 23:20:03,420:INFO:           schemdraw: 0.15
2024-11-26 23:20:03,420:INFO:         statsmodels: 0.14.3
2024-11-26 23:20:03,420:INFO:              sktime: 0.26.0
2024-11-26 23:20:03,420:INFO:               tbats: 1.1.3
2024-11-26 23:20:03,420:INFO:            pmdarima: 2.0.4
2024-11-26 23:20:03,420:INFO:              psutil: 6.0.0
2024-11-26 23:20:03,420:INFO:          markupsafe: 3.0.2
2024-11-26 23:20:03,420:INFO:             pickle5: Not installed
2024-11-26 23:20:03,420:INFO:         cloudpickle: 3.0.0
2024-11-26 23:20:03,420:INFO:         deprecation: 2.1.0
2024-11-26 23:20:03,420:INFO:              xxhash: 3.5.0
2024-11-26 23:20:03,420:INFO:           wurlitzer: Not installed
2024-11-26 23:20:03,420:INFO:PyCaret optional dependencies:
2024-11-26 23:20:03,497:INFO:                shap: 0.46.0
2024-11-26 23:20:03,497:INFO:           interpret: Not installed
2024-11-26 23:20:03,497:INFO:                umap: Not installed
2024-11-26 23:20:03,497:INFO:     ydata_profiling: Not installed
2024-11-26 23:20:03,497:INFO:  explainerdashboard: Not installed
2024-11-26 23:20:03,497:INFO:             autoviz: Not installed
2024-11-26 23:20:03,497:INFO:           fairlearn: Not installed
2024-11-26 23:20:03,497:INFO:          deepchecks: Not installed
2024-11-26 23:20:03,497:INFO:             xgboost: Not installed
2024-11-26 23:20:03,497:INFO:            catboost: Not installed
2024-11-26 23:20:03,497:INFO:              kmodes: Not installed
2024-11-26 23:20:03,497:INFO:             mlxtend: Not installed
2024-11-26 23:20:03,497:INFO:       statsforecast: Not installed
2024-11-26 23:20:03,497:INFO:        tune_sklearn: Not installed
2024-11-26 23:20:03,497:INFO:                 ray: Not installed
2024-11-26 23:20:03,497:INFO:            hyperopt: Not installed
2024-11-26 23:20:03,497:INFO:              optuna: 4.1.0
2024-11-26 23:20:03,497:INFO:               skopt: Not installed
2024-11-26 23:20:03,497:INFO:              mlflow: Not installed
2024-11-26 23:20:03,497:INFO:              gradio: Not installed
2024-11-26 23:20:03,497:INFO:             fastapi: Not installed
2024-11-26 23:20:03,497:INFO:             uvicorn: Not installed
2024-11-26 23:20:03,497:INFO:              m2cgen: Not installed
2024-11-26 23:20:03,497:INFO:           evidently: Not installed
2024-11-26 23:20:03,497:INFO:               fugue: Not installed
2024-11-26 23:20:03,497:INFO:           streamlit: Not installed
2024-11-26 23:20:03,497:INFO:             prophet: Not installed
2024-11-26 23:20:03,497:INFO:None
2024-11-26 23:20:03,497:INFO:Set up data.
2024-11-26 23:20:03,607:INFO:Set up folding strategy.
2024-11-26 23:20:03,607:INFO:Set up train/test split.
2024-11-26 23:20:03,702:INFO:Set up index.
2024-11-26 23:20:03,702:INFO:Assigning column types.
2024-11-26 23:20:03,763:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-26 23:20:03,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 23:20:03,935:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 23:20:04,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:04,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:04,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-26 23:20:04,920:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 23:20:05,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:05,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:05,264:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-26 23:20:05,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 23:20:05,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:05,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:05,595:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-26 23:20:05,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:05,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:05,685:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-26 23:20:06,138:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:06,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:06,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:06,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:06,411:INFO:Preparing preprocessing pipeline...
2024-11-26 23:20:06,435:INFO:Set up label encoding.
2024-11-26 23:20:06,435:INFO:Set up simple imputation.
2024-11-26 23:20:06,685:INFO:Finished creating preprocessing pipeline.
2024-11-26 23:20:06,701:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '2...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-26 23:20:06,701:INFO:Creating final display dataframe.
2024-11-26 23:20:07,391:INFO:Setup _display_container:                     Description             Value
0                    Session id              5847
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 29)
5        Transformed data shape       (34434, 29)
6   Transformed train set shape       (24103, 29)
7    Transformed test set shape       (10331, 29)
8              Numeric features                28
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              1f2c
2024-11-26 23:20:08,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:08,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:09,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:09,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-26 23:20:09,298:INFO:setup() successfully completed in 6.78s...............
2024-11-26 23:20:09,310:INFO:Initializing compare_models()
2024-11-26 23:20:09,310:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-26 23:20:09,310:INFO:Checking exceptions
2024-11-26 23:20:09,342:INFO:Preparing display monitor
2024-11-26 23:20:09,680:INFO:Initializing Logistic Regression
2024-11-26 23:20:09,681:INFO:Total runtime is 0.0 minutes
2024-11-26 23:20:09,712:INFO:SubProcess create_model() called ==================================
2024-11-26 23:20:09,763:INFO:Initializing create_model()
2024-11-26 23:20:09,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:20:09,763:INFO:Checking exceptions
2024-11-26 23:20:09,763:INFO:Importing libraries
2024-11-26 23:20:09,763:INFO:Copying training dataset
2024-11-26 23:20:09,915:INFO:Defining folds
2024-11-26 23:20:09,915:INFO:Declaring metric variables
2024-11-26 23:20:09,931:INFO:Importing untrained model
2024-11-26 23:20:10,173:INFO:Logistic Regression Imported successfully
2024-11-26 23:20:10,185:INFO:Starting cross validation
2024-11-26 23:20:10,185:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:20:20,415:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:20,457:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:20,509:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:20,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:20,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:20,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:21,474:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:21,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:21,649:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:21,665:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:21,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:21,786:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:22,394:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:22,481:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:22,526:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:22,626:INFO:Calculating mean and std
2024-11-26 23:20:22,637:INFO:Creating metrics dataframe
2024-11-26 23:20:22,637:INFO:Uploading results into container
2024-11-26 23:20:22,637:INFO:Uploading model into container now
2024-11-26 23:20:22,637:INFO:_master_model_container: 1
2024-11-26 23:20:22,637:INFO:_display_container: 2
2024-11-26 23:20:22,637:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 23:20:22,637:INFO:create_model() successfully completed......................................
2024-11-26 23:20:26,309:INFO:SubProcess create_model() end ==================================
2024-11-26 23:20:26,309:INFO:Creating metrics dataframe
2024-11-26 23:20:26,341:INFO:Initializing K Neighbors Classifier
2024-11-26 23:20:26,341:INFO:Total runtime is 0.2776862859725952 minutes
2024-11-26 23:20:26,356:INFO:SubProcess create_model() called ==================================
2024-11-26 23:20:26,356:INFO:Initializing create_model()
2024-11-26 23:20:26,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:20:26,356:INFO:Checking exceptions
2024-11-26 23:20:26,356:INFO:Importing libraries
2024-11-26 23:20:26,356:INFO:Copying training dataset
2024-11-26 23:20:26,678:INFO:Defining folds
2024-11-26 23:20:26,679:INFO:Declaring metric variables
2024-11-26 23:20:26,747:INFO:Importing untrained model
2024-11-26 23:20:26,747:INFO:K Neighbors Classifier Imported successfully
2024-11-26 23:20:26,819:INFO:Starting cross validation
2024-11-26 23:20:26,855:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:20:31,745:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:31,778:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:31,809:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:31,841:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:31,871:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:31,896:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:35,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:35,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:35,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:35,350:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:35,439:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:35,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:38,498:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:38,583:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:38,651:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:38,752:INFO:Calculating mean and std
2024-11-26 23:20:38,752:INFO:Creating metrics dataframe
2024-11-26 23:20:38,768:INFO:Uploading results into container
2024-11-26 23:20:38,805:INFO:Uploading model into container now
2024-11-26 23:20:38,806:INFO:_master_model_container: 2
2024-11-26 23:20:38,807:INFO:_display_container: 2
2024-11-26 23:20:38,807:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 23:20:38,807:INFO:create_model() successfully completed......................................
2024-11-26 23:20:39,163:INFO:SubProcess create_model() end ==================================
2024-11-26 23:20:39,163:INFO:Creating metrics dataframe
2024-11-26 23:20:39,174:INFO:Initializing Naive Bayes
2024-11-26 23:20:39,174:INFO:Total runtime is 0.49156857728958125 minutes
2024-11-26 23:20:39,189:INFO:SubProcess create_model() called ==================================
2024-11-26 23:20:39,189:INFO:Initializing create_model()
2024-11-26 23:20:39,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:20:39,189:INFO:Checking exceptions
2024-11-26 23:20:39,205:INFO:Importing libraries
2024-11-26 23:20:39,205:INFO:Copying training dataset
2024-11-26 23:20:39,487:INFO:Defining folds
2024-11-26 23:20:39,487:INFO:Declaring metric variables
2024-11-26 23:20:39,487:INFO:Importing untrained model
2024-11-26 23:20:39,538:INFO:Naive Bayes Imported successfully
2024-11-26 23:20:39,556:INFO:Starting cross validation
2024-11-26 23:20:39,621:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:20:40,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:40,514:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:40,571:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:40,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:40,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:40,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,197:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,261:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,282:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,555:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,701:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:41,774:INFO:Calculating mean and std
2024-11-26 23:20:41,774:INFO:Creating metrics dataframe
2024-11-26 23:20:41,778:INFO:Uploading results into container
2024-11-26 23:20:41,778:INFO:Uploading model into container now
2024-11-26 23:20:41,778:INFO:_master_model_container: 3
2024-11-26 23:20:41,778:INFO:_display_container: 2
2024-11-26 23:20:41,784:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 23:20:41,784:INFO:create_model() successfully completed......................................
2024-11-26 23:20:42,138:INFO:SubProcess create_model() end ==================================
2024-11-26 23:20:42,138:INFO:Creating metrics dataframe
2024-11-26 23:20:42,169:INFO:Initializing Decision Tree Classifier
2024-11-26 23:20:42,169:INFO:Total runtime is 0.5414805849393208 minutes
2024-11-26 23:20:42,196:INFO:SubProcess create_model() called ==================================
2024-11-26 23:20:42,198:INFO:Initializing create_model()
2024-11-26 23:20:42,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:20:42,200:INFO:Checking exceptions
2024-11-26 23:20:42,200:INFO:Importing libraries
2024-11-26 23:20:42,201:INFO:Copying training dataset
2024-11-26 23:20:42,304:INFO:Defining folds
2024-11-26 23:20:42,304:INFO:Declaring metric variables
2024-11-26 23:20:42,335:INFO:Importing untrained model
2024-11-26 23:20:42,401:INFO:Decision Tree Classifier Imported successfully
2024-11-26 23:20:42,481:INFO:Starting cross validation
2024-11-26 23:20:42,481:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:20:44,541:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:44,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:44,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:44,650:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:44,657:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:44,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:46,660:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:46,729:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:46,791:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:46,826:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:46,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:46,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:48,398:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:48,492:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:48,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:48,594:INFO:Calculating mean and std
2024-11-26 23:20:48,594:INFO:Creating metrics dataframe
2024-11-26 23:20:48,594:INFO:Uploading results into container
2024-11-26 23:20:48,594:INFO:Uploading model into container now
2024-11-26 23:20:48,594:INFO:_master_model_container: 4
2024-11-26 23:20:48,620:INFO:_display_container: 2
2024-11-26 23:20:48,620:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5847, splitter='best')
2024-11-26 23:20:48,621:INFO:create_model() successfully completed......................................
2024-11-26 23:20:48,986:INFO:SubProcess create_model() end ==================================
2024-11-26 23:20:48,986:INFO:Creating metrics dataframe
2024-11-26 23:20:49,003:INFO:Initializing SVM - Linear Kernel
2024-11-26 23:20:49,015:INFO:Total runtime is 0.65559268395106 minutes
2024-11-26 23:20:49,015:INFO:SubProcess create_model() called ==================================
2024-11-26 23:20:49,015:INFO:Initializing create_model()
2024-11-26 23:20:49,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:20:49,015:INFO:Checking exceptions
2024-11-26 23:20:49,015:INFO:Importing libraries
2024-11-26 23:20:49,015:INFO:Copying training dataset
2024-11-26 23:20:49,094:INFO:Defining folds
2024-11-26 23:20:49,094:INFO:Declaring metric variables
2024-11-26 23:20:49,334:INFO:Importing untrained model
2024-11-26 23:20:49,361:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 23:20:49,658:INFO:Starting cross validation
2024-11-26 23:20:49,660:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:20:50,353:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:50,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:50,493:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:50,524:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:50,607:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:50,785:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,169:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,310:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,401:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,459:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,589:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,813:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,856:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:51,910:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:52,029:INFO:Calculating mean and std
2024-11-26 23:20:52,029:INFO:Creating metrics dataframe
2024-11-26 23:20:52,029:INFO:Uploading results into container
2024-11-26 23:20:52,029:INFO:Uploading model into container now
2024-11-26 23:20:52,029:INFO:_master_model_container: 5
2024-11-26 23:20:52,029:INFO:_display_container: 2
2024-11-26 23:20:52,029:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5847, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 23:20:52,029:INFO:create_model() successfully completed......................................
2024-11-26 23:20:52,449:INFO:SubProcess create_model() end ==================================
2024-11-26 23:20:52,450:INFO:Creating metrics dataframe
2024-11-26 23:20:52,451:INFO:Initializing Ridge Classifier
2024-11-26 23:20:52,451:INFO:Total runtime is 0.7128555496533712 minutes
2024-11-26 23:20:52,468:INFO:SubProcess create_model() called ==================================
2024-11-26 23:20:52,468:INFO:Initializing create_model()
2024-11-26 23:20:52,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:20:52,468:INFO:Checking exceptions
2024-11-26 23:20:52,468:INFO:Importing libraries
2024-11-26 23:20:52,468:INFO:Copying training dataset
2024-11-26 23:20:52,660:INFO:Defining folds
2024-11-26 23:20:52,660:INFO:Declaring metric variables
2024-11-26 23:20:52,701:INFO:Importing untrained model
2024-11-26 23:20:52,701:INFO:Ridge Classifier Imported successfully
2024-11-26 23:20:52,728:INFO:Starting cross validation
2024-11-26 23:20:52,744:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:20:53,174:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:53,186:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:53,278:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:53,290:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:53,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:53,390:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:53,878:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,127:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,141:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,264:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,520:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,584:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,680:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:20:54,794:INFO:Calculating mean and std
2024-11-26 23:20:54,803:INFO:Creating metrics dataframe
2024-11-26 23:20:54,805:INFO:Uploading results into container
2024-11-26 23:20:54,807:INFO:Uploading model into container now
2024-11-26 23:20:54,807:INFO:_master_model_container: 6
2024-11-26 23:20:54,807:INFO:_display_container: 2
2024-11-26 23:20:54,808:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5847, solver='auto',
                tol=0.0001)
2024-11-26 23:20:54,808:INFO:create_model() successfully completed......................................
2024-11-26 23:20:55,185:INFO:SubProcess create_model() end ==================================
2024-11-26 23:20:55,186:INFO:Creating metrics dataframe
2024-11-26 23:20:55,204:INFO:Initializing Random Forest Classifier
2024-11-26 23:20:55,204:INFO:Total runtime is 0.7587416450182597 minutes
2024-11-26 23:20:55,228:INFO:SubProcess create_model() called ==================================
2024-11-26 23:20:55,232:INFO:Initializing create_model()
2024-11-26 23:20:55,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:20:55,232:INFO:Checking exceptions
2024-11-26 23:20:55,232:INFO:Importing libraries
2024-11-26 23:20:55,232:INFO:Copying training dataset
2024-11-26 23:20:55,403:INFO:Defining folds
2024-11-26 23:20:55,403:INFO:Declaring metric variables
2024-11-26 23:20:55,403:INFO:Importing untrained model
2024-11-26 23:20:55,515:INFO:Random Forest Classifier Imported successfully
2024-11-26 23:20:55,547:INFO:Starting cross validation
2024-11-26 23:20:55,547:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:21:20,521:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:20,691:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:20,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:21,033:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:21,137:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:21,189:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:45,709:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:45,808:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:46,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:46,501:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:46,585:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:21:46,795:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:01,607:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:01,665:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:01,770:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:01,894:INFO:Calculating mean and std
2024-11-26 23:22:01,894:INFO:Creating metrics dataframe
2024-11-26 23:22:01,911:INFO:Uploading results into container
2024-11-26 23:22:01,912:INFO:Uploading model into container now
2024-11-26 23:22:01,913:INFO:_master_model_container: 7
2024-11-26 23:22:01,913:INFO:_display_container: 2
2024-11-26 23:22:01,915:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5847, verbose=0,
                       warm_start=False)
2024-11-26 23:22:01,915:INFO:create_model() successfully completed......................................
2024-11-26 23:22:02,473:INFO:SubProcess create_model() end ==================================
2024-11-26 23:22:02,473:INFO:Creating metrics dataframe
2024-11-26 23:22:02,497:INFO:Initializing Quadratic Discriminant Analysis
2024-11-26 23:22:02,497:INFO:Total runtime is 1.8802912553151447 minutes
2024-11-26 23:22:02,504:INFO:SubProcess create_model() called ==================================
2024-11-26 23:22:02,504:INFO:Initializing create_model()
2024-11-26 23:22:02,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:22:02,504:INFO:Checking exceptions
2024-11-26 23:22:02,504:INFO:Importing libraries
2024-11-26 23:22:02,504:INFO:Copying training dataset
2024-11-26 23:22:02,722:INFO:Defining folds
2024-11-26 23:22:02,722:INFO:Declaring metric variables
2024-11-26 23:22:02,754:INFO:Importing untrained model
2024-11-26 23:22:02,770:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 23:22:02,810:INFO:Starting cross validation
2024-11-26 23:22:02,811:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:22:03,437:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:03,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:03,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:03,558:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:03,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:03,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,125:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,135:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,174:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,209:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,242:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,300:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,700:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,766:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:04,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:05,077:INFO:Calculating mean and std
2024-11-26 23:22:05,077:INFO:Creating metrics dataframe
2024-11-26 23:22:05,077:INFO:Uploading results into container
2024-11-26 23:22:05,094:INFO:Uploading model into container now
2024-11-26 23:22:05,095:INFO:_master_model_container: 8
2024-11-26 23:22:05,096:INFO:_display_container: 2
2024-11-26 23:22:05,096:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 23:22:05,096:INFO:create_model() successfully completed......................................
2024-11-26 23:22:05,593:INFO:SubProcess create_model() end ==================================
2024-11-26 23:22:05,593:INFO:Creating metrics dataframe
2024-11-26 23:22:05,625:INFO:Initializing Ada Boost Classifier
2024-11-26 23:22:05,625:INFO:Total runtime is 1.9324125647544859 minutes
2024-11-26 23:22:05,640:INFO:SubProcess create_model() called ==================================
2024-11-26 23:22:05,640:INFO:Initializing create_model()
2024-11-26 23:22:05,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:22:05,640:INFO:Checking exceptions
2024-11-26 23:22:05,640:INFO:Importing libraries
2024-11-26 23:22:05,640:INFO:Copying training dataset
2024-11-26 23:22:05,908:INFO:Defining folds
2024-11-26 23:22:05,908:INFO:Declaring metric variables
2024-11-26 23:22:05,939:INFO:Importing untrained model
2024-11-26 23:22:06,031:INFO:Ada Boost Classifier Imported successfully
2024-11-26 23:22:06,164:INFO:Starting cross validation
2024-11-26 23:22:06,177:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:22:06,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 23:22:06,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 23:22:15,381:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:15,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:15,482:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:15,512:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:15,564:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:15,601:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:15,804:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 23:22:15,953:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 23:22:23,948:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:23,991:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:23,991:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:24,052:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:24,069:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:24,151:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:24,363:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-26 23:22:30,465:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:30,510:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:30,574:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:22:30,686:INFO:Calculating mean and std
2024-11-26 23:22:30,701:INFO:Creating metrics dataframe
2024-11-26 23:22:30,726:INFO:Uploading results into container
2024-11-26 23:22:30,734:INFO:Uploading model into container now
2024-11-26 23:22:30,737:INFO:_master_model_container: 9
2024-11-26 23:22:30,738:INFO:_display_container: 2
2024-11-26 23:22:30,763:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5847)
2024-11-26 23:22:30,763:INFO:create_model() successfully completed......................................
2024-11-26 23:22:31,701:INFO:SubProcess create_model() end ==================================
2024-11-26 23:22:31,701:INFO:Creating metrics dataframe
2024-11-26 23:22:31,749:INFO:Initializing Gradient Boosting Classifier
2024-11-26 23:22:31,749:INFO:Total runtime is 2.3678128043810522 minutes
2024-11-26 23:22:31,788:INFO:SubProcess create_model() called ==================================
2024-11-26 23:22:31,789:INFO:Initializing create_model()
2024-11-26 23:22:31,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:22:31,789:INFO:Checking exceptions
2024-11-26 23:22:31,789:INFO:Importing libraries
2024-11-26 23:22:31,789:INFO:Copying training dataset
2024-11-26 23:22:32,077:INFO:Defining folds
2024-11-26 23:22:32,092:INFO:Declaring metric variables
2024-11-26 23:22:32,153:INFO:Importing untrained model
2024-11-26 23:22:32,170:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 23:22:32,274:INFO:Starting cross validation
2024-11-26 23:22:32,276:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:23:03,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:03,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:03,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:03,630:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:03,669:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:03,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:35,241:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:35,396:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:35,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:35,848:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:35,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:23:36,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:00,789:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:00,845:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:00,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:01,027:INFO:Calculating mean and std
2024-11-26 23:24:01,032:INFO:Creating metrics dataframe
2024-11-26 23:24:01,072:INFO:Uploading results into container
2024-11-26 23:24:01,099:INFO:Uploading model into container now
2024-11-26 23:24:01,110:INFO:_master_model_container: 10
2024-11-26 23:24:01,110:INFO:_display_container: 2
2024-11-26 23:24:01,112:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5847, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 23:24:01,113:INFO:create_model() successfully completed......................................
2024-11-26 23:24:01,895:INFO:SubProcess create_model() end ==================================
2024-11-26 23:24:01,895:INFO:Creating metrics dataframe
2024-11-26 23:24:01,911:INFO:Initializing Linear Discriminant Analysis
2024-11-26 23:24:01,911:INFO:Total runtime is 3.870512441794077 minutes
2024-11-26 23:24:01,933:INFO:SubProcess create_model() called ==================================
2024-11-26 23:24:01,934:INFO:Initializing create_model()
2024-11-26 23:24:01,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:24:01,934:INFO:Checking exceptions
2024-11-26 23:24:01,935:INFO:Importing libraries
2024-11-26 23:24:01,935:INFO:Copying training dataset
2024-11-26 23:24:02,176:INFO:Defining folds
2024-11-26 23:24:02,177:INFO:Declaring metric variables
2024-11-26 23:24:02,180:INFO:Importing untrained model
2024-11-26 23:24:02,198:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 23:24:02,208:INFO:Starting cross validation
2024-11-26 23:24:02,208:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:24:03,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:03,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:03,224:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:03,224:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:03,320:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:03,332:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,036:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,085:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,096:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,133:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,202:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,224:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,625:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,685:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:04,842:INFO:Calculating mean and std
2024-11-26 23:24:04,849:INFO:Creating metrics dataframe
2024-11-26 23:24:04,887:INFO:Uploading results into container
2024-11-26 23:24:04,887:INFO:Uploading model into container now
2024-11-26 23:24:04,887:INFO:_master_model_container: 11
2024-11-26 23:24:04,887:INFO:_display_container: 2
2024-11-26 23:24:04,887:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 23:24:04,887:INFO:create_model() successfully completed......................................
2024-11-26 23:24:05,309:INFO:SubProcess create_model() end ==================================
2024-11-26 23:24:05,309:INFO:Creating metrics dataframe
2024-11-26 23:24:05,324:INFO:Initializing Extra Trees Classifier
2024-11-26 23:24:05,324:INFO:Total runtime is 3.9274034857749935 minutes
2024-11-26 23:24:05,355:INFO:SubProcess create_model() called ==================================
2024-11-26 23:24:05,355:INFO:Initializing create_model()
2024-11-26 23:24:05,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:24:05,355:INFO:Checking exceptions
2024-11-26 23:24:05,355:INFO:Importing libraries
2024-11-26 23:24:05,355:INFO:Copying training dataset
2024-11-26 23:24:05,599:INFO:Defining folds
2024-11-26 23:24:05,599:INFO:Declaring metric variables
2024-11-26 23:24:05,610:INFO:Importing untrained model
2024-11-26 23:24:05,612:INFO:Extra Trees Classifier Imported successfully
2024-11-26 23:24:05,621:INFO:Starting cross validation
2024-11-26 23:24:05,621:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:24:17,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:17,347:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:17,469:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:17,700:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:17,792:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:17,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:27,885:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:28,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:28,314:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:28,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:28,486:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:28,570:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:34,354:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:34,451:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:34,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:34,670:INFO:Calculating mean and std
2024-11-26 23:24:34,670:INFO:Creating metrics dataframe
2024-11-26 23:24:34,670:INFO:Uploading results into container
2024-11-26 23:24:34,703:INFO:Uploading model into container now
2024-11-26 23:24:34,705:INFO:_master_model_container: 12
2024-11-26 23:24:34,705:INFO:_display_container: 2
2024-11-26 23:24:34,705:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False)
2024-11-26 23:24:34,705:INFO:create_model() successfully completed......................................
2024-11-26 23:24:35,155:INFO:SubProcess create_model() end ==================================
2024-11-26 23:24:35,155:INFO:Creating metrics dataframe
2024-11-26 23:24:35,180:INFO:Initializing Light Gradient Boosting Machine
2024-11-26 23:24:35,197:INFO:Total runtime is 4.425025395552317 minutes
2024-11-26 23:24:35,207:INFO:SubProcess create_model() called ==================================
2024-11-26 23:24:35,207:INFO:Initializing create_model()
2024-11-26 23:24:35,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:24:35,207:INFO:Checking exceptions
2024-11-26 23:24:35,207:INFO:Importing libraries
2024-11-26 23:24:35,207:INFO:Copying training dataset
2024-11-26 23:24:35,420:INFO:Defining folds
2024-11-26 23:24:35,420:INFO:Declaring metric variables
2024-11-26 23:24:35,439:INFO:Importing untrained model
2024-11-26 23:24:35,472:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 23:24:35,516:INFO:Starting cross validation
2024-11-26 23:24:35,516:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:24:38,842:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:38,874:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:38,969:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:39,012:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:39,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:39,139:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:42,407:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:42,435:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:42,500:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:42,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:42,610:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:42,747:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:44,863:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:44,935:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:45,010:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:45,175:INFO:Calculating mean and std
2024-11-26 23:24:45,195:INFO:Creating metrics dataframe
2024-11-26 23:24:45,210:INFO:Uploading results into container
2024-11-26 23:24:45,211:INFO:Uploading model into container now
2024-11-26 23:24:45,211:INFO:_master_model_container: 13
2024-11-26 23:24:45,212:INFO:_display_container: 2
2024-11-26 23:24:45,234:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5847, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 23:24:45,234:INFO:create_model() successfully completed......................................
2024-11-26 23:24:45,675:INFO:SubProcess create_model() end ==================================
2024-11-26 23:24:45,675:INFO:Creating metrics dataframe
2024-11-26 23:24:45,686:INFO:Initializing Dummy Classifier
2024-11-26 23:24:45,686:INFO:Total runtime is 4.600098784764607 minutes
2024-11-26 23:24:45,706:INFO:SubProcess create_model() called ==================================
2024-11-26 23:24:45,708:INFO:Initializing create_model()
2024-11-26 23:24:45,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002518D7AFFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:24:45,709:INFO:Checking exceptions
2024-11-26 23:24:45,709:INFO:Importing libraries
2024-11-26 23:24:45,709:INFO:Copying training dataset
2024-11-26 23:24:45,953:INFO:Defining folds
2024-11-26 23:24:45,953:INFO:Declaring metric variables
2024-11-26 23:24:46,004:INFO:Importing untrained model
2024-11-26 23:24:46,014:INFO:Dummy Classifier Imported successfully
2024-11-26 23:24:46,047:INFO:Starting cross validation
2024-11-26 23:24:46,047:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-26 23:24:46,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:46,467:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:46,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:46,557:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:46,582:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 23:24:46,616:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:46,616:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 23:24:46,656:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,191:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,215:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,275:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 23:24:47,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 23:24:47,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,339:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,641:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,709:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,736:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-26 23:24:47,764:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-26 23:24:47,877:INFO:Calculating mean and std
2024-11-26 23:24:47,877:INFO:Creating metrics dataframe
2024-11-26 23:24:47,877:INFO:Uploading results into container
2024-11-26 23:24:47,877:INFO:Uploading model into container now
2024-11-26 23:24:47,877:INFO:_master_model_container: 14
2024-11-26 23:24:47,877:INFO:_display_container: 2
2024-11-26 23:24:47,877:INFO:DummyClassifier(constant=None, random_state=5847, strategy='prior')
2024-11-26 23:24:47,877:INFO:create_model() successfully completed......................................
2024-11-26 23:24:48,248:INFO:SubProcess create_model() end ==================================
2024-11-26 23:24:48,248:INFO:Creating metrics dataframe
2024-11-26 23:24:48,453:INFO:Initializing create_model()
2024-11-26 23:24:48,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:24:48,453:INFO:Checking exceptions
2024-11-26 23:24:48,584:INFO:Importing libraries
2024-11-26 23:24:48,585:INFO:Copying training dataset
2024-11-26 23:24:48,922:INFO:Defining folds
2024-11-26 23:24:48,922:INFO:Declaring metric variables
2024-11-26 23:24:48,922:INFO:Importing untrained model
2024-11-26 23:24:48,922:INFO:Declaring custom model
2024-11-26 23:24:48,922:INFO:Extra Trees Classifier Imported successfully
2024-11-26 23:24:48,922:INFO:Cross validation set to False
2024-11-26 23:24:48,922:INFO:Fitting Model
2024-11-26 23:24:54,035:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False)
2024-11-26 23:24:54,035:INFO:create_model() successfully completed......................................
2024-11-26 23:24:54,674:INFO:_master_model_container: 14
2024-11-26 23:24:54,674:INFO:_display_container: 2
2024-11-26 23:24:54,674:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False)
2024-11-26 23:24:54,674:INFO:compare_models() successfully completed......................................
2024-11-26 23:24:54,674:INFO:Initializing automl()
2024-11-26 23:24:54,674:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, optimize=F1, use_holdout=True, turbo=True, return_train_score=False)
2024-11-26 23:24:54,674:INFO:Model Selection Basis : Holdout set
2024-11-26 23:24:54,674:INFO:Checking model {'model': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5860  0.6172  0.5860  0.5874  0.5850  0.1728  0.1738
1       0.5829  0.6078  0.5829  0.5838  0.5821  0.1661  0.1668
2       0.5878  0.6097  0.5878  0.5881  0.5874  0.1755  0.1759
3       0.5757  0.6032  0.5757  0.5761  0.5753  0.1515  0.1519
4       0.5795  0.5965  0.5795  0.5794  0.5790  0.1582  0.1584
Mean    0.5824  0.6069  0.5824  0.5830  0.5817  0.1648  0.1653
Std     0.0044  0.0069  0.0044  0.0046  0.0043  0.0090  0.0091, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:24:54,674:INFO:Initializing predict_model()
2024-11-26 23:24:54,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E196700>)
2024-11-26 23:24:54,674:INFO:Checking exceptions
2024-11-26 23:24:54,674:INFO:Preloading libraries
2024-11-26 23:24:55,266:WARNING:Model LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is not fitted, running create_model
2024-11-26 23:24:55,269:INFO:Initializing create_model()
2024-11-26 23:24:55,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:24:55,269:INFO:Checking exceptions
2024-11-26 23:24:55,269:INFO:Importing libraries
2024-11-26 23:24:55,269:INFO:Copying training dataset
2024-11-26 23:24:55,366:INFO:Defining folds
2024-11-26 23:24:55,366:INFO:Declaring metric variables
2024-11-26 23:24:55,367:INFO:Importing untrained model
2024-11-26 23:24:55,367:INFO:Declaring custom model
2024-11-26 23:24:55,368:INFO:Logistic Regression Imported successfully
2024-11-26 23:24:55,370:INFO:Cross validation set to False
2024-11-26 23:24:55,376:INFO:Fitting Model
2024-11-26 23:24:55,768:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-26 23:24:55,769:INFO:create_model() successfully completed......................................
2024-11-26 23:24:56,215:INFO:Initializing predict_model()
2024-11-26 23:24:56,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5847, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:24:56,221:INFO:Checking exceptions
2024-11-26 23:24:56,221:INFO:Preloading libraries
2024-11-26 23:24:57,580:INFO:Checking model {'model': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.6851  0.7759  0.6851  0.7135  0.6733  0.3678  0.3963
1       0.6828  0.7737  0.6828  0.7106  0.6716  0.3647  0.3919
2       0.6816  0.7807  0.6816  0.7157  0.6688  0.3639  0.3962
3       0.6670  0.7583  0.6670  0.6967  0.6538  0.3337  0.3624
4       0.6660  0.7570  0.6660  0.6991  0.6531  0.3353  0.3653
Mean    0.6765  0.7691  0.6765  0.7071  0.6641  0.3531  0.3824
Std     0.0083  0.0096  0.0083  0.0077  0.0088  0.0152  0.0153, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:24:57,580:INFO:Initializing predict_model()
2024-11-26 23:24:57,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E195E40>)
2024-11-26 23:24:57,580:INFO:Checking exceptions
2024-11-26 23:24:57,580:INFO:Preloading libraries
2024-11-26 23:24:57,877:WARNING:Model KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') is not fitted, running create_model
2024-11-26 23:24:57,877:INFO:Initializing create_model()
2024-11-26 23:24:57,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:24:57,877:INFO:Checking exceptions
2024-11-26 23:24:57,877:INFO:Importing libraries
2024-11-26 23:24:57,877:INFO:Copying training dataset
2024-11-26 23:24:58,065:INFO:Defining folds
2024-11-26 23:24:58,065:INFO:Declaring metric variables
2024-11-26 23:24:58,065:INFO:Importing untrained model
2024-11-26 23:24:58,065:INFO:Declaring custom model
2024-11-26 23:24:58,065:INFO:K Neighbors Classifier Imported successfully
2024-11-26 23:24:58,065:INFO:Cross validation set to False
2024-11-26 23:24:58,065:INFO:Fitting Model
2024-11-26 23:24:58,096:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-26 23:24:58,096:INFO:create_model() successfully completed......................................
2024-11-26 23:24:58,377:INFO:Initializing predict_model()
2024-11-26 23:24:58,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:24:58,377:INFO:Checking exceptions
2024-11-26 23:24:58,377:INFO:Preloading libraries
2024-11-26 23:25:03,333:INFO:Checking model {'model': GaussianNB(priors=None, var_smoothing=1e-09), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5798  0.6103  0.5798  0.5799  0.5797  0.1596  0.1597
1       0.5775  0.5951  0.5775  0.5776  0.5774  0.1550  0.1551
2       0.5723  0.5962  0.5723  0.5723  0.5722  0.1445  0.1446
3       0.5726  0.5935  0.5726  0.5727  0.5725  0.1453  0.1453
4       0.5697  0.5866  0.5697  0.5698  0.5697  0.1395  0.1395
Mean    0.5744  0.5963  0.5744  0.5745  0.5743  0.1488  0.1488
Std     0.0037  0.0077  0.0037  0.0037  0.0037  0.0074  0.0074, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:25:03,333:INFO:Initializing predict_model()
2024-11-26 23:25:03,333:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E1951C0>)
2024-11-26 23:25:03,333:INFO:Checking exceptions
2024-11-26 23:25:03,333:INFO:Preloading libraries
2024-11-26 23:25:03,784:WARNING:Model GaussianNB(priors=None, var_smoothing=1e-09) is not fitted, running create_model
2024-11-26 23:25:03,784:INFO:Initializing create_model()
2024-11-26 23:25:03,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:25:03,784:INFO:Checking exceptions
2024-11-26 23:25:03,803:INFO:Importing libraries
2024-11-26 23:25:03,803:INFO:Copying training dataset
2024-11-26 23:25:03,924:INFO:Defining folds
2024-11-26 23:25:03,924:INFO:Declaring metric variables
2024-11-26 23:25:03,924:INFO:Importing untrained model
2024-11-26 23:25:03,924:INFO:Declaring custom model
2024-11-26 23:25:03,924:INFO:Naive Bayes Imported successfully
2024-11-26 23:25:03,924:INFO:Cross validation set to False
2024-11-26 23:25:03,924:INFO:Fitting Model
2024-11-26 23:25:04,049:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-26 23:25:04,049:INFO:create_model() successfully completed......................................
2024-11-26 23:25:04,853:INFO:Initializing predict_model()
2024-11-26 23:25:04,853:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:25:04,853:INFO:Checking exceptions
2024-11-26 23:25:04,853:INFO:Preloading libraries
2024-11-26 23:25:06,336:INFO:Checking model {'model': DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5847, splitter='best'), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.7362  0.7360  0.7362  0.7363  0.7361  0.4721  0.4723
1       0.7430  0.7430  0.7430  0.7430  0.7430  0.4860  0.4860
2       0.7353  0.7354  0.7353  0.7357  0.7352  0.4707  0.4711
3       0.7363  0.7363  0.7363  0.7367  0.7362  0.4726  0.4730
4       0.7488  0.7488  0.7488  0.7488  0.7488  0.4975  0.4976
Mean    0.7399  0.7399  0.7399  0.7401  0.7398  0.4798  0.4800
Std     0.0052  0.0052  0.0052  0.0051  0.0053  0.0105  0.0103, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:25:06,336:INFO:Initializing predict_model()
2024-11-26 23:25:06,336:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5847, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E194D60>)
2024-11-26 23:25:06,336:INFO:Checking exceptions
2024-11-26 23:25:06,336:INFO:Preloading libraries
2024-11-26 23:25:06,561:WARNING:Model DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5847, splitter='best') is not fitted, running create_model
2024-11-26 23:25:06,561:INFO:Initializing create_model()
2024-11-26 23:25:06,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5847, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:25:06,561:INFO:Checking exceptions
2024-11-26 23:25:06,561:INFO:Importing libraries
2024-11-26 23:25:06,561:INFO:Copying training dataset
2024-11-26 23:25:06,620:INFO:Defining folds
2024-11-26 23:25:06,620:INFO:Declaring metric variables
2024-11-26 23:25:06,620:INFO:Importing untrained model
2024-11-26 23:25:06,620:INFO:Declaring custom model
2024-11-26 23:25:06,620:INFO:Decision Tree Classifier Imported successfully
2024-11-26 23:25:06,620:INFO:Cross validation set to False
2024-11-26 23:25:06,620:INFO:Fitting Model
2024-11-26 23:25:08,052:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5847, splitter='best')
2024-11-26 23:25:08,052:INFO:create_model() successfully completed......................................
2024-11-26 23:25:08,361:INFO:Initializing predict_model()
2024-11-26 23:25:08,361:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5847, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:25:08,361:INFO:Checking exceptions
2024-11-26 23:25:08,361:INFO:Preloading libraries
2024-11-26 23:25:09,377:INFO:Checking model {'model': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5847, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5733  0.5930  0.5733  0.5742  0.5728  0.1473  0.1478
1       0.5764  0.5964  0.5764  0.5833  0.5685  0.1539  0.1601
2       0.5453  0.5544  0.5453  0.5463  0.5422  0.0902  0.0915
3       0.5102  0.4953  0.5102  0.5112  0.5003  0.0207  0.0215
4       0.5641  0.5786  0.5641  0.5645  0.5617  0.1266  0.1277
Mean    0.5539  0.5635  0.5539  0.5559  0.5491  0.1077  0.1097
Std     0.0244  0.0372  0.0244  0.0255  0.0265  0.0489  0.0498, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:25:09,377:INFO:Initializing predict_model()
2024-11-26 23:25:09,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5847, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E196700>)
2024-11-26 23:25:09,406:INFO:Checking exceptions
2024-11-26 23:25:09,406:INFO:Preloading libraries
2024-11-26 23:25:09,641:WARNING:Model SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5847, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) is not fitted, running create_model
2024-11-26 23:25:09,643:INFO:Initializing create_model()
2024-11-26 23:25:09,643:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5847, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:25:09,643:INFO:Checking exceptions
2024-11-26 23:25:09,643:INFO:Importing libraries
2024-11-26 23:25:09,643:INFO:Copying training dataset
2024-11-26 23:25:09,721:INFO:Defining folds
2024-11-26 23:25:09,721:INFO:Declaring metric variables
2024-11-26 23:25:09,721:INFO:Importing untrained model
2024-11-26 23:25:09,721:INFO:Declaring custom model
2024-11-26 23:25:09,721:INFO:SVM - Linear Kernel Imported successfully
2024-11-26 23:25:09,721:INFO:Cross validation set to False
2024-11-26 23:25:09,721:INFO:Fitting Model
2024-11-26 23:25:10,070:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5847, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-26 23:25:10,070:INFO:create_model() successfully completed......................................
2024-11-26 23:25:10,388:INFO:Initializing predict_model()
2024-11-26 23:25:10,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5847, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:25:10,388:INFO:Checking exceptions
2024-11-26 23:25:10,388:INFO:Preloading libraries
2024-11-26 23:25:11,698:INFO:Checking model {'model': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5847, solver='auto',
                tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5851  0.6172  0.5851  0.5867  0.5841  0.1711  0.1722
1       0.5831  0.6078  0.5831  0.5840  0.5822  0.1665  0.1672
2       0.5887  0.6097  0.5887  0.5890  0.5882  0.1772  0.1776
3       0.5763  0.6033  0.5763  0.5767  0.5759  0.1528  0.1531
4       0.5807  0.5967  0.5807  0.5807  0.5802  0.1606  0.1609
Mean    0.5828  0.6069  0.5828  0.5834  0.5821  0.1656  0.1662
Std     0.0041  0.0068  0.0041  0.0043  0.0041  0.0084  0.0086, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:25:11,698:INFO:Initializing predict_model()
2024-11-26 23:25:11,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5847, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E129A80>)
2024-11-26 23:25:11,698:INFO:Checking exceptions
2024-11-26 23:25:11,698:INFO:Preloading libraries
2024-11-26 23:25:12,007:WARNING:Model RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5847, solver='auto',
                tol=0.0001) is not fitted, running create_model
2024-11-26 23:25:12,007:INFO:Initializing create_model()
2024-11-26 23:25:12,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5847, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:25:12,007:INFO:Checking exceptions
2024-11-26 23:25:12,020:INFO:Importing libraries
2024-11-26 23:25:12,020:INFO:Copying training dataset
2024-11-26 23:25:12,099:INFO:Defining folds
2024-11-26 23:25:12,104:INFO:Declaring metric variables
2024-11-26 23:25:12,105:INFO:Importing untrained model
2024-11-26 23:25:12,106:INFO:Declaring custom model
2024-11-26 23:25:12,107:INFO:Ridge Classifier Imported successfully
2024-11-26 23:25:12,109:INFO:Cross validation set to False
2024-11-26 23:25:12,110:INFO:Fitting Model
2024-11-26 23:25:12,192:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5847, solver='auto',
                tol=0.0001)
2024-11-26 23:25:12,192:INFO:create_model() successfully completed......................................
2024-11-26 23:25:12,549:INFO:Initializing predict_model()
2024-11-26 23:25:12,549:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5847, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E196700>)
2024-11-26 23:25:12,549:INFO:Checking exceptions
2024-11-26 23:25:12,549:INFO:Preloading libraries
2024-11-26 23:25:13,661:INFO:Checking model {'model': RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5847, verbose=0,
                       warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8515  0.9195  0.8515  0.8619  0.8506  0.7034  0.7135
1       0.8473  0.9103  0.8473  0.8592  0.8461  0.6949  0.7065
2       0.8473  0.9138  0.8473  0.8542  0.8466  0.6946  0.7014
3       0.8444  0.9091  0.8444  0.8532  0.8434  0.6889  0.6976
4       0.8442  0.9107  0.8442  0.8527  0.8430  0.6877  0.6965
Mean    0.8469  0.9127  0.8469  0.8562  0.8459  0.6939  0.7031
Std     0.0026  0.0038  0.0026  0.0036  0.0027  0.0056  0.0063, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:25:13,662:INFO:Initializing predict_model()
2024-11-26 23:25:13,663:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5847, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E128A40>)
2024-11-26 23:25:13,663:INFO:Checking exceptions
2024-11-26 23:25:13,663:INFO:Preloading libraries
2024-11-26 23:25:13,877:WARNING:Model RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5847, verbose=0,
                       warm_start=False) is not fitted, running create_model
2024-11-26 23:25:13,877:INFO:Initializing create_model()
2024-11-26 23:25:13,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5847, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:25:13,877:INFO:Checking exceptions
2024-11-26 23:25:13,877:INFO:Importing libraries
2024-11-26 23:25:13,877:INFO:Copying training dataset
2024-11-26 23:25:13,908:INFO:Defining folds
2024-11-26 23:25:13,908:INFO:Declaring metric variables
2024-11-26 23:25:13,908:INFO:Importing untrained model
2024-11-26 23:25:13,908:INFO:Declaring custom model
2024-11-26 23:25:13,908:INFO:Random Forest Classifier Imported successfully
2024-11-26 23:25:13,908:INFO:Cross validation set to False
2024-11-26 23:25:13,908:INFO:Fitting Model
2024-11-26 23:25:28,688:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5847, verbose=0,
                       warm_start=False)
2024-11-26 23:25:28,688:INFO:create_model() successfully completed......................................
2024-11-26 23:25:29,074:INFO:Initializing predict_model()
2024-11-26 23:25:29,075:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5847, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518C91D120>)
2024-11-26 23:25:29,075:INFO:Checking exceptions
2024-11-26 23:25:29,075:INFO:Preloading libraries
2024-11-26 23:25:30,962:INFO:Checking model {'model': QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.6148  0.6516  0.6148  0.6148  0.6148  0.2295  0.2295
1       0.5864  0.6346  0.5864  0.5865  0.5863  0.1729  0.1729
2       0.5864  0.6219  0.5864  0.5864  0.5864  0.1728  0.1728
3       0.5940  0.6256  0.5940  0.5941  0.5939  0.1880  0.1880
4       0.5938  0.6296  0.5938  0.5939  0.5938  0.1876  0.1877
Mean    0.5951  0.6326  0.5951  0.5951  0.5950  0.1901  0.1902
Std     0.0104  0.0104  0.0104  0.0104  0.0104  0.0208  0.0208, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:25:30,962:INFO:Initializing predict_model()
2024-11-26 23:25:30,962:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F9332480>)
2024-11-26 23:25:30,962:INFO:Checking exceptions
2024-11-26 23:25:30,962:INFO:Preloading libraries
2024-11-26 23:25:31,181:WARNING:Model QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) is not fitted, running create_model
2024-11-26 23:25:31,181:INFO:Initializing create_model()
2024-11-26 23:25:31,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:25:31,181:INFO:Checking exceptions
2024-11-26 23:25:31,181:INFO:Importing libraries
2024-11-26 23:25:31,181:INFO:Copying training dataset
2024-11-26 23:25:31,239:INFO:Defining folds
2024-11-26 23:25:31,239:INFO:Declaring metric variables
2024-11-26 23:25:31,239:INFO:Importing untrained model
2024-11-26 23:25:31,239:INFO:Declaring custom model
2024-11-26 23:25:31,239:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-26 23:25:31,239:INFO:Cross validation set to False
2024-11-26 23:25:31,239:INFO:Fitting Model
2024-11-26 23:25:31,338:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-26 23:25:31,338:INFO:create_model() successfully completed......................................
2024-11-26 23:25:31,680:INFO:Initializing predict_model()
2024-11-26 23:25:31,680:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518C91D120>)
2024-11-26 23:25:31,680:INFO:Checking exceptions
2024-11-26 23:25:31,680:INFO:Preloading libraries
2024-11-26 23:25:32,948:INFO:Checking model {'model': AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5847), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.7619  0.8298  0.7619  0.7671  0.7609  0.5244  0.5292
1       0.7822  0.8361  0.7822  0.7919  0.7805  0.5647  0.5742
2       0.7698  0.8334  0.7698  0.7739  0.7688  0.5394  0.5436
3       0.7587  0.8219  0.7587  0.7641  0.7575  0.5175  0.5228
4       0.7602  0.8234  0.7602  0.7632  0.7592  0.5196  0.5229
Mean    0.7665  0.8289  0.7665  0.7720  0.7654  0.5331  0.5385
Std     0.0087  0.0055  0.0087  0.0106  0.0085  0.0176  0.0194, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:25:32,948:INFO:Initializing predict_model()
2024-11-26 23:25:32,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5847), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518C91F740>)
2024-11-26 23:25:32,948:INFO:Checking exceptions
2024-11-26 23:25:32,948:INFO:Preloading libraries
2024-11-26 23:25:33,243:WARNING:Model AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5847) is not fitted, running create_model
2024-11-26 23:25:33,243:INFO:Initializing create_model()
2024-11-26 23:25:33,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5847), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:25:33,243:INFO:Checking exceptions
2024-11-26 23:25:33,243:INFO:Importing libraries
2024-11-26 23:25:33,243:INFO:Copying training dataset
2024-11-26 23:25:33,311:INFO:Defining folds
2024-11-26 23:25:33,311:INFO:Declaring metric variables
2024-11-26 23:25:33,311:INFO:Importing untrained model
2024-11-26 23:25:33,311:INFO:Declaring custom model
2024-11-26 23:25:33,311:INFO:Ada Boost Classifier Imported successfully
2024-11-26 23:25:33,311:INFO:Cross validation set to False
2024-11-26 23:25:33,311:INFO:Fitting Model
2024-11-26 23:25:39,301:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5847)
2024-11-26 23:25:39,301:INFO:create_model() successfully completed......................................
2024-11-26 23:25:39,696:INFO:Initializing predict_model()
2024-11-26 23:25:39,696:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5847), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F9332480>)
2024-11-26 23:25:39,696:INFO:Checking exceptions
2024-11-26 23:25:39,696:INFO:Preloading libraries
2024-11-26 23:25:40,883:INFO:Checking model {'model': GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5847, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8239  0.8731  0.8239  0.8527  0.8205  0.6488  0.6765
1       0.8247  0.8676  0.8247  0.8501  0.8216  0.6499  0.6745
2       0.8208  0.8712  0.8208  0.8382  0.8184  0.6413  0.6586
3       0.8189  0.8655  0.8189  0.8430  0.8157  0.6379  0.6615
4       0.8145  0.8627  0.8145  0.8366  0.8110  0.6277  0.6501
Mean    0.8206  0.8680  0.8206  0.8441  0.8174  0.6411  0.6643
Std     0.0037  0.0038  0.0037  0.0064  0.0038  0.0081  0.0100, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:25:40,883:INFO:Initializing predict_model()
2024-11-26 23:25:40,883:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5847, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518C91D120>)
2024-11-26 23:25:40,883:INFO:Checking exceptions
2024-11-26 23:25:40,883:INFO:Preloading libraries
2024-11-26 23:25:41,137:WARNING:Model GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5847, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is not fitted, running create_model
2024-11-26 23:25:41,137:INFO:Initializing create_model()
2024-11-26 23:25:41,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5847, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:25:41,137:INFO:Checking exceptions
2024-11-26 23:25:41,151:INFO:Importing libraries
2024-11-26 23:25:41,151:INFO:Copying training dataset
2024-11-26 23:25:41,212:INFO:Defining folds
2024-11-26 23:25:41,212:INFO:Declaring metric variables
2024-11-26 23:25:41,212:INFO:Importing untrained model
2024-11-26 23:25:41,212:INFO:Declaring custom model
2024-11-26 23:25:41,212:INFO:Gradient Boosting Classifier Imported successfully
2024-11-26 23:25:41,212:INFO:Cross validation set to False
2024-11-26 23:25:41,212:INFO:Fitting Model
2024-11-26 23:26:12,837:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5847, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-26 23:26:12,837:INFO:create_model() successfully completed......................................
2024-11-26 23:26:13,248:INFO:Initializing predict_model()
2024-11-26 23:26:13,248:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5847, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F9332480>)
2024-11-26 23:26:13,248:INFO:Checking exceptions
2024-11-26 23:26:13,248:INFO:Preloading libraries
2024-11-26 23:26:14,573:INFO:Checking model {'model': LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5851  0.6172  0.5851  0.5867  0.5841  0.1711  0.1722
1       0.5829  0.6078  0.5829  0.5838  0.5820  0.1661  0.1668
2       0.5887  0.6097  0.5887  0.5890  0.5882  0.1772  0.1776
3       0.5763  0.6033  0.5763  0.5767  0.5759  0.1528  0.1531
4       0.5807  0.5967  0.5807  0.5807  0.5802  0.1606  0.1609
Mean    0.5827  0.6069  0.5827  0.5834  0.5821  0.1656  0.1661
Std     0.0041  0.0068  0.0041  0.0043  0.0041  0.0084  0.0085, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:26:14,573:INFO:Initializing predict_model()
2024-11-26 23:26:14,573:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518C91F7E0>)
2024-11-26 23:26:14,573:INFO:Checking exceptions
2024-11-26 23:26:14,573:INFO:Preloading libraries
2024-11-26 23:26:14,871:WARNING:Model LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is not fitted, running create_model
2024-11-26 23:26:14,871:INFO:Initializing create_model()
2024-11-26 23:26:14,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:26:14,871:INFO:Checking exceptions
2024-11-26 23:26:14,871:INFO:Importing libraries
2024-11-26 23:26:14,871:INFO:Copying training dataset
2024-11-26 23:26:14,949:INFO:Defining folds
2024-11-26 23:26:14,949:INFO:Declaring metric variables
2024-11-26 23:26:14,949:INFO:Importing untrained model
2024-11-26 23:26:14,949:INFO:Declaring custom model
2024-11-26 23:26:14,949:INFO:Linear Discriminant Analysis Imported successfully
2024-11-26 23:26:14,962:INFO:Cross validation set to False
2024-11-26 23:26:14,962:INFO:Fitting Model
2024-11-26 23:26:15,071:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-26 23:26:15,071:INFO:create_model() successfully completed......................................
2024-11-26 23:26:15,446:INFO:Initializing predict_model()
2024-11-26 23:26:15,446:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:26:15,446:INFO:Checking exceptions
2024-11-26 23:26:15,446:INFO:Preloading libraries
2024-11-26 23:26:16,665:INFO:Checking model {'model': ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8766  0.9402  0.8766  0.8771  0.8766  0.7532  0.7537
1       0.8677  0.9298  0.8677  0.8685  0.8676  0.7354  0.7362
2       0.8635  0.9292  0.8635  0.8640  0.8635  0.7270  0.7275
3       0.8691  0.9293  0.8691  0.8704  0.8690  0.7382  0.7395
4       0.8629  0.9259  0.8629  0.8634  0.8628  0.7255  0.7261
Mean    0.8679  0.9309  0.8679  0.8687  0.8679  0.7359  0.7366
Std     0.0049  0.0049  0.0049  0.0050  0.0049  0.0099  0.0099, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:26:16,665:INFO:Initializing predict_model()
2024-11-26 23:26:16,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F9332480>)
2024-11-26 23:26:16,665:INFO:Checking exceptions
2024-11-26 23:26:16,665:INFO:Preloading libraries
2024-11-26 23:26:16,931:WARNING:Model ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False) is not fitted, running create_model
2024-11-26 23:26:16,931:INFO:Initializing create_model()
2024-11-26 23:26:16,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:26:16,931:INFO:Checking exceptions
2024-11-26 23:26:16,957:INFO:Importing libraries
2024-11-26 23:26:16,958:INFO:Copying training dataset
2024-11-26 23:26:17,041:INFO:Defining folds
2024-11-26 23:26:17,041:INFO:Declaring metric variables
2024-11-26 23:26:17,041:INFO:Importing untrained model
2024-11-26 23:26:17,041:INFO:Declaring custom model
2024-11-26 23:26:17,041:INFO:Extra Trees Classifier Imported successfully
2024-11-26 23:26:17,041:INFO:Cross validation set to False
2024-11-26 23:26:17,041:INFO:Fitting Model
2024-11-26 23:26:23,402:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False)
2024-11-26 23:26:23,402:INFO:create_model() successfully completed......................................
2024-11-26 23:26:23,783:INFO:Initializing predict_model()
2024-11-26 23:26:23,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:26:23,785:INFO:Checking exceptions
2024-11-26 23:26:23,785:INFO:Preloading libraries
2024-11-26 23:26:25,940:INFO:Checking model {'model': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5847, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8336  0.8830  0.8336  0.8593  0.8309  0.6682  0.6929
1       0.8382  0.8783  0.8382  0.8630  0.8355  0.6768  0.7009
2       0.8409  0.8816  0.8409  0.8579  0.8389  0.6816  0.6985
3       0.8398  0.8741  0.8398  0.8628  0.8373  0.6798  0.7023
4       0.8328  0.8702  0.8328  0.8545  0.8298  0.6644  0.6863
Mean    0.8371  0.8775  0.8371  0.8595  0.8345  0.6741  0.6962
Std     0.0033  0.0047  0.0033  0.0032  0.0036  0.0067  0.0059, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:26:25,943:INFO:Initializing predict_model()
2024-11-26 23:26:25,943:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5847, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:26:25,943:INFO:Checking exceptions
2024-11-26 23:26:25,943:INFO:Preloading libraries
2024-11-26 23:26:26,250:WARNING:Model LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5847, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is not fitted, running create_model
2024-11-26 23:26:26,250:INFO:Initializing create_model()
2024-11-26 23:26:26,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5847, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:26:26,250:INFO:Checking exceptions
2024-11-26 23:26:26,250:INFO:Importing libraries
2024-11-26 23:26:26,250:INFO:Copying training dataset
2024-11-26 23:26:26,357:INFO:Defining folds
2024-11-26 23:26:26,357:INFO:Declaring metric variables
2024-11-26 23:26:26,359:INFO:Importing untrained model
2024-11-26 23:26:26,359:INFO:Declaring custom model
2024-11-26 23:26:26,362:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-26 23:26:26,365:INFO:Cross validation set to False
2024-11-26 23:26:26,365:INFO:Fitting Model
2024-11-26 23:26:26,581:INFO:[LightGBM] [Info] Number of positive: 12052, number of negative: 12051
2024-11-26 23:26:26,592:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.011522 seconds.
2024-11-26 23:26:26,592:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-26 23:26:26,592:INFO:[LightGBM] [Info] Total Bins 7127
2024-11-26 23:26:26,592:INFO:[LightGBM] [Info] Number of data points in the train set: 24103, number of used features: 28
2024-11-26 23:26:26,592:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500021 -> initscore=0.000083
2024-11-26 23:26:26,592:INFO:[LightGBM] [Info] Start training from score 0.000083
2024-11-26 23:26:27,826:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5847, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-26 23:26:27,826:INFO:create_model() successfully completed......................................
2024-11-26 23:26:28,201:INFO:Initializing predict_model()
2024-11-26 23:26:28,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5847, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F9332480>)
2024-11-26 23:26:28,221:INFO:Checking exceptions
2024-11-26 23:26:28,221:INFO:Preloading libraries
2024-11-26 23:26:29,738:INFO:Checking model {'model': DummyClassifier(constant=None, random_state=5847, strategy='prior'), 'scores':       Accuracy  AUC  Recall   Prec.      F1  Kappa  MCC
Fold                                                   
0       0.4949  0.5  0.4949  0.2449  0.3277    0.0  0.0
1       0.4978  0.5  0.4978  0.2478  0.3309    0.0  0.0
2       0.4987  0.5  0.4987  0.2487  0.3318    0.0  0.0
3       0.4994  0.5  0.4994  0.2494  0.3326    0.0  0.0
4       0.4936  0.5  0.4936  0.2436  0.3262    0.0  0.0
Mean    0.4969  0.5  0.4969  0.2469  0.3299    0.0  0.0
Std     0.0022  0.0  0.0022  0.0022  0.0025    0.0  0.0, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-26 23:26:29,738:INFO:Initializing predict_model()
2024-11-26 23:26:29,738:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=DummyClassifier(constant=None, random_state=5847, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F9332480>)
2024-11-26 23:26:29,738:INFO:Checking exceptions
2024-11-26 23:26:29,738:INFO:Preloading libraries
2024-11-26 23:26:30,029:WARNING:Model DummyClassifier(constant=None, random_state=5847, strategy='prior') is not fitted, running create_model
2024-11-26 23:26:30,029:INFO:Initializing create_model()
2024-11-26 23:26:30,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=DummyClassifier(constant=None, random_state=5847, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:26:30,029:INFO:Checking exceptions
2024-11-26 23:26:30,052:INFO:Importing libraries
2024-11-26 23:26:30,052:INFO:Copying training dataset
2024-11-26 23:26:30,160:INFO:Defining folds
2024-11-26 23:26:30,160:INFO:Declaring metric variables
2024-11-26 23:26:30,160:INFO:Importing untrained model
2024-11-26 23:26:30,160:INFO:Declaring custom model
2024-11-26 23:26:30,160:INFO:Dummy Classifier Imported successfully
2024-11-26 23:26:30,160:INFO:Cross validation set to False
2024-11-26 23:26:30,160:INFO:Fitting Model
2024-11-26 23:26:30,215:INFO:DummyClassifier(constant=None, random_state=5847, strategy='prior')
2024-11-26 23:26:30,215:INFO:create_model() successfully completed......................................
2024-11-26 23:26:30,573:INFO:Initializing predict_model()
2024-11-26 23:26:30,574:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=DummyClassifier(constant=None, random_state=5847, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251F03D3BA0>)
2024-11-26 23:26:30,575:INFO:Checking exceptions
2024-11-26 23:26:30,575:INFO:Preloading libraries
2024-11-26 23:26:31,905:INFO:Initializing create_model()
2024-11-26 23:26:31,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-26 23:26:31,905:INFO:Checking exceptions
2024-11-26 23:26:31,905:INFO:Importing libraries
2024-11-26 23:26:31,905:INFO:Copying training dataset
2024-11-26 23:26:31,951:INFO:Defining folds
2024-11-26 23:26:31,951:INFO:Declaring metric variables
2024-11-26 23:26:31,951:INFO:Importing untrained model
2024-11-26 23:26:31,951:INFO:Declaring custom model
2024-11-26 23:26:31,951:INFO:Extra Trees Classifier Imported successfully
2024-11-26 23:26:31,971:INFO:Cross validation set to False
2024-11-26 23:26:31,971:INFO:Fitting Model
2024-11-26 23:26:39,180:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False)
2024-11-26 23:26:39,180:INFO:create_model() successfully completed......................................
2024-11-26 23:26:39,851:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False)
2024-11-26 23:26:39,851:INFO:automl() successfully completed......................................
2024-11-26 23:26:40,183:INFO:Initializing predict_model()
2024-11-26 23:26:40,183:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002518E195DA0>)
2024-11-26 23:26:40,183:INFO:Checking exceptions
2024-11-26 23:26:40,184:INFO:Preloading libraries
2024-11-26 23:26:40,189:INFO:Set up data.
2024-11-26 23:26:40,199:INFO:Set up index.
2024-11-26 23:26:41,994:INFO:Initializing plot_model()
2024-11-26 23:26:41,994:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-26 23:26:41,994:INFO:Checking exceptions
2024-11-26 23:26:42,279:INFO:Preloading libraries
2024-11-26 23:26:43,295:INFO:Copying training dataset
2024-11-26 23:26:43,295:INFO:Plot type: auc
2024-11-26 23:26:44,451:INFO:Fitting Model
2024-11-26 23:26:44,451:INFO:Scoring test/hold-out set
2024-11-26 23:26:46,440:INFO:Visual Rendered Successfully
2024-11-26 23:26:47,018:INFO:plot_model() successfully completed......................................
2024-11-26 23:27:26,844:INFO:Initializing plot_model()
2024-11-26 23:27:26,846:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002518416AB90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5847, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-26 23:27:26,846:INFO:Checking exceptions
2024-11-26 23:27:27,776:INFO:Preloading libraries
2024-11-26 23:27:28,446:INFO:Copying training dataset
2024-11-26 23:27:28,446:INFO:Plot type: auc
2024-11-26 23:27:28,776:INFO:Fitting Model
2024-11-26 23:27:28,789:INFO:Scoring test/hold-out set
2024-11-26 23:27:30,722:INFO:Visual Rendered Successfully
2024-11-26 23:27:31,182:INFO:plot_model() successfully completed......................................
2024-11-27 10:59:15,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-27 10:59:15,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-27 10:59:15,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-27 10:59:15,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-27 11:21:38,211:INFO:PyCaret ClassificationExperiment
2024-11-27 11:21:38,211:INFO:Logging name: clf-default-name
2024-11-27 11:21:38,211:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-27 11:21:38,211:INFO:version 3.3.2
2024-11-27 11:21:38,211:INFO:Initializing setup()
2024-11-27 11:21:38,211:INFO:self.USI: 9ecd
2024-11-27 11:21:38,211:INFO:self._variable_keys: {'gpu_param', 'y', 'logging_param', 'gpu_n_jobs_param', 'html_param', 'fold_shuffle_param', 'n_jobs_param', '_available_plots', 'fold_generator', 'idx', 'seed', 'fold_groups_param', 'X', 'USI', 'is_multiclass', 'X_train', 'target_param', 'X_test', 'log_plots_param', 'y_train', 'fix_imbalance', 'pipeline', 'memory', '_ml_usecase', 'data', 'y_test', 'exp_name_log', 'exp_id'}
2024-11-27 11:21:38,211:INFO:Checking environment
2024-11-27 11:21:38,211:INFO:python_version: 3.11.9
2024-11-27 11:21:38,211:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-27 11:21:38,211:INFO:machine: AMD64
2024-11-27 11:21:38,211:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-27 11:21:38,226:INFO:Memory: svmem(total=4293971968, available=1545977856, percent=64.0, used=2747994112, free=1545977856)
2024-11-27 11:21:38,226:INFO:Physical Core: 2
2024-11-27 11:21:38,226:INFO:Logical Core: 2
2024-11-27 11:21:38,226:INFO:Checking libraries
2024-11-27 11:21:38,226:INFO:System:
2024-11-27 11:21:38,226:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-27 11:21:38,226:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-27 11:21:38,226:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-27 11:21:38,226:INFO:PyCaret required dependencies:
2024-11-27 11:21:38,726:INFO:                 pip: 24.3.1
2024-11-27 11:21:38,726:INFO:          setuptools: 65.5.0
2024-11-27 11:21:38,726:INFO:             pycaret: 3.3.2
2024-11-27 11:21:38,726:INFO:             IPython: 8.26.0
2024-11-27 11:21:38,726:INFO:          ipywidgets: 8.1.5
2024-11-27 11:21:38,726:INFO:                tqdm: 4.66.5
2024-11-27 11:21:38,726:INFO:               numpy: 1.26.4
2024-11-27 11:21:38,726:INFO:              pandas: 2.1.4
2024-11-27 11:21:38,726:INFO:              jinja2: 3.1.4
2024-11-27 11:21:38,726:INFO:               scipy: 1.11.4
2024-11-27 11:21:38,726:INFO:              joblib: 1.3.2
2024-11-27 11:21:38,726:INFO:             sklearn: 1.4.2
2024-11-27 11:21:38,726:INFO:                pyod: 2.0.2
2024-11-27 11:21:38,726:INFO:            imblearn: 0.12.4
2024-11-27 11:21:38,726:INFO:   category_encoders: 2.6.4
2024-11-27 11:21:38,726:INFO:            lightgbm: 4.5.0
2024-11-27 11:21:38,726:INFO:               numba: 0.60.0
2024-11-27 11:21:38,726:INFO:            requests: 2.32.3
2024-11-27 11:21:38,726:INFO:          matplotlib: 3.7.5
2024-11-27 11:21:38,726:INFO:          scikitplot: 0.3.7
2024-11-27 11:21:38,726:INFO:         yellowbrick: 1.5
2024-11-27 11:21:38,726:INFO:              plotly: 5.24.1
2024-11-27 11:21:38,726:INFO:    plotly-resampler: Not installed
2024-11-27 11:21:38,726:INFO:             kaleido: 0.2.1
2024-11-27 11:21:38,726:INFO:           schemdraw: 0.15
2024-11-27 11:21:38,726:INFO:         statsmodels: 0.14.3
2024-11-27 11:21:38,726:INFO:              sktime: 0.26.0
2024-11-27 11:21:38,726:INFO:               tbats: 1.1.3
2024-11-27 11:21:38,726:INFO:            pmdarima: 2.0.4
2024-11-27 11:21:38,726:INFO:              psutil: 6.0.0
2024-11-27 11:21:38,726:INFO:          markupsafe: 3.0.2
2024-11-27 11:21:38,726:INFO:             pickle5: Not installed
2024-11-27 11:21:38,726:INFO:         cloudpickle: 3.0.0
2024-11-27 11:21:38,726:INFO:         deprecation: 2.1.0
2024-11-27 11:21:38,726:INFO:              xxhash: 3.5.0
2024-11-27 11:21:38,726:INFO:           wurlitzer: Not installed
2024-11-27 11:21:38,726:INFO:PyCaret optional dependencies:
2024-11-27 11:21:38,789:INFO:                shap: 0.46.0
2024-11-27 11:21:38,789:INFO:           interpret: Not installed
2024-11-27 11:21:38,789:INFO:                umap: Not installed
2024-11-27 11:21:38,789:INFO:     ydata_profiling: Not installed
2024-11-27 11:21:38,789:INFO:  explainerdashboard: Not installed
2024-11-27 11:21:38,789:INFO:             autoviz: Not installed
2024-11-27 11:21:38,789:INFO:           fairlearn: Not installed
2024-11-27 11:21:38,789:INFO:          deepchecks: Not installed
2024-11-27 11:21:38,789:INFO:             xgboost: Not installed
2024-11-27 11:21:38,789:INFO:            catboost: Not installed
2024-11-27 11:21:38,789:INFO:              kmodes: Not installed
2024-11-27 11:21:38,789:INFO:             mlxtend: Not installed
2024-11-27 11:21:38,789:INFO:       statsforecast: Not installed
2024-11-27 11:21:38,789:INFO:        tune_sklearn: Not installed
2024-11-27 11:21:38,789:INFO:                 ray: Not installed
2024-11-27 11:21:38,789:INFO:            hyperopt: Not installed
2024-11-27 11:21:38,789:INFO:              optuna: 4.1.0
2024-11-27 11:21:38,789:INFO:               skopt: Not installed
2024-11-27 11:21:38,789:INFO:              mlflow: Not installed
2024-11-27 11:21:38,789:INFO:              gradio: Not installed
2024-11-27 11:21:38,789:INFO:             fastapi: Not installed
2024-11-27 11:21:38,789:INFO:             uvicorn: Not installed
2024-11-27 11:21:38,789:INFO:              m2cgen: Not installed
2024-11-27 11:21:38,789:INFO:           evidently: Not installed
2024-11-27 11:21:38,789:INFO:               fugue: Not installed
2024-11-27 11:21:38,789:INFO:           streamlit: Not installed
2024-11-27 11:21:38,789:INFO:             prophet: Not installed
2024-11-27 11:21:38,789:INFO:None
2024-11-27 11:21:38,789:INFO:Set up data.
2024-11-27 11:21:38,883:INFO:Set up folding strategy.
2024-11-27 11:21:38,883:INFO:Set up train/test split.
2024-11-27 11:21:38,992:INFO:Set up index.
2024-11-27 11:21:38,992:INFO:Assigning column types.
2024-11-27 11:21:39,040:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-27 11:21:39,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 11:21:39,242:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 11:21:39,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:39,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:39,539:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 11:21:39,539:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 11:21:39,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:39,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:39,632:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-27 11:21:39,758:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 11:21:39,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:39,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:39,977:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 11:21:40,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:40,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:40,071:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-27 11:21:40,226:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:40,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:40,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:40,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:40,413:INFO:Preparing preprocessing pipeline...
2024-11-27 11:21:40,449:INFO:Set up label encoding.
2024-11-27 11:21:40,449:INFO:Set up simple imputation.
2024-11-27 11:21:40,633:INFO:Finished creating preprocessing pipeline.
2024-11-27 11:21:40,664:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '2...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-27 11:21:40,664:INFO:Creating final display dataframe.
2024-11-27 11:21:41,242:INFO:Setup _display_container:                     Description             Value
0                    Session id              7683
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 29)
5        Transformed data shape       (34434, 29)
6   Transformed train set shape       (24103, 29)
7    Transformed test set shape       (10331, 29)
8              Numeric features                28
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              9ecd
2024-11-27 11:21:41,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:41,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:41,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:41,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:21:41,742:INFO:setup() successfully completed in 4.02s...............
2024-11-27 11:21:41,742:INFO:Initializing compare_models()
2024-11-27 11:21:41,742:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-27 11:21:41,742:INFO:Checking exceptions
2024-11-27 11:21:41,777:INFO:Preparing display monitor
2024-11-27 11:21:41,977:INFO:Initializing Logistic Regression
2024-11-27 11:21:41,977:INFO:Total runtime is 0.0 minutes
2024-11-27 11:21:42,039:INFO:SubProcess create_model() called ==================================
2024-11-27 11:21:42,054:INFO:Initializing create_model()
2024-11-27 11:21:42,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:21:42,054:INFO:Checking exceptions
2024-11-27 11:21:42,054:INFO:Importing libraries
2024-11-27 11:21:42,054:INFO:Copying training dataset
2024-11-27 11:21:42,164:INFO:Defining folds
2024-11-27 11:21:42,164:INFO:Declaring metric variables
2024-11-27 11:21:42,183:INFO:Importing untrained model
2024-11-27 11:21:42,195:INFO:Logistic Regression Imported successfully
2024-11-27 11:21:42,226:INFO:Starting cross validation
2024-11-27 11:21:42,242:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:21:51,135:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:51,142:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:51,208:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:51,208:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:51,329:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:51,353:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,062:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,140:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,159:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,231:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,231:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,298:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,776:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,815:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:52,854:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:53,004:INFO:Calculating mean and std
2024-11-27 11:21:53,004:INFO:Creating metrics dataframe
2024-11-27 11:21:53,018:INFO:Uploading results into container
2024-11-27 11:21:53,018:INFO:Uploading model into container now
2024-11-27 11:21:53,018:INFO:_master_model_container: 1
2024-11-27 11:21:53,018:INFO:_display_container: 2
2024-11-27 11:21:53,018:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-27 11:21:53,033:INFO:create_model() successfully completed......................................
2024-11-27 11:21:55,582:INFO:SubProcess create_model() end ==================================
2024-11-27 11:21:55,582:INFO:Creating metrics dataframe
2024-11-27 11:21:55,605:INFO:Initializing K Neighbors Classifier
2024-11-27 11:21:55,612:INFO:Total runtime is 0.2272501269976298 minutes
2024-11-27 11:21:55,612:INFO:SubProcess create_model() called ==================================
2024-11-27 11:21:55,612:INFO:Initializing create_model()
2024-11-27 11:21:55,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:21:55,612:INFO:Checking exceptions
2024-11-27 11:21:55,612:INFO:Importing libraries
2024-11-27 11:21:55,612:INFO:Copying training dataset
2024-11-27 11:21:55,710:INFO:Defining folds
2024-11-27 11:21:55,721:INFO:Declaring metric variables
2024-11-27 11:21:55,752:INFO:Importing untrained model
2024-11-27 11:21:55,752:INFO:K Neighbors Classifier Imported successfully
2024-11-27 11:21:55,805:INFO:Starting cross validation
2024-11-27 11:21:55,805:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:21:59,433:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:59,509:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:59,589:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:59,589:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:59,690:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:21:59,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:02,922:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:03,043:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:03,140:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:03,153:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:03,233:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:03,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:05,866:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:05,937:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:05,964:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:06,084:INFO:Calculating mean and std
2024-11-27 11:22:06,086:INFO:Creating metrics dataframe
2024-11-27 11:22:06,091:INFO:Uploading results into container
2024-11-27 11:22:06,093:INFO:Uploading model into container now
2024-11-27 11:22:06,093:INFO:_master_model_container: 2
2024-11-27 11:22:06,093:INFO:_display_container: 2
2024-11-27 11:22:06,094:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-27 11:22:06,094:INFO:create_model() successfully completed......................................
2024-11-27 11:22:06,409:INFO:SubProcess create_model() end ==================================
2024-11-27 11:22:06,409:INFO:Creating metrics dataframe
2024-11-27 11:22:06,421:INFO:Initializing Naive Bayes
2024-11-27 11:22:06,421:INFO:Total runtime is 0.40740817387898765 minutes
2024-11-27 11:22:06,446:INFO:SubProcess create_model() called ==================================
2024-11-27 11:22:06,446:INFO:Initializing create_model()
2024-11-27 11:22:06,446:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:22:06,446:INFO:Checking exceptions
2024-11-27 11:22:06,453:INFO:Importing libraries
2024-11-27 11:22:06,453:INFO:Copying training dataset
2024-11-27 11:22:06,563:INFO:Defining folds
2024-11-27 11:22:06,563:INFO:Declaring metric variables
2024-11-27 11:22:06,580:INFO:Importing untrained model
2024-11-27 11:22:06,606:INFO:Naive Bayes Imported successfully
2024-11-27 11:22:06,624:INFO:Starting cross validation
2024-11-27 11:22:06,642:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:22:06,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:06,978:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,035:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,181:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,184:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,609:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,651:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,682:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,722:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,739:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:07,770:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:08,026:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:08,114:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:08,203:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:08,332:INFO:Calculating mean and std
2024-11-27 11:22:08,332:INFO:Creating metrics dataframe
2024-11-27 11:22:08,344:INFO:Uploading results into container
2024-11-27 11:22:08,344:INFO:Uploading model into container now
2024-11-27 11:22:08,344:INFO:_master_model_container: 3
2024-11-27 11:22:08,344:INFO:_display_container: 2
2024-11-27 11:22:08,344:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-27 11:22:08,344:INFO:create_model() successfully completed......................................
2024-11-27 11:22:08,672:INFO:SubProcess create_model() end ==================================
2024-11-27 11:22:08,672:INFO:Creating metrics dataframe
2024-11-27 11:22:08,693:INFO:Initializing Decision Tree Classifier
2024-11-27 11:22:08,704:INFO:Total runtime is 0.44544591903686526 minutes
2024-11-27 11:22:08,725:INFO:SubProcess create_model() called ==================================
2024-11-27 11:22:08,725:INFO:Initializing create_model()
2024-11-27 11:22:08,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:22:08,725:INFO:Checking exceptions
2024-11-27 11:22:08,735:INFO:Importing libraries
2024-11-27 11:22:08,735:INFO:Copying training dataset
2024-11-27 11:22:08,820:INFO:Defining folds
2024-11-27 11:22:08,828:INFO:Declaring metric variables
2024-11-27 11:22:08,828:INFO:Importing untrained model
2024-11-27 11:22:08,851:INFO:Decision Tree Classifier Imported successfully
2024-11-27 11:22:08,883:INFO:Starting cross validation
2024-11-27 11:22:08,883:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:22:10,852:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:10,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:10,961:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:11,040:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:11,053:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:11,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:13,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:13,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:13,097:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:13,164:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:13,229:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:13,275:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:14,507:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:14,572:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:14,608:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:14,664:INFO:Calculating mean and std
2024-11-27 11:22:14,664:INFO:Creating metrics dataframe
2024-11-27 11:22:14,675:INFO:Uploading results into container
2024-11-27 11:22:14,675:INFO:Uploading model into container now
2024-11-27 11:22:14,675:INFO:_master_model_container: 4
2024-11-27 11:22:14,675:INFO:_display_container: 2
2024-11-27 11:22:14,675:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7683, splitter='best')
2024-11-27 11:22:14,675:INFO:create_model() successfully completed......................................
2024-11-27 11:22:15,034:INFO:SubProcess create_model() end ==================================
2024-11-27 11:22:15,034:INFO:Creating metrics dataframe
2024-11-27 11:22:15,060:INFO:Initializing SVM - Linear Kernel
2024-11-27 11:22:15,061:INFO:Total runtime is 0.5514037768046062 minutes
2024-11-27 11:22:15,068:INFO:SubProcess create_model() called ==================================
2024-11-27 11:22:15,069:INFO:Initializing create_model()
2024-11-27 11:22:15,069:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:22:15,069:INFO:Checking exceptions
2024-11-27 11:22:15,069:INFO:Importing libraries
2024-11-27 11:22:15,069:INFO:Copying training dataset
2024-11-27 11:22:15,347:INFO:Defining folds
2024-11-27 11:22:15,347:INFO:Declaring metric variables
2024-11-27 11:22:15,362:INFO:Importing untrained model
2024-11-27 11:22:15,394:INFO:SVM - Linear Kernel Imported successfully
2024-11-27 11:22:15,425:INFO:Starting cross validation
2024-11-27 11:22:15,425:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:22:16,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:16,078:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:16,180:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:16,356:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:16,576:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:16,697:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:17,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:17,110:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:17,177:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:17,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:17,578:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:17,718:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:17,892:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:17,982:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:18,006:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:18,074:INFO:Calculating mean and std
2024-11-27 11:22:18,076:INFO:Creating metrics dataframe
2024-11-27 11:22:18,105:INFO:Uploading results into container
2024-11-27 11:22:18,105:INFO:Uploading model into container now
2024-11-27 11:22:18,105:INFO:_master_model_container: 5
2024-11-27 11:22:18,105:INFO:_display_container: 2
2024-11-27 11:22:18,105:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7683, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-27 11:22:18,105:INFO:create_model() successfully completed......................................
2024-11-27 11:22:18,455:INFO:SubProcess create_model() end ==================================
2024-11-27 11:22:18,455:INFO:Creating metrics dataframe
2024-11-27 11:22:18,485:INFO:Initializing Ridge Classifier
2024-11-27 11:22:18,485:INFO:Total runtime is 0.6084627985954285 minutes
2024-11-27 11:22:18,500:INFO:SubProcess create_model() called ==================================
2024-11-27 11:22:18,501:INFO:Initializing create_model()
2024-11-27 11:22:18,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:22:18,503:INFO:Checking exceptions
2024-11-27 11:22:18,503:INFO:Importing libraries
2024-11-27 11:22:18,503:INFO:Copying training dataset
2024-11-27 11:22:18,599:INFO:Defining folds
2024-11-27 11:22:18,599:INFO:Declaring metric variables
2024-11-27 11:22:18,625:INFO:Importing untrained model
2024-11-27 11:22:18,625:INFO:Ridge Classifier Imported successfully
2024-11-27 11:22:18,667:INFO:Starting cross validation
2024-11-27 11:22:18,667:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:22:19,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,060:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,161:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,161:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,267:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,283:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,748:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,752:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:19,875:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:20,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:20,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:20,361:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:20,441:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:20,541:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:20,686:INFO:Calculating mean and std
2024-11-27 11:22:20,686:INFO:Creating metrics dataframe
2024-11-27 11:22:20,715:INFO:Uploading results into container
2024-11-27 11:22:20,715:INFO:Uploading model into container now
2024-11-27 11:22:20,715:INFO:_master_model_container: 6
2024-11-27 11:22:20,715:INFO:_display_container: 2
2024-11-27 11:22:20,715:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7683, solver='auto',
                tol=0.0001)
2024-11-27 11:22:20,715:INFO:create_model() successfully completed......................................
2024-11-27 11:22:21,059:INFO:SubProcess create_model() end ==================================
2024-11-27 11:22:21,059:INFO:Creating metrics dataframe
2024-11-27 11:22:21,081:INFO:Initializing Random Forest Classifier
2024-11-27 11:22:21,081:INFO:Total runtime is 0.6517306367556255 minutes
2024-11-27 11:22:21,092:INFO:SubProcess create_model() called ==================================
2024-11-27 11:22:21,092:INFO:Initializing create_model()
2024-11-27 11:22:21,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:22:21,092:INFO:Checking exceptions
2024-11-27 11:22:21,107:INFO:Importing libraries
2024-11-27 11:22:21,107:INFO:Copying training dataset
2024-11-27 11:22:21,206:INFO:Defining folds
2024-11-27 11:22:21,206:INFO:Declaring metric variables
2024-11-27 11:22:21,235:INFO:Importing untrained model
2024-11-27 11:22:21,247:INFO:Random Forest Classifier Imported successfully
2024-11-27 11:22:21,278:INFO:Starting cross validation
2024-11-27 11:22:21,278:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:22:45,884:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:45,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:46,111:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:46,121:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:46,191:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:22:46,311:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:09,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:09,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:09,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:09,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:10,024:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:10,149:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:22,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:22,152:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:22,201:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:22,307:INFO:Calculating mean and std
2024-11-27 11:23:22,307:INFO:Creating metrics dataframe
2024-11-27 11:23:22,307:INFO:Uploading results into container
2024-11-27 11:23:22,307:INFO:Uploading model into container now
2024-11-27 11:23:22,324:INFO:_master_model_container: 7
2024-11-27 11:23:22,325:INFO:_display_container: 2
2024-11-27 11:23:22,325:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7683, verbose=0,
                       warm_start=False)
2024-11-27 11:23:22,325:INFO:create_model() successfully completed......................................
2024-11-27 11:23:22,739:INFO:SubProcess create_model() end ==================================
2024-11-27 11:23:22,740:INFO:Creating metrics dataframe
2024-11-27 11:23:22,765:INFO:Initializing Quadratic Discriminant Analysis
2024-11-27 11:23:22,765:INFO:Total runtime is 1.6798060099283856 minutes
2024-11-27 11:23:22,775:INFO:SubProcess create_model() called ==================================
2024-11-27 11:23:22,775:INFO:Initializing create_model()
2024-11-27 11:23:22,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:23:22,775:INFO:Checking exceptions
2024-11-27 11:23:22,775:INFO:Importing libraries
2024-11-27 11:23:22,775:INFO:Copying training dataset
2024-11-27 11:23:22,878:INFO:Defining folds
2024-11-27 11:23:22,878:INFO:Declaring metric variables
2024-11-27 11:23:22,885:INFO:Importing untrained model
2024-11-27 11:23:22,903:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-27 11:23:22,919:INFO:Starting cross validation
2024-11-27 11:23:22,919:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:23:23,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:23,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:23,370:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:23,416:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:23,470:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:23,543:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:23,954:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,093:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,105:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,173:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,196:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,319:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,607:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,654:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,711:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:24,810:INFO:Calculating mean and std
2024-11-27 11:23:24,810:INFO:Creating metrics dataframe
2024-11-27 11:23:24,824:INFO:Uploading results into container
2024-11-27 11:23:24,827:INFO:Uploading model into container now
2024-11-27 11:23:24,827:INFO:_master_model_container: 8
2024-11-27 11:23:24,827:INFO:_display_container: 2
2024-11-27 11:23:24,827:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-27 11:23:24,827:INFO:create_model() successfully completed......................................
2024-11-27 11:23:25,169:INFO:SubProcess create_model() end ==================================
2024-11-27 11:23:25,169:INFO:Creating metrics dataframe
2024-11-27 11:23:25,202:INFO:Initializing Ada Boost Classifier
2024-11-27 11:23:25,202:INFO:Total runtime is 1.7204195618629456 minutes
2024-11-27 11:23:25,219:INFO:SubProcess create_model() called ==================================
2024-11-27 11:23:25,220:INFO:Initializing create_model()
2024-11-27 11:23:25,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:23:25,221:INFO:Checking exceptions
2024-11-27 11:23:25,221:INFO:Importing libraries
2024-11-27 11:23:25,221:INFO:Copying training dataset
2024-11-27 11:23:25,261:INFO:Defining folds
2024-11-27 11:23:25,261:INFO:Declaring metric variables
2024-11-27 11:23:25,278:INFO:Importing untrained model
2024-11-27 11:23:25,292:INFO:Ada Boost Classifier Imported successfully
2024-11-27 11:23:25,324:INFO:Starting cross validation
2024-11-27 11:23:25,324:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:23:25,559:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:23:32,444:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:32,519:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:32,692:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:32,872:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:32,949:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:23:32,976:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:33,103:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:33,303:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:23:39,027:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:39,104:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:39,242:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:39,270:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:39,341:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:39,380:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:23:39,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:44,324:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:44,404:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:44,489:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:23:44,547:INFO:Calculating mean and std
2024-11-27 11:23:44,547:INFO:Creating metrics dataframe
2024-11-27 11:23:44,547:INFO:Uploading results into container
2024-11-27 11:23:44,547:INFO:Uploading model into container now
2024-11-27 11:23:44,547:INFO:_master_model_container: 9
2024-11-27 11:23:44,547:INFO:_display_container: 2
2024-11-27 11:23:44,566:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7683)
2024-11-27 11:23:44,567:INFO:create_model() successfully completed......................................
2024-11-27 11:23:44,891:INFO:SubProcess create_model() end ==================================
2024-11-27 11:23:44,891:INFO:Creating metrics dataframe
2024-11-27 11:23:44,923:INFO:Initializing Gradient Boosting Classifier
2024-11-27 11:23:44,923:INFO:Total runtime is 2.049099079767863 minutes
2024-11-27 11:23:44,954:INFO:SubProcess create_model() called ==================================
2024-11-27 11:23:44,954:INFO:Initializing create_model()
2024-11-27 11:23:44,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:23:44,954:INFO:Checking exceptions
2024-11-27 11:23:44,954:INFO:Importing libraries
2024-11-27 11:23:44,954:INFO:Copying training dataset
2024-11-27 11:23:45,063:INFO:Defining folds
2024-11-27 11:23:45,063:INFO:Declaring metric variables
2024-11-27 11:23:45,079:INFO:Importing untrained model
2024-11-27 11:23:45,095:INFO:Gradient Boosting Classifier Imported successfully
2024-11-27 11:23:45,126:INFO:Starting cross validation
2024-11-27 11:23:45,126:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:24:12,774:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:12,836:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:12,864:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:12,884:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:12,894:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:12,932:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:39,818:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:39,905:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:39,938:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:40,030:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:40,084:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:24:40,125:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:03,294:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:03,387:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:03,448:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:03,576:INFO:Calculating mean and std
2024-11-27 11:25:03,576:INFO:Creating metrics dataframe
2024-11-27 11:25:03,576:INFO:Uploading results into container
2024-11-27 11:25:03,592:INFO:Uploading model into container now
2024-11-27 11:25:03,592:INFO:_master_model_container: 10
2024-11-27 11:25:03,592:INFO:_display_container: 2
2024-11-27 11:25:03,592:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7683, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-27 11:25:03,605:INFO:create_model() successfully completed......................................
2024-11-27 11:25:03,948:INFO:SubProcess create_model() end ==================================
2024-11-27 11:25:03,948:INFO:Creating metrics dataframe
2024-11-27 11:25:03,982:INFO:Initializing Linear Discriminant Analysis
2024-11-27 11:25:03,982:INFO:Total runtime is 3.3667492866516113 minutes
2024-11-27 11:25:04,014:INFO:SubProcess create_model() called ==================================
2024-11-27 11:25:04,014:INFO:Initializing create_model()
2024-11-27 11:25:04,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:25:04,014:INFO:Checking exceptions
2024-11-27 11:25:04,014:INFO:Importing libraries
2024-11-27 11:25:04,014:INFO:Copying training dataset
2024-11-27 11:25:04,089:INFO:Defining folds
2024-11-27 11:25:04,089:INFO:Declaring metric variables
2024-11-27 11:25:04,118:INFO:Importing untrained model
2024-11-27 11:25:04,126:INFO:Linear Discriminant Analysis Imported successfully
2024-11-27 11:25:04,334:INFO:Starting cross validation
2024-11-27 11:25:04,338:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:25:04,798:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:04,809:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:04,909:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:04,938:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,066:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,092:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,407:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,411:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,464:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,482:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,541:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,560:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,918:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:05,979:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:06,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:06,176:INFO:Calculating mean and std
2024-11-27 11:25:06,176:INFO:Creating metrics dataframe
2024-11-27 11:25:06,189:INFO:Uploading results into container
2024-11-27 11:25:06,189:INFO:Uploading model into container now
2024-11-27 11:25:06,189:INFO:_master_model_container: 11
2024-11-27 11:25:06,189:INFO:_display_container: 2
2024-11-27 11:25:06,189:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-27 11:25:06,189:INFO:create_model() successfully completed......................................
2024-11-27 11:25:06,555:INFO:SubProcess create_model() end ==================================
2024-11-27 11:25:06,555:INFO:Creating metrics dataframe
2024-11-27 11:25:06,580:INFO:Initializing Extra Trees Classifier
2024-11-27 11:25:06,580:INFO:Total runtime is 3.410048282146454 minutes
2024-11-27 11:25:06,596:INFO:SubProcess create_model() called ==================================
2024-11-27 11:25:06,597:INFO:Initializing create_model()
2024-11-27 11:25:06,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:25:06,599:INFO:Checking exceptions
2024-11-27 11:25:06,599:INFO:Importing libraries
2024-11-27 11:25:06,599:INFO:Copying training dataset
2024-11-27 11:25:06,642:INFO:Defining folds
2024-11-27 11:25:06,642:INFO:Declaring metric variables
2024-11-27 11:25:06,642:INFO:Importing untrained model
2024-11-27 11:25:06,642:INFO:Extra Trees Classifier Imported successfully
2024-11-27 11:25:06,662:INFO:Starting cross validation
2024-11-27 11:25:06,662:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:25:16,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:16,206:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:16,240:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:16,291:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:16,308:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:16,389:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:27,718:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:27,905:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:27,934:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:28,009:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:28,036:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:28,131:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:33,643:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:33,705:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:33,796:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:33,907:INFO:Calculating mean and std
2024-11-27 11:25:33,907:INFO:Creating metrics dataframe
2024-11-27 11:25:33,924:INFO:Uploading results into container
2024-11-27 11:25:33,924:INFO:Uploading model into container now
2024-11-27 11:25:33,924:INFO:_master_model_container: 12
2024-11-27 11:25:33,924:INFO:_display_container: 2
2024-11-27 11:25:33,937:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False)
2024-11-27 11:25:33,937:INFO:create_model() successfully completed......................................
2024-11-27 11:25:34,376:INFO:SubProcess create_model() end ==================================
2024-11-27 11:25:34,376:INFO:Creating metrics dataframe
2024-11-27 11:25:34,406:INFO:Initializing Light Gradient Boosting Machine
2024-11-27 11:25:34,406:INFO:Total runtime is 3.873820964495341 minutes
2024-11-27 11:25:34,406:INFO:SubProcess create_model() called ==================================
2024-11-27 11:25:34,406:INFO:Initializing create_model()
2024-11-27 11:25:34,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:25:34,425:INFO:Checking exceptions
2024-11-27 11:25:34,425:INFO:Importing libraries
2024-11-27 11:25:34,425:INFO:Copying training dataset
2024-11-27 11:25:34,539:INFO:Defining folds
2024-11-27 11:25:34,539:INFO:Declaring metric variables
2024-11-27 11:25:34,552:INFO:Importing untrained model
2024-11-27 11:25:34,581:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-27 11:25:34,611:INFO:Starting cross validation
2024-11-27 11:25:34,619:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:25:37,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:37,445:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:37,533:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:37,620:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:37,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:37,903:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:40,750:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:40,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:40,997:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:41,395:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:41,484:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:41,615:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:43,011:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:43,077:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:43,200:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:43,300:INFO:Calculating mean and std
2024-11-27 11:25:43,314:INFO:Creating metrics dataframe
2024-11-27 11:25:43,332:INFO:Uploading results into container
2024-11-27 11:25:43,332:INFO:Uploading model into container now
2024-11-27 11:25:43,332:INFO:_master_model_container: 13
2024-11-27 11:25:43,332:INFO:_display_container: 2
2024-11-27 11:25:43,344:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7683, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-27 11:25:43,344:INFO:create_model() successfully completed......................................
2024-11-27 11:25:43,728:INFO:SubProcess create_model() end ==================================
2024-11-27 11:25:43,728:INFO:Creating metrics dataframe
2024-11-27 11:25:43,735:INFO:Initializing Dummy Classifier
2024-11-27 11:25:43,735:INFO:Total runtime is 4.029299950599671 minutes
2024-11-27 11:25:43,765:INFO:SubProcess create_model() called ==================================
2024-11-27 11:25:43,765:INFO:Initializing create_model()
2024-11-27 11:25:43,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215AFC06AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:25:43,765:INFO:Checking exceptions
2024-11-27 11:25:43,765:INFO:Importing libraries
2024-11-27 11:25:43,765:INFO:Copying training dataset
2024-11-27 11:25:43,814:INFO:Defining folds
2024-11-27 11:25:43,814:INFO:Declaring metric variables
2024-11-27 11:25:43,829:INFO:Importing untrained model
2024-11-27 11:25:43,863:INFO:Dummy Classifier Imported successfully
2024-11-27 11:25:43,906:INFO:Starting cross validation
2024-11-27 11:25:43,906:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:25:44,382:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:44,393:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:44,461:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:44,475:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:44,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:25:44,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:25:44,623:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:44,633:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,090:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,113:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,159:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,192:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,192:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:25:45,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:25:45,250:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,592:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,646:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:25:45,678:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:25:45,789:INFO:Calculating mean and std
2024-11-27 11:25:45,792:INFO:Creating metrics dataframe
2024-11-27 11:25:45,795:INFO:Uploading results into container
2024-11-27 11:25:45,796:INFO:Uploading model into container now
2024-11-27 11:25:45,796:INFO:_master_model_container: 14
2024-11-27 11:25:45,796:INFO:_display_container: 2
2024-11-27 11:25:45,796:INFO:DummyClassifier(constant=None, random_state=7683, strategy='prior')
2024-11-27 11:25:45,796:INFO:create_model() successfully completed......................................
2024-11-27 11:25:46,123:INFO:SubProcess create_model() end ==================================
2024-11-27 11:25:46,123:INFO:Creating metrics dataframe
2024-11-27 11:25:46,232:INFO:Initializing create_model()
2024-11-27 11:25:46,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:25:46,232:INFO:Checking exceptions
2024-11-27 11:25:46,232:INFO:Importing libraries
2024-11-27 11:25:46,232:INFO:Copying training dataset
2024-11-27 11:25:46,299:INFO:Defining folds
2024-11-27 11:25:46,299:INFO:Declaring metric variables
2024-11-27 11:25:46,299:INFO:Importing untrained model
2024-11-27 11:25:46,299:INFO:Declaring custom model
2024-11-27 11:25:46,299:INFO:Extra Trees Classifier Imported successfully
2024-11-27 11:25:46,323:INFO:Cross validation set to False
2024-11-27 11:25:46,324:INFO:Fitting Model
2024-11-27 11:25:52,317:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False)
2024-11-27 11:25:52,318:INFO:create_model() successfully completed......................................
2024-11-27 11:25:52,749:INFO:_master_model_container: 14
2024-11-27 11:25:52,749:INFO:_display_container: 2
2024-11-27 11:25:52,749:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False)
2024-11-27 11:25:52,749:INFO:compare_models() successfully completed......................................
2024-11-27 11:25:52,749:INFO:Initializing automl()
2024-11-27 11:25:52,749:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, optimize=F1, use_holdout=True, turbo=True, return_train_score=False)
2024-11-27 11:25:52,749:INFO:Model Selection Basis : Holdout set
2024-11-27 11:25:52,771:INFO:Checking model {'model': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5806  0.6035  0.5806  0.5850  0.5786  0.1645  0.1669
1       0.5872  0.6136  0.5872  0.5869  0.5869  0.1728  0.1730
2       0.5839  0.6086  0.5839  0.5844  0.5830  0.1675  0.1681
3       0.5861  0.6078  0.5861  0.5891  0.5848  0.1744  0.1761
4       0.5699  0.5974  0.5699  0.5698  0.5687  0.1382  0.1387
Mean    0.5815  0.6062  0.5815  0.5830  0.5804  0.1635  0.1646
Std     0.0062  0.0054  0.0062  0.0068  0.0064  0.0132  0.0133, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:25:52,771:INFO:Initializing predict_model()
2024-11-27 11:25:52,771:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAA700>)
2024-11-27 11:25:52,771:INFO:Checking exceptions
2024-11-27 11:25:52,771:INFO:Preloading libraries
2024-11-27 11:25:53,109:WARNING:Model LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is not fitted, running create_model
2024-11-27 11:25:53,109:INFO:Initializing create_model()
2024-11-27 11:25:53,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:25:53,109:INFO:Checking exceptions
2024-11-27 11:25:53,122:INFO:Importing libraries
2024-11-27 11:25:53,122:INFO:Copying training dataset
2024-11-27 11:25:53,170:INFO:Defining folds
2024-11-27 11:25:53,170:INFO:Declaring metric variables
2024-11-27 11:25:53,170:INFO:Importing untrained model
2024-11-27 11:25:53,170:INFO:Declaring custom model
2024-11-27 11:25:53,170:INFO:Logistic Regression Imported successfully
2024-11-27 11:25:53,170:INFO:Cross validation set to False
2024-11-27 11:25:53,170:INFO:Fitting Model
2024-11-27 11:25:53,704:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-27 11:25:53,704:INFO:create_model() successfully completed......................................
2024-11-27 11:25:54,063:INFO:Initializing predict_model()
2024-11-27 11:25:54,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CA9620>)
2024-11-27 11:25:54,063:INFO:Checking exceptions
2024-11-27 11:25:54,063:INFO:Preloading libraries
2024-11-27 11:25:55,403:INFO:Checking model {'model': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.6860  0.7701  0.6860  0.7089  0.6743  0.3650  0.3902
1       0.6735  0.7646  0.6735  0.7103  0.6620  0.3541  0.3857
2       0.6895  0.7784  0.6895  0.7253  0.6771  0.3800  0.4138
3       0.6834  0.7619  0.6834  0.7079  0.6714  0.3611  0.3874
4       0.6805  0.7740  0.6805  0.7172  0.6684  0.3654  0.3983
Mean    0.6826  0.7698  0.6826  0.7139  0.6706  0.3651  0.3951
Std     0.0054  0.0060  0.0054  0.0065  0.0052  0.0085  0.0103, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:25:55,403:INFO:Initializing predict_model()
2024-11-27 11:25:55,403:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAB560>)
2024-11-27 11:25:55,403:INFO:Checking exceptions
2024-11-27 11:25:55,403:INFO:Preloading libraries
2024-11-27 11:25:55,725:WARNING:Model KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') is not fitted, running create_model
2024-11-27 11:25:55,725:INFO:Initializing create_model()
2024-11-27 11:25:55,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:25:55,725:INFO:Checking exceptions
2024-11-27 11:25:55,725:INFO:Importing libraries
2024-11-27 11:25:55,725:INFO:Copying training dataset
2024-11-27 11:25:55,766:INFO:Defining folds
2024-11-27 11:25:55,766:INFO:Declaring metric variables
2024-11-27 11:25:55,766:INFO:Importing untrained model
2024-11-27 11:25:55,766:INFO:Declaring custom model
2024-11-27 11:25:55,766:INFO:K Neighbors Classifier Imported successfully
2024-11-27 11:25:55,766:INFO:Cross validation set to False
2024-11-27 11:25:55,766:INFO:Fitting Model
2024-11-27 11:25:55,810:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-27 11:25:55,810:INFO:create_model() successfully completed......................................
2024-11-27 11:25:56,154:INFO:Initializing predict_model()
2024-11-27 11:25:56,154:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAA700>)
2024-11-27 11:25:56,154:INFO:Checking exceptions
2024-11-27 11:25:56,154:INFO:Preloading libraries
2024-11-27 11:26:00,347:INFO:Checking model {'model': GaussianNB(priors=None, var_smoothing=1e-09), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5719  0.5917  0.5719  0.5742  0.5712  0.1458  0.1468
1       0.5843  0.6115  0.5843  0.5839  0.5837  0.1666  0.1669
2       0.5802  0.6001  0.5802  0.5803  0.5798  0.1601  0.1604
3       0.5703  0.5939  0.5703  0.5719  0.5698  0.1421  0.1427
4       0.5670  0.5845  0.5670  0.5668  0.5662  0.1327  0.1330
Mean    0.5747  0.5963  0.5747  0.5754  0.5742  0.1495  0.1499
Std     0.0065  0.0091  0.0065  0.0061  0.0065  0.0123  0.0122, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:26:00,349:INFO:Initializing predict_model()
2024-11-27 11:26:00,349:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CA9E40>)
2024-11-27 11:26:00,349:INFO:Checking exceptions
2024-11-27 11:26:00,349:INFO:Preloading libraries
2024-11-27 11:26:00,593:WARNING:Model GaussianNB(priors=None, var_smoothing=1e-09) is not fitted, running create_model
2024-11-27 11:26:00,593:INFO:Initializing create_model()
2024-11-27 11:26:00,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:26:00,593:INFO:Checking exceptions
2024-11-27 11:26:00,593:INFO:Importing libraries
2024-11-27 11:26:00,593:INFO:Copying training dataset
2024-11-27 11:26:00,640:INFO:Defining folds
2024-11-27 11:26:00,640:INFO:Declaring metric variables
2024-11-27 11:26:00,640:INFO:Importing untrained model
2024-11-27 11:26:00,640:INFO:Declaring custom model
2024-11-27 11:26:00,656:INFO:Naive Bayes Imported successfully
2024-11-27 11:26:00,658:INFO:Cross validation set to False
2024-11-27 11:26:00,658:INFO:Fitting Model
2024-11-27 11:26:00,752:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-27 11:26:00,752:INFO:create_model() successfully completed......................................
2024-11-27 11:26:01,091:INFO:Initializing predict_model()
2024-11-27 11:26:01,091:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215833D3BA0>)
2024-11-27 11:26:01,091:INFO:Checking exceptions
2024-11-27 11:26:01,091:INFO:Preloading libraries
2024-11-27 11:26:02,388:INFO:Checking model {'model': DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7683, splitter='best'), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.7355  0.7352  0.7355  0.7355  0.7355  0.4705  0.4705
1       0.7196  0.7202  0.7196  0.7207  0.7196  0.4396  0.4403
2       0.7364  0.7365  0.7364  0.7372  0.7362  0.4728  0.4736
3       0.7390  0.7386  0.7390  0.7390  0.7389  0.4774  0.4776
4       0.7317  0.7320  0.7317  0.7323  0.7317  0.4637  0.4641
Mean    0.7324  0.7325  0.7324  0.7329  0.7324  0.4648  0.4652
Std     0.0068  0.0065  0.0068  0.0065  0.0068  0.0134  0.0132, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:26:02,388:INFO:Initializing predict_model()
2024-11-27 11:26:02,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7683, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CA9940>)
2024-11-27 11:26:02,388:INFO:Checking exceptions
2024-11-27 11:26:02,388:INFO:Preloading libraries
2024-11-27 11:26:02,623:WARNING:Model DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7683, splitter='best') is not fitted, running create_model
2024-11-27 11:26:02,623:INFO:Initializing create_model()
2024-11-27 11:26:02,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7683, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:26:02,623:INFO:Checking exceptions
2024-11-27 11:26:02,623:INFO:Importing libraries
2024-11-27 11:26:02,623:INFO:Copying training dataset
2024-11-27 11:26:02,716:INFO:Defining folds
2024-11-27 11:26:02,716:INFO:Declaring metric variables
2024-11-27 11:26:02,716:INFO:Importing untrained model
2024-11-27 11:26:02,716:INFO:Declaring custom model
2024-11-27 11:26:02,716:INFO:Decision Tree Classifier Imported successfully
2024-11-27 11:26:02,716:INFO:Cross validation set to False
2024-11-27 11:26:02,716:INFO:Fitting Model
2024-11-27 11:26:04,361:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7683, splitter='best')
2024-11-27 11:26:04,361:INFO:create_model() successfully completed......................................
2024-11-27 11:26:04,704:INFO:Initializing predict_model()
2024-11-27 11:26:04,704:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7683, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215833D3BA0>)
2024-11-27 11:26:04,704:INFO:Checking exceptions
2024-11-27 11:26:04,704:INFO:Preloading libraries
2024-11-27 11:26:05,937:INFO:Checking model {'model': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7683, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5683  0.5859  0.5683  0.5704  0.5678  0.1386  0.1394
1       0.5636  0.5818  0.5636  0.5629  0.5621  0.1240  0.1245
2       0.5426  0.5639  0.5426  0.5432  0.5403  0.0847  0.0855
3       0.5651  0.5901  0.5651  0.5674  0.5641  0.1323  0.1333
4       0.5666  0.5877  0.5666  0.5672  0.5626  0.1302  0.1322
Mean    0.5613  0.5819  0.5613  0.5622  0.5594  0.1220  0.1230
Std     0.0094  0.0094  0.0094  0.0098  0.0097  0.0192  0.0193, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:26:05,937:INFO:Initializing predict_model()
2024-11-27 11:26:05,937:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7683, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CA9620>)
2024-11-27 11:26:05,937:INFO:Checking exceptions
2024-11-27 11:26:05,937:INFO:Preloading libraries
2024-11-27 11:26:06,173:WARNING:Model SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7683, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) is not fitted, running create_model
2024-11-27 11:26:06,173:INFO:Initializing create_model()
2024-11-27 11:26:06,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7683, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:26:06,173:INFO:Checking exceptions
2024-11-27 11:26:06,173:INFO:Importing libraries
2024-11-27 11:26:06,198:INFO:Copying training dataset
2024-11-27 11:26:06,279:INFO:Defining folds
2024-11-27 11:26:06,279:INFO:Declaring metric variables
2024-11-27 11:26:06,279:INFO:Importing untrained model
2024-11-27 11:26:06,279:INFO:Declaring custom model
2024-11-27 11:26:06,279:INFO:SVM - Linear Kernel Imported successfully
2024-11-27 11:26:06,279:INFO:Cross validation set to False
2024-11-27 11:26:06,279:INFO:Fitting Model
2024-11-27 11:26:06,727:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7683, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-27 11:26:06,727:INFO:create_model() successfully completed......................................
2024-11-27 11:26:07,045:INFO:Initializing predict_model()
2024-11-27 11:26:07,045:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7683, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215833D3BA0>)
2024-11-27 11:26:07,045:INFO:Checking exceptions
2024-11-27 11:26:07,045:INFO:Preloading libraries
2024-11-27 11:26:08,561:INFO:Checking model {'model': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7683, solver='auto',
                tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5818  0.6033  0.5818  0.5864  0.5798  0.1671  0.1695
1       0.5866  0.6137  0.5866  0.5863  0.5862  0.1715  0.1717
2       0.5835  0.6087  0.5835  0.5840  0.5826  0.1666  0.1673
3       0.5851  0.6078  0.5851  0.5881  0.5837  0.1724  0.1741
4       0.5699  0.5973  0.5699  0.5698  0.5687  0.1382  0.1387
Mean    0.5814  0.6062  0.5814  0.5829  0.5802  0.1632  0.1643
Std     0.0059  0.0055  0.0059  0.0067  0.0061  0.0127  0.0130, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:26:08,576:INFO:Initializing predict_model()
2024-11-27 11:26:08,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7683, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215833D3BA0>)
2024-11-27 11:26:08,576:INFO:Checking exceptions
2024-11-27 11:26:08,576:INFO:Preloading libraries
2024-11-27 11:26:08,920:WARNING:Model RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7683, solver='auto',
                tol=0.0001) is not fitted, running create_model
2024-11-27 11:26:08,920:INFO:Initializing create_model()
2024-11-27 11:26:08,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7683, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:26:08,920:INFO:Checking exceptions
2024-11-27 11:26:08,920:INFO:Importing libraries
2024-11-27 11:26:08,920:INFO:Copying training dataset
2024-11-27 11:26:08,982:INFO:Defining folds
2024-11-27 11:26:08,982:INFO:Declaring metric variables
2024-11-27 11:26:08,982:INFO:Importing untrained model
2024-11-27 11:26:08,982:INFO:Declaring custom model
2024-11-27 11:26:08,982:INFO:Ridge Classifier Imported successfully
2024-11-27 11:26:08,982:INFO:Cross validation set to False
2024-11-27 11:26:08,982:INFO:Fitting Model
2024-11-27 11:26:09,060:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7683, solver='auto',
                tol=0.0001)
2024-11-27 11:26:09,060:INFO:create_model() successfully completed......................................
2024-11-27 11:26:09,388:INFO:Initializing predict_model()
2024-11-27 11:26:09,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7683, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CA9620>)
2024-11-27 11:26:09,388:INFO:Checking exceptions
2024-11-27 11:26:09,388:INFO:Preloading libraries
2024-11-27 11:26:10,810:INFO:Checking model {'model': RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7683, verbose=0,
                       warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8448  0.9129  0.8448  0.8557  0.8441  0.6909  0.7010
1       0.8517  0.9126  0.8517  0.8593  0.8505  0.7018  0.7101
2       0.8577  0.9146  0.8577  0.8663  0.8568  0.7152  0.7238
3       0.8413  0.9062  0.8413  0.8525  0.8404  0.6837  0.6942
4       0.8535  0.9128  0.8535  0.8629  0.8523  0.7061  0.7159
Mean    0.8498  0.9118  0.8498  0.8593  0.8488  0.6995  0.7090
Std     0.0059  0.0029  0.0059  0.0049  0.0059  0.0111  0.0105, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:26:10,810:INFO:Initializing predict_model()
2024-11-27 11:26:10,810:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7683, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002158C432480>)
2024-11-27 11:26:10,810:INFO:Checking exceptions
2024-11-27 11:26:10,810:INFO:Preloading libraries
2024-11-27 11:26:11,060:WARNING:Model RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7683, verbose=0,
                       warm_start=False) is not fitted, running create_model
2024-11-27 11:26:11,060:INFO:Initializing create_model()
2024-11-27 11:26:11,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7683, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:26:11,060:INFO:Checking exceptions
2024-11-27 11:26:11,060:INFO:Importing libraries
2024-11-27 11:26:11,060:INFO:Copying training dataset
2024-11-27 11:26:11,119:INFO:Defining folds
2024-11-27 11:26:11,119:INFO:Declaring metric variables
2024-11-27 11:26:11,120:INFO:Importing untrained model
2024-11-27 11:26:11,120:INFO:Declaring custom model
2024-11-27 11:26:11,120:INFO:Random Forest Classifier Imported successfully
2024-11-27 11:26:11,121:INFO:Cross validation set to False
2024-11-27 11:26:11,121:INFO:Fitting Model
2024-11-27 11:26:25,853:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7683, verbose=0,
                       warm_start=False)
2024-11-27 11:26:25,853:INFO:create_model() successfully completed......................................
2024-11-27 11:26:26,223:INFO:Initializing predict_model()
2024-11-27 11:26:26,223:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7683, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215833D3BA0>)
2024-11-27 11:26:26,223:INFO:Checking exceptions
2024-11-27 11:26:26,223:INFO:Preloading libraries
2024-11-27 11:26:28,256:INFO:Checking model {'model': QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5970  0.6346  0.5970  0.6017  0.5951  0.1971  0.1999
1       0.6019  0.6363  0.6019  0.6018  0.6003  0.2007  0.2018
2       0.6034  0.6351  0.6034  0.6048  0.6018  0.2064  0.2080
3       0.5965  0.6341  0.5965  0.5996  0.5952  0.1950  0.1969
4       0.5925  0.6252  0.5925  0.5926  0.5913  0.1834  0.1842
Mean    0.5983  0.6331  0.5983  0.6001  0.5967  0.1965  0.1982
Std     0.0039  0.0040  0.0039  0.0041  0.0038  0.0076  0.0079, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:26:28,256:INFO:Initializing predict_model()
2024-11-27 11:26:28,256:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021587B4E2A0>)
2024-11-27 11:26:28,256:INFO:Checking exceptions
2024-11-27 11:26:28,256:INFO:Preloading libraries
2024-11-27 11:26:28,487:WARNING:Model QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) is not fitted, running create_model
2024-11-27 11:26:28,487:INFO:Initializing create_model()
2024-11-27 11:26:28,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:26:28,487:INFO:Checking exceptions
2024-11-27 11:26:28,518:INFO:Importing libraries
2024-11-27 11:26:28,518:INFO:Copying training dataset
2024-11-27 11:26:28,597:INFO:Defining folds
2024-11-27 11:26:28,597:INFO:Declaring metric variables
2024-11-27 11:26:28,597:INFO:Importing untrained model
2024-11-27 11:26:28,597:INFO:Declaring custom model
2024-11-27 11:26:28,597:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-27 11:26:28,597:INFO:Cross validation set to False
2024-11-27 11:26:28,597:INFO:Fitting Model
2024-11-27 11:26:28,690:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-27 11:26:28,690:INFO:create_model() successfully completed......................................
2024-11-27 11:26:29,052:INFO:Initializing predict_model()
2024-11-27 11:26:29,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002158C432480>)
2024-11-27 11:26:29,053:INFO:Checking exceptions
2024-11-27 11:26:29,053:INFO:Preloading libraries
2024-11-27 11:26:30,471:INFO:Checking model {'model': AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7683), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.7693  0.8349  0.7693  0.7796  0.7681  0.5407  0.5497
1       0.7689  0.8258  0.7689  0.7723  0.7676  0.5357  0.5399
2       0.7687  0.8315  0.7687  0.7725  0.7678  0.5372  0.5411
3       0.7587  0.8243  0.7587  0.7683  0.7573  0.5192  0.5277
4       0.7695  0.8283  0.7695  0.7758  0.7677  0.5375  0.5444
Mean    0.7670  0.8290  0.7670  0.7737  0.7657  0.5341  0.5406
Std     0.0042  0.0039  0.0042  0.0038  0.0042  0.0076  0.0073, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:26:30,471:INFO:Initializing predict_model()
2024-11-27 11:26:30,471:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7683), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002158C432480>)
2024-11-27 11:26:30,471:INFO:Checking exceptions
2024-11-27 11:26:30,471:INFO:Preloading libraries
2024-11-27 11:26:30,784:WARNING:Model AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7683) is not fitted, running create_model
2024-11-27 11:26:30,784:INFO:Initializing create_model()
2024-11-27 11:26:30,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7683), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:26:30,784:INFO:Checking exceptions
2024-11-27 11:26:30,784:INFO:Importing libraries
2024-11-27 11:26:30,784:INFO:Copying training dataset
2024-11-27 11:26:30,862:INFO:Defining folds
2024-11-27 11:26:30,862:INFO:Declaring metric variables
2024-11-27 11:26:30,862:INFO:Importing untrained model
2024-11-27 11:26:30,862:INFO:Declaring custom model
2024-11-27 11:26:30,862:INFO:Ada Boost Classifier Imported successfully
2024-11-27 11:26:30,862:INFO:Cross validation set to False
2024-11-27 11:26:30,862:INFO:Fitting Model
2024-11-27 11:26:36,948:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7683)
2024-11-27 11:26:36,948:INFO:create_model() successfully completed......................................
2024-11-27 11:26:37,346:INFO:Initializing predict_model()
2024-11-27 11:26:37,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7683), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215833D3BA0>)
2024-11-27 11:26:37,347:INFO:Checking exceptions
2024-11-27 11:26:37,347:INFO:Preloading libraries
2024-11-27 11:26:38,949:INFO:Checking model {'model': GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7683, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8214  0.8721  0.8214  0.8460  0.8190  0.6452  0.6680
1       0.8253  0.8628  0.8253  0.8432  0.8223  0.6479  0.6667
2       0.8316  0.8718  0.8316  0.8538  0.8288  0.6628  0.6848
3       0.8168  0.8626  0.8168  0.8426  0.8140  0.6357  0.6599
4       0.8197  0.8707  0.8197  0.8385  0.8167  0.6377  0.6570
Mean    0.8230  0.8680  0.8230  0.8448  0.8201  0.6459  0.6673
Std     0.0051  0.0044  0.0051  0.0051  0.0051  0.0096  0.0097, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:26:38,949:INFO:Initializing predict_model()
2024-11-27 11:26:38,949:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7683, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021587B4E2A0>)
2024-11-27 11:26:38,949:INFO:Checking exceptions
2024-11-27 11:26:38,949:INFO:Preloading libraries
2024-11-27 11:26:39,200:WARNING:Model GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7683, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is not fitted, running create_model
2024-11-27 11:26:39,200:INFO:Initializing create_model()
2024-11-27 11:26:39,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7683, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:26:39,200:INFO:Checking exceptions
2024-11-27 11:26:39,216:INFO:Importing libraries
2024-11-27 11:26:39,216:INFO:Copying training dataset
2024-11-27 11:26:39,292:INFO:Defining folds
2024-11-27 11:26:39,292:INFO:Declaring metric variables
2024-11-27 11:26:39,292:INFO:Importing untrained model
2024-11-27 11:26:39,292:INFO:Declaring custom model
2024-11-27 11:26:39,292:INFO:Gradient Boosting Classifier Imported successfully
2024-11-27 11:26:39,292:INFO:Cross validation set to False
2024-11-27 11:26:39,292:INFO:Fitting Model
2024-11-27 11:27:06,986:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7683, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-27 11:27:06,987:INFO:create_model() successfully completed......................................
2024-11-27 11:27:07,316:INFO:Initializing predict_model()
2024-11-27 11:27:07,316:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7683, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002158C432480>)
2024-11-27 11:27:07,316:INFO:Checking exceptions
2024-11-27 11:27:07,316:INFO:Preloading libraries
2024-11-27 11:27:08,693:INFO:Checking model {'model': LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5816  0.6033  0.5816  0.5862  0.5796  0.1667  0.1691
1       0.5866  0.6137  0.5866  0.5863  0.5862  0.1715  0.1717
2       0.5835  0.6087  0.5835  0.5840  0.5826  0.1666  0.1673
3       0.5851  0.6078  0.5851  0.5881  0.5837  0.1724  0.1741
4       0.5699  0.5973  0.5699  0.5698  0.5687  0.1382  0.1387
Mean    0.5813  0.6062  0.5813  0.5829  0.5802  0.1631  0.1642
Std     0.0059  0.0055  0.0059  0.0067  0.0061  0.0127  0.0129, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:27:08,696:INFO:Initializing predict_model()
2024-11-27 11:27:08,696:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215833D3BA0>)
2024-11-27 11:27:08,696:INFO:Checking exceptions
2024-11-27 11:27:08,696:INFO:Preloading libraries
2024-11-27 11:27:09,018:WARNING:Model LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is not fitted, running create_model
2024-11-27 11:27:09,020:INFO:Initializing create_model()
2024-11-27 11:27:09,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:27:09,020:INFO:Checking exceptions
2024-11-27 11:27:09,022:INFO:Importing libraries
2024-11-27 11:27:09,022:INFO:Copying training dataset
2024-11-27 11:27:09,076:INFO:Defining folds
2024-11-27 11:27:09,076:INFO:Declaring metric variables
2024-11-27 11:27:09,076:INFO:Importing untrained model
2024-11-27 11:27:09,076:INFO:Declaring custom model
2024-11-27 11:27:09,076:INFO:Linear Discriminant Analysis Imported successfully
2024-11-27 11:27:09,076:INFO:Cross validation set to False
2024-11-27 11:27:09,076:INFO:Fitting Model
2024-11-27 11:27:09,237:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-27 11:27:09,237:INFO:create_model() successfully completed......................................
2024-11-27 11:27:09,612:INFO:Initializing predict_model()
2024-11-27 11:27:09,612:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002158C432480>)
2024-11-27 11:27:09,612:INFO:Checking exceptions
2024-11-27 11:27:09,612:INFO:Preloading libraries
2024-11-27 11:27:10,994:INFO:Checking model {'model': ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8718  0.9322  0.8718  0.8739  0.8718  0.7439  0.7457
1       0.8670  0.9345  0.8670  0.8673  0.8669  0.7336  0.7340
2       0.8724  0.9345  0.8724  0.8730  0.8724  0.7448  0.7454
3       0.8602  0.9246  0.8602  0.8618  0.8601  0.7206  0.7220
4       0.8645  0.9254  0.8645  0.8652  0.8644  0.7287  0.7295
Mean    0.8672  0.9302  0.8672  0.8682  0.8671  0.7343  0.7353
Std     0.0046  0.0044  0.0046  0.0046  0.0046  0.0092  0.0092, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:27:10,994:INFO:Initializing predict_model()
2024-11-27 11:27:10,994:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021587B4E2A0>)
2024-11-27 11:27:10,994:INFO:Checking exceptions
2024-11-27 11:27:10,994:INFO:Preloading libraries
2024-11-27 11:27:11,350:WARNING:Model ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False) is not fitted, running create_model
2024-11-27 11:27:11,350:INFO:Initializing create_model()
2024-11-27 11:27:11,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:27:11,350:INFO:Checking exceptions
2024-11-27 11:27:11,367:INFO:Importing libraries
2024-11-27 11:27:11,367:INFO:Copying training dataset
2024-11-27 11:27:11,458:INFO:Defining folds
2024-11-27 11:27:11,458:INFO:Declaring metric variables
2024-11-27 11:27:11,458:INFO:Importing untrained model
2024-11-27 11:27:11,458:INFO:Declaring custom model
2024-11-27 11:27:11,458:INFO:Extra Trees Classifier Imported successfully
2024-11-27 11:27:11,458:INFO:Cross validation set to False
2024-11-27 11:27:11,458:INFO:Fitting Model
2024-11-27 11:27:17,488:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False)
2024-11-27 11:27:17,490:INFO:create_model() successfully completed......................................
2024-11-27 11:27:17,825:INFO:Initializing predict_model()
2024-11-27 11:27:17,826:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002158C432480>)
2024-11-27 11:27:17,826:INFO:Checking exceptions
2024-11-27 11:27:17,826:INFO:Preloading libraries
2024-11-27 11:27:19,690:INFO:Checking model {'model': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7683, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8384  0.8805  0.8384  0.8611  0.8365  0.6788  0.7001
1       0.8397  0.8714  0.8397  0.8591  0.8368  0.6768  0.6971
2       0.8434  0.8795  0.8434  0.8638  0.8411  0.6865  0.7068
3       0.8344  0.8724  0.8344  0.8601  0.8321  0.6707  0.6949
4       0.8417  0.8773  0.8417  0.8615  0.8391  0.6819  0.7021
Mean    0.8395  0.8762  0.8395  0.8611  0.8371  0.6789  0.7002
Std     0.0031  0.0037  0.0031  0.0016  0.0030  0.0053  0.0041, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:27:19,690:INFO:Initializing predict_model()
2024-11-27 11:27:19,690:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7683, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002158C432480>)
2024-11-27 11:27:19,690:INFO:Checking exceptions
2024-11-27 11:27:19,690:INFO:Preloading libraries
2024-11-27 11:27:19,986:WARNING:Model LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7683, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is not fitted, running create_model
2024-11-27 11:27:19,986:INFO:Initializing create_model()
2024-11-27 11:27:19,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7683, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:27:19,986:INFO:Checking exceptions
2024-11-27 11:27:19,986:INFO:Importing libraries
2024-11-27 11:27:19,986:INFO:Copying training dataset
2024-11-27 11:27:20,054:INFO:Defining folds
2024-11-27 11:27:20,054:INFO:Declaring metric variables
2024-11-27 11:27:20,054:INFO:Importing untrained model
2024-11-27 11:27:20,054:INFO:Declaring custom model
2024-11-27 11:27:20,054:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-27 11:27:20,054:INFO:Cross validation set to False
2024-11-27 11:27:20,054:INFO:Fitting Model
2024-11-27 11:27:20,211:INFO:[LightGBM] [Info] Number of positive: 12051, number of negative: 12052
2024-11-27 11:27:20,233:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.020569 seconds.
2024-11-27 11:27:20,234:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-27 11:27:20,238:INFO:[LightGBM] [Info] Total Bins 7104
2024-11-27 11:27:20,240:INFO:[LightGBM] [Info] Number of data points in the train set: 24103, number of used features: 28
2024-11-27 11:27:20,242:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.499979 -> initscore=-0.000083
2024-11-27 11:27:20,242:INFO:[LightGBM] [Info] Start training from score -0.000083
2024-11-27 11:27:21,314:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7683, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-27 11:27:21,314:INFO:create_model() successfully completed......................................
2024-11-27 11:27:21,671:INFO:Initializing predict_model()
2024-11-27 11:27:21,671:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7683, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021587B4E2A0>)
2024-11-27 11:27:21,671:INFO:Checking exceptions
2024-11-27 11:27:21,671:INFO:Preloading libraries
2024-11-27 11:27:23,390:INFO:Checking model {'model': DummyClassifier(constant=None, random_state=7683, strategy='prior'), 'scores':       Accuracy  AUC  Recall   Prec.      F1  Kappa  MCC
Fold                                                   
0       0.4856  0.5  0.4856  0.2358  0.3174    0.0  0.0
1       0.4852  0.5  0.4852  0.2354  0.3170    0.0  0.0
2       0.4978  0.5  0.4978  0.2478  0.3309    0.0  0.0
3       0.4884  0.5  0.4884  0.2385  0.3205    0.0  0.0
4       0.4909  0.5  0.4909  0.2410  0.3232    0.0  0.0
Mean    0.4896  0.5  0.4896  0.2397  0.3218    0.0  0.0
Std     0.0046  0.0  0.0046  0.0045  0.0051    0.0  0.0, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:27:23,391:INFO:Initializing predict_model()
2024-11-27 11:27:23,393:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=DummyClassifier(constant=None, random_state=7683, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021587B4E2A0>)
2024-11-27 11:27:23,393:INFO:Checking exceptions
2024-11-27 11:27:23,393:INFO:Preloading libraries
2024-11-27 11:27:23,730:WARNING:Model DummyClassifier(constant=None, random_state=7683, strategy='prior') is not fitted, running create_model
2024-11-27 11:27:23,731:INFO:Initializing create_model()
2024-11-27 11:27:23,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=DummyClassifier(constant=None, random_state=7683, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:27:23,731:INFO:Checking exceptions
2024-11-27 11:27:23,736:INFO:Importing libraries
2024-11-27 11:27:23,738:INFO:Copying training dataset
2024-11-27 11:27:23,816:INFO:Defining folds
2024-11-27 11:27:23,817:INFO:Declaring metric variables
2024-11-27 11:27:23,818:INFO:Importing untrained model
2024-11-27 11:27:23,818:INFO:Declaring custom model
2024-11-27 11:27:23,819:INFO:Dummy Classifier Imported successfully
2024-11-27 11:27:23,822:INFO:Cross validation set to False
2024-11-27 11:27:23,822:INFO:Fitting Model
2024-11-27 11:27:23,882:INFO:DummyClassifier(constant=None, random_state=7683, strategy='prior')
2024-11-27 11:27:23,882:INFO:create_model() successfully completed......................................
2024-11-27 11:27:24,226:INFO:Initializing predict_model()
2024-11-27 11:27:24,226:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=DummyClassifier(constant=None, random_state=7683, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002158C432480>)
2024-11-27 11:27:24,231:INFO:Checking exceptions
2024-11-27 11:27:24,231:INFO:Preloading libraries
2024-11-27 11:27:25,412:INFO:Initializing create_model()
2024-11-27 11:27:25,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:27:25,413:INFO:Checking exceptions
2024-11-27 11:27:25,423:INFO:Importing libraries
2024-11-27 11:27:25,424:INFO:Copying training dataset
2024-11-27 11:27:25,511:INFO:Defining folds
2024-11-27 11:27:25,511:INFO:Declaring metric variables
2024-11-27 11:27:25,511:INFO:Importing untrained model
2024-11-27 11:27:25,513:INFO:Declaring custom model
2024-11-27 11:27:25,515:INFO:Extra Trees Classifier Imported successfully
2024-11-27 11:27:25,517:INFO:Cross validation set to False
2024-11-27 11:27:25,517:INFO:Fitting Model
2024-11-27 11:27:31,094:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False)
2024-11-27 11:27:31,095:INFO:create_model() successfully completed......................................
2024-11-27 11:27:31,713:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False)
2024-11-27 11:27:31,713:INFO:automl() successfully completed......................................
2024-11-27 11:27:32,069:INFO:Initializing predict_model()
2024-11-27 11:27:32,069:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159F5284A0>)
2024-11-27 11:27:32,070:INFO:Checking exceptions
2024-11-27 11:27:32,070:INFO:Preloading libraries
2024-11-27 11:27:32,075:INFO:Set up data.
2024-11-27 11:27:32,092:INFO:Set up index.
2024-11-27 11:27:33,473:INFO:Initializing plot_model()
2024-11-27 11:27:33,473:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002159B245010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7683, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-27 11:27:33,473:INFO:Checking exceptions
2024-11-27 11:27:33,640:INFO:Preloading libraries
2024-11-27 11:27:34,056:INFO:Copying training dataset
2024-11-27 11:27:34,056:INFO:Plot type: auc
2024-11-27 11:27:34,676:INFO:Fitting Model
2024-11-27 11:27:34,676:INFO:Scoring test/hold-out set
2024-11-27 11:27:35,949:INFO:Visual Rendered Successfully
2024-11-27 11:27:36,313:INFO:plot_model() successfully completed......................................
2024-11-27 11:30:36,753:INFO:PyCaret ClassificationExperiment
2024-11-27 11:30:36,753:INFO:Logging name: clf-default-name
2024-11-27 11:30:36,758:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-27 11:30:36,765:INFO:version 3.3.2
2024-11-27 11:30:36,765:INFO:Initializing setup()
2024-11-27 11:30:36,766:INFO:self.USI: 418f
2024-11-27 11:30:36,766:INFO:self._variable_keys: {'gpu_param', 'y', 'logging_param', 'gpu_n_jobs_param', 'html_param', 'fold_shuffle_param', 'n_jobs_param', '_available_plots', 'fold_generator', 'idx', 'seed', 'fold_groups_param', 'X', 'USI', 'is_multiclass', 'X_train', 'target_param', 'X_test', 'log_plots_param', 'y_train', 'fix_imbalance', 'pipeline', 'memory', '_ml_usecase', 'data', 'y_test', 'exp_name_log', 'exp_id'}
2024-11-27 11:30:36,766:INFO:Checking environment
2024-11-27 11:30:36,766:INFO:python_version: 3.11.9
2024-11-27 11:30:36,766:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-27 11:30:36,766:INFO:machine: AMD64
2024-11-27 11:30:36,766:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-27 11:30:36,775:INFO:Memory: svmem(total=4293971968, available=630161408, percent=85.3, used=3663810560, free=630161408)
2024-11-27 11:30:36,775:INFO:Physical Core: 2
2024-11-27 11:30:36,776:INFO:Logical Core: 2
2024-11-27 11:30:36,776:INFO:Checking libraries
2024-11-27 11:30:36,776:INFO:System:
2024-11-27 11:30:36,776:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-27 11:30:36,777:INFO:executable: c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Scripts\python.exe
2024-11-27 11:30:36,777:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-27 11:30:36,777:INFO:PyCaret required dependencies:
2024-11-27 11:30:36,777:INFO:                 pip: 24.3.1
2024-11-27 11:30:36,777:INFO:          setuptools: 65.5.0
2024-11-27 11:30:36,779:INFO:             pycaret: 3.3.2
2024-11-27 11:30:36,779:INFO:             IPython: 8.26.0
2024-11-27 11:30:36,779:INFO:          ipywidgets: 8.1.5
2024-11-27 11:30:36,779:INFO:                tqdm: 4.66.5
2024-11-27 11:30:36,779:INFO:               numpy: 1.26.4
2024-11-27 11:30:36,779:INFO:              pandas: 2.1.4
2024-11-27 11:30:36,779:INFO:              jinja2: 3.1.4
2024-11-27 11:30:36,779:INFO:               scipy: 1.11.4
2024-11-27 11:30:36,779:INFO:              joblib: 1.3.2
2024-11-27 11:30:36,779:INFO:             sklearn: 1.4.2
2024-11-27 11:30:36,779:INFO:                pyod: 2.0.2
2024-11-27 11:30:36,779:INFO:            imblearn: 0.12.4
2024-11-27 11:30:36,779:INFO:   category_encoders: 2.6.4
2024-11-27 11:30:36,779:INFO:            lightgbm: 4.5.0
2024-11-27 11:30:36,779:INFO:               numba: 0.60.0
2024-11-27 11:30:36,779:INFO:            requests: 2.32.3
2024-11-27 11:30:36,779:INFO:          matplotlib: 3.7.5
2024-11-27 11:30:36,779:INFO:          scikitplot: 0.3.7
2024-11-27 11:30:36,779:INFO:         yellowbrick: 1.5
2024-11-27 11:30:36,779:INFO:              plotly: 5.24.1
2024-11-27 11:30:36,779:INFO:    plotly-resampler: Not installed
2024-11-27 11:30:36,779:INFO:             kaleido: 0.2.1
2024-11-27 11:30:36,796:INFO:           schemdraw: 0.15
2024-11-27 11:30:36,796:INFO:         statsmodels: 0.14.3
2024-11-27 11:30:36,796:INFO:              sktime: 0.26.0
2024-11-27 11:30:36,796:INFO:               tbats: 1.1.3
2024-11-27 11:30:36,796:INFO:            pmdarima: 2.0.4
2024-11-27 11:30:36,796:INFO:              psutil: 6.0.0
2024-11-27 11:30:36,796:INFO:          markupsafe: 3.0.2
2024-11-27 11:30:36,796:INFO:             pickle5: Not installed
2024-11-27 11:30:36,796:INFO:         cloudpickle: 3.0.0
2024-11-27 11:30:36,796:INFO:         deprecation: 2.1.0
2024-11-27 11:30:36,796:INFO:              xxhash: 3.5.0
2024-11-27 11:30:36,796:INFO:           wurlitzer: Not installed
2024-11-27 11:30:36,796:INFO:PyCaret optional dependencies:
2024-11-27 11:30:36,796:INFO:                shap: 0.46.0
2024-11-27 11:30:36,796:INFO:           interpret: Not installed
2024-11-27 11:30:36,796:INFO:                umap: Not installed
2024-11-27 11:30:36,796:INFO:     ydata_profiling: Not installed
2024-11-27 11:30:36,797:INFO:  explainerdashboard: Not installed
2024-11-27 11:30:36,797:INFO:             autoviz: Not installed
2024-11-27 11:30:36,797:INFO:           fairlearn: Not installed
2024-11-27 11:30:36,797:INFO:          deepchecks: Not installed
2024-11-27 11:30:36,797:INFO:             xgboost: Not installed
2024-11-27 11:30:36,797:INFO:            catboost: Not installed
2024-11-27 11:30:36,797:INFO:              kmodes: Not installed
2024-11-27 11:30:36,797:INFO:             mlxtend: Not installed
2024-11-27 11:30:36,797:INFO:       statsforecast: Not installed
2024-11-27 11:30:36,797:INFO:        tune_sklearn: Not installed
2024-11-27 11:30:36,797:INFO:                 ray: Not installed
2024-11-27 11:30:36,797:INFO:            hyperopt: Not installed
2024-11-27 11:30:36,797:INFO:              optuna: 4.1.0
2024-11-27 11:30:36,797:INFO:               skopt: Not installed
2024-11-27 11:30:36,797:INFO:              mlflow: Not installed
2024-11-27 11:30:36,797:INFO:              gradio: Not installed
2024-11-27 11:30:36,797:INFO:             fastapi: Not installed
2024-11-27 11:30:36,797:INFO:             uvicorn: Not installed
2024-11-27 11:30:36,797:INFO:              m2cgen: Not installed
2024-11-27 11:30:36,797:INFO:           evidently: Not installed
2024-11-27 11:30:36,797:INFO:               fugue: Not installed
2024-11-27 11:30:36,797:INFO:           streamlit: Not installed
2024-11-27 11:30:36,797:INFO:             prophet: Not installed
2024-11-27 11:30:36,797:INFO:None
2024-11-27 11:30:36,797:INFO:Set up data.
2024-11-27 11:30:36,879:INFO:Set up folding strategy.
2024-11-27 11:30:36,879:INFO:Set up train/test split.
2024-11-27 11:30:37,043:INFO:Set up index.
2024-11-27 11:30:37,043:INFO:Assigning column types.
2024-11-27 11:30:37,124:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-27 11:30:37,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 11:30:37,253:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 11:30:37,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,346:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-27 11:30:37,346:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 11:30:37,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,410:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-27 11:30:37,566:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 11:30:37,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-27 11:30:37,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,816:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-27 11:30:37,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:37,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:38,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:38,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:38,191:INFO:Preparing preprocessing pipeline...
2024-11-27 11:30:38,222:INFO:Set up label encoding.
2024-11-27 11:30:38,222:INFO:Set up simple imputation.
2024-11-27 11:30:38,384:INFO:Finished creating preprocessing pipeline.
2024-11-27 11:30:38,384:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SCASTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '2...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-27 11:30:38,384:INFO:Creating final display dataframe.
2024-11-27 11:30:38,878:INFO:Setup _display_container:                     Description             Value
0                    Session id              7221
1                        Target            target
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (34434, 29)
5        Transformed data shape       (34434, 29)
6   Transformed train set shape       (24103, 29)
7    Transformed test set shape       (10331, 29)
8              Numeric features                28
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              418f
2024-11-27 11:30:39,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:39,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:39,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:39,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-27 11:30:39,207:INFO:setup() successfully completed in 2.72s...............
2024-11-27 11:30:39,253:INFO:Initializing compare_models()
2024-11-27 11:30:39,253:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, include=None, exclude=None, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, 'include': None, 'exclude': None, 'fold': KFold(n_splits=5, random_state=42, shuffle=True), 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-27 11:30:39,253:INFO:Checking exceptions
2024-11-27 11:30:39,290:INFO:Preparing display monitor
2024-11-27 11:30:39,394:INFO:Initializing Logistic Regression
2024-11-27 11:30:39,394:INFO:Total runtime is 0.0 minutes
2024-11-27 11:30:39,394:INFO:SubProcess create_model() called ==================================
2024-11-27 11:30:39,394:INFO:Initializing create_model()
2024-11-27 11:30:39,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=lr, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:30:39,394:INFO:Checking exceptions
2024-11-27 11:30:39,394:INFO:Importing libraries
2024-11-27 11:30:39,394:INFO:Copying training dataset
2024-11-27 11:30:39,800:INFO:Defining folds
2024-11-27 11:30:39,800:INFO:Declaring metric variables
2024-11-27 11:30:39,800:INFO:Importing untrained model
2024-11-27 11:30:39,800:INFO:Logistic Regression Imported successfully
2024-11-27 11:30:39,831:INFO:Starting cross validation
2024-11-27 11:30:39,831:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:30:40,392:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:40,449:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:40,505:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:40,536:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:40,563:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:40,579:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:41,238:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:41,372:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:41,440:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:41,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:41,502:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:41,531:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:42,059:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:42,106:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:42,192:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:42,277:INFO:Calculating mean and std
2024-11-27 11:30:42,277:INFO:Creating metrics dataframe
2024-11-27 11:30:42,277:INFO:Uploading results into container
2024-11-27 11:30:42,277:INFO:Uploading model into container now
2024-11-27 11:30:42,277:INFO:_master_model_container: 1
2024-11-27 11:30:42,277:INFO:_display_container: 2
2024-11-27 11:30:42,277:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-27 11:30:42,277:INFO:create_model() successfully completed......................................
2024-11-27 11:30:42,699:INFO:SubProcess create_model() end ==================================
2024-11-27 11:30:42,699:INFO:Creating metrics dataframe
2024-11-27 11:30:42,731:INFO:Initializing K Neighbors Classifier
2024-11-27 11:30:42,731:INFO:Total runtime is 0.05562177101771037 minutes
2024-11-27 11:30:42,731:INFO:SubProcess create_model() called ==================================
2024-11-27 11:30:42,731:INFO:Initializing create_model()
2024-11-27 11:30:42,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=knn, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:30:42,731:INFO:Checking exceptions
2024-11-27 11:30:42,731:INFO:Importing libraries
2024-11-27 11:30:42,746:INFO:Copying training dataset
2024-11-27 11:30:42,839:INFO:Defining folds
2024-11-27 11:30:42,839:INFO:Declaring metric variables
2024-11-27 11:30:42,855:INFO:Importing untrained model
2024-11-27 11:30:42,871:INFO:K Neighbors Classifier Imported successfully
2024-11-27 11:30:42,902:INFO:Starting cross validation
2024-11-27 11:30:42,902:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:30:45,916:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:45,957:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:45,999:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:46,016:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:46,037:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:46,053:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:49,047:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:49,126:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:49,136:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:49,235:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:49,273:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:49,360:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:51,350:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:51,369:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:51,396:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:51,456:INFO:Calculating mean and std
2024-11-27 11:30:51,456:INFO:Creating metrics dataframe
2024-11-27 11:30:51,456:INFO:Uploading results into container
2024-11-27 11:30:51,456:INFO:Uploading model into container now
2024-11-27 11:30:51,456:INFO:_master_model_container: 2
2024-11-27 11:30:51,456:INFO:_display_container: 2
2024-11-27 11:30:51,456:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-27 11:30:51,456:INFO:create_model() successfully completed......................................
2024-11-27 11:30:51,818:INFO:SubProcess create_model() end ==================================
2024-11-27 11:30:51,818:INFO:Creating metrics dataframe
2024-11-27 11:30:51,830:INFO:Initializing Naive Bayes
2024-11-27 11:30:51,830:INFO:Total runtime is 0.20726686318715415 minutes
2024-11-27 11:30:51,861:INFO:SubProcess create_model() called ==================================
2024-11-27 11:30:51,861:INFO:Initializing create_model()
2024-11-27 11:30:51,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=nb, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:30:51,861:INFO:Checking exceptions
2024-11-27 11:30:51,861:INFO:Importing libraries
2024-11-27 11:30:51,861:INFO:Copying training dataset
2024-11-27 11:30:51,923:INFO:Defining folds
2024-11-27 11:30:51,923:INFO:Declaring metric variables
2024-11-27 11:30:51,940:INFO:Importing untrained model
2024-11-27 11:30:51,954:INFO:Naive Bayes Imported successfully
2024-11-27 11:30:51,954:INFO:Starting cross validation
2024-11-27 11:30:51,954:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:30:52,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,252:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,262:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,384:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,718:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,735:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,780:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,780:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:52,870:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:53,188:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:53,246:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:53,313:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:53,442:INFO:Calculating mean and std
2024-11-27 11:30:53,442:INFO:Creating metrics dataframe
2024-11-27 11:30:53,455:INFO:Uploading results into container
2024-11-27 11:30:53,455:INFO:Uploading model into container now
2024-11-27 11:30:53,455:INFO:_master_model_container: 3
2024-11-27 11:30:53,455:INFO:_display_container: 2
2024-11-27 11:30:53,455:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-27 11:30:53,455:INFO:create_model() successfully completed......................................
2024-11-27 11:30:53,783:INFO:SubProcess create_model() end ==================================
2024-11-27 11:30:53,783:INFO:Creating metrics dataframe
2024-11-27 11:30:53,797:INFO:Initializing Decision Tree Classifier
2024-11-27 11:30:53,797:INFO:Total runtime is 0.24006442626317342 minutes
2024-11-27 11:30:53,816:INFO:SubProcess create_model() called ==================================
2024-11-27 11:30:53,816:INFO:Initializing create_model()
2024-11-27 11:30:53,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=dt, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:30:53,816:INFO:Checking exceptions
2024-11-27 11:30:53,816:INFO:Importing libraries
2024-11-27 11:30:53,816:INFO:Copying training dataset
2024-11-27 11:30:53,859:INFO:Defining folds
2024-11-27 11:30:53,859:INFO:Declaring metric variables
2024-11-27 11:30:53,880:INFO:Importing untrained model
2024-11-27 11:30:53,898:INFO:Decision Tree Classifier Imported successfully
2024-11-27 11:30:53,945:INFO:Starting cross validation
2024-11-27 11:30:53,954:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:30:55,422:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:55,502:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:55,529:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:55,574:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:55,587:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:55,738:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:57,588:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:57,694:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:57,776:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:57,807:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:57,873:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:57,943:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:59,054:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:59,116:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:59,178:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:30:59,269:INFO:Calculating mean and std
2024-11-27 11:30:59,269:INFO:Creating metrics dataframe
2024-11-27 11:30:59,269:INFO:Uploading results into container
2024-11-27 11:30:59,269:INFO:Uploading model into container now
2024-11-27 11:30:59,269:INFO:_master_model_container: 4
2024-11-27 11:30:59,269:INFO:_display_container: 2
2024-11-27 11:30:59,269:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7221, splitter='best')
2024-11-27 11:30:59,286:INFO:create_model() successfully completed......................................
2024-11-27 11:30:59,642:INFO:SubProcess create_model() end ==================================
2024-11-27 11:30:59,642:INFO:Creating metrics dataframe
2024-11-27 11:30:59,677:INFO:Initializing SVM - Linear Kernel
2024-11-27 11:30:59,678:INFO:Total runtime is 0.33806962172190347 minutes
2024-11-27 11:30:59,690:INFO:SubProcess create_model() called ==================================
2024-11-27 11:30:59,690:INFO:Initializing create_model()
2024-11-27 11:30:59,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=svm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:30:59,690:INFO:Checking exceptions
2024-11-27 11:30:59,690:INFO:Importing libraries
2024-11-27 11:30:59,690:INFO:Copying training dataset
2024-11-27 11:30:59,767:INFO:Defining folds
2024-11-27 11:30:59,767:INFO:Declaring metric variables
2024-11-27 11:30:59,767:INFO:Importing untrained model
2024-11-27 11:30:59,787:INFO:SVM - Linear Kernel Imported successfully
2024-11-27 11:30:59,798:INFO:Starting cross validation
2024-11-27 11:30:59,819:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:31:00,519:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:00,574:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:00,667:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:00,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:00,855:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:01,002:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:01,898:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:02,233:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:02,316:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:02,349:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:02,367:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:02,410:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:02,896:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:03,087:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:03,163:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:03,270:INFO:Calculating mean and std
2024-11-27 11:31:03,270:INFO:Creating metrics dataframe
2024-11-27 11:31:03,270:INFO:Uploading results into container
2024-11-27 11:31:03,270:INFO:Uploading model into container now
2024-11-27 11:31:03,282:INFO:_master_model_container: 5
2024-11-27 11:31:03,282:INFO:_display_container: 2
2024-11-27 11:31:03,282:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7221, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-27 11:31:03,282:INFO:create_model() successfully completed......................................
2024-11-27 11:31:03,644:INFO:SubProcess create_model() end ==================================
2024-11-27 11:31:03,644:INFO:Creating metrics dataframe
2024-11-27 11:31:03,658:INFO:Initializing Ridge Classifier
2024-11-27 11:31:03,658:INFO:Total runtime is 0.404414157072703 minutes
2024-11-27 11:31:03,677:INFO:SubProcess create_model() called ==================================
2024-11-27 11:31:03,677:INFO:Initializing create_model()
2024-11-27 11:31:03,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ridge, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:31:03,677:INFO:Checking exceptions
2024-11-27 11:31:03,677:INFO:Importing libraries
2024-11-27 11:31:03,677:INFO:Copying training dataset
2024-11-27 11:31:03,799:INFO:Defining folds
2024-11-27 11:31:03,799:INFO:Declaring metric variables
2024-11-27 11:31:03,822:INFO:Importing untrained model
2024-11-27 11:31:03,850:INFO:Ridge Classifier Imported successfully
2024-11-27 11:31:03,860:INFO:Starting cross validation
2024-11-27 11:31:03,860:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:31:04,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,094:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,150:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,230:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,244:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,688:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,727:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,760:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,771:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,822:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:04,839:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:05,071:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:05,168:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:05,225:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:05,330:INFO:Calculating mean and std
2024-11-27 11:31:05,337:INFO:Creating metrics dataframe
2024-11-27 11:31:05,345:INFO:Uploading results into container
2024-11-27 11:31:05,345:INFO:Uploading model into container now
2024-11-27 11:31:05,345:INFO:_master_model_container: 6
2024-11-27 11:31:05,345:INFO:_display_container: 2
2024-11-27 11:31:05,345:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7221, solver='auto',
                tol=0.0001)
2024-11-27 11:31:05,345:INFO:create_model() successfully completed......................................
2024-11-27 11:31:05,689:INFO:SubProcess create_model() end ==================================
2024-11-27 11:31:05,689:INFO:Creating metrics dataframe
2024-11-27 11:31:05,756:INFO:Initializing Random Forest Classifier
2024-11-27 11:31:05,756:INFO:Total runtime is 0.43936609427134193 minutes
2024-11-27 11:31:05,767:INFO:SubProcess create_model() called ==================================
2024-11-27 11:31:05,767:INFO:Initializing create_model()
2024-11-27 11:31:05,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=rf, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:31:05,767:INFO:Checking exceptions
2024-11-27 11:31:05,767:INFO:Importing libraries
2024-11-27 11:31:05,767:INFO:Copying training dataset
2024-11-27 11:31:06,136:INFO:Defining folds
2024-11-27 11:31:06,136:INFO:Declaring metric variables
2024-11-27 11:31:06,142:INFO:Importing untrained model
2024-11-27 11:31:06,160:INFO:Random Forest Classifier Imported successfully
2024-11-27 11:31:06,175:INFO:Starting cross validation
2024-11-27 11:31:06,175:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:31:28,161:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:28,281:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:28,325:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:28,337:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:28,367:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:28,410:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:49,243:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:49,335:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:49,546:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:49,654:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:49,752:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:31:49,865:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:01,357:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:01,431:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:01,511:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:01,605:INFO:Calculating mean and std
2024-11-27 11:32:01,610:INFO:Creating metrics dataframe
2024-11-27 11:32:01,627:INFO:Uploading results into container
2024-11-27 11:32:01,627:INFO:Uploading model into container now
2024-11-27 11:32:01,627:INFO:_master_model_container: 7
2024-11-27 11:32:01,627:INFO:_display_container: 2
2024-11-27 11:32:01,627:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7221, verbose=0,
                       warm_start=False)
2024-11-27 11:32:01,627:INFO:create_model() successfully completed......................................
2024-11-27 11:32:02,066:INFO:SubProcess create_model() end ==================================
2024-11-27 11:32:02,066:INFO:Creating metrics dataframe
2024-11-27 11:32:02,096:INFO:Initializing Quadratic Discriminant Analysis
2024-11-27 11:32:02,096:INFO:Total runtime is 1.3783747315406798 minutes
2024-11-27 11:32:02,115:INFO:SubProcess create_model() called ==================================
2024-11-27 11:32:02,115:INFO:Initializing create_model()
2024-11-27 11:32:02,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=qda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:32:02,115:INFO:Checking exceptions
2024-11-27 11:32:02,115:INFO:Importing libraries
2024-11-27 11:32:02,115:INFO:Copying training dataset
2024-11-27 11:32:02,232:INFO:Defining folds
2024-11-27 11:32:02,233:INFO:Declaring metric variables
2024-11-27 11:32:02,253:INFO:Importing untrained model
2024-11-27 11:32:02,253:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-27 11:32:02,269:INFO:Starting cross validation
2024-11-27 11:32:02,269:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:32:02,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:02,553:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:02,602:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:02,615:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:02,662:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:02,675:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,057:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,074:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,159:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,159:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,221:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,668:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,752:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,800:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:03,917:INFO:Calculating mean and std
2024-11-27 11:32:03,926:INFO:Creating metrics dataframe
2024-11-27 11:32:03,937:INFO:Uploading results into container
2024-11-27 11:32:03,942:INFO:Uploading model into container now
2024-11-27 11:32:03,942:INFO:_master_model_container: 8
2024-11-27 11:32:03,942:INFO:_display_container: 2
2024-11-27 11:32:03,942:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-27 11:32:03,942:INFO:create_model() successfully completed......................................
2024-11-27 11:32:04,292:INFO:SubProcess create_model() end ==================================
2024-11-27 11:32:04,293:INFO:Creating metrics dataframe
2024-11-27 11:32:04,308:INFO:Initializing Ada Boost Classifier
2024-11-27 11:32:04,308:INFO:Total runtime is 1.4152385671933492 minutes
2024-11-27 11:32:04,325:INFO:SubProcess create_model() called ==================================
2024-11-27 11:32:04,325:INFO:Initializing create_model()
2024-11-27 11:32:04,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ada, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:32:04,325:INFO:Checking exceptions
2024-11-27 11:32:04,325:INFO:Importing libraries
2024-11-27 11:32:04,325:INFO:Copying training dataset
2024-11-27 11:32:04,434:INFO:Defining folds
2024-11-27 11:32:04,434:INFO:Declaring metric variables
2024-11-27 11:32:04,448:INFO:Importing untrained model
2024-11-27 11:32:04,448:INFO:Ada Boost Classifier Imported successfully
2024-11-27 11:32:04,486:INFO:Starting cross validation
2024-11-27 11:32:04,486:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:32:04,618:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:32:04,641:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:32:10,056:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:10,090:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:10,109:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:10,167:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:10,205:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:10,285:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:10,453:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:32:10,487:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:32:15,523:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:15,637:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:15,746:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:15,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:15,908:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:15,956:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-27 11:32:16,001:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:20,859:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:20,947:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:21,033:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:21,118:INFO:Calculating mean and std
2024-11-27 11:32:21,118:INFO:Creating metrics dataframe
2024-11-27 11:32:21,118:INFO:Uploading results into container
2024-11-27 11:32:21,118:INFO:Uploading model into container now
2024-11-27 11:32:21,118:INFO:_master_model_container: 9
2024-11-27 11:32:21,118:INFO:_display_container: 2
2024-11-27 11:32:21,118:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7221)
2024-11-27 11:32:21,118:INFO:create_model() successfully completed......................................
2024-11-27 11:32:21,494:INFO:SubProcess create_model() end ==================================
2024-11-27 11:32:21,494:INFO:Creating metrics dataframe
2024-11-27 11:32:21,543:INFO:Initializing Gradient Boosting Classifier
2024-11-27 11:32:21,543:INFO:Total runtime is 1.702496806780497 minutes
2024-11-27 11:32:21,557:INFO:SubProcess create_model() called ==================================
2024-11-27 11:32:21,557:INFO:Initializing create_model()
2024-11-27 11:32:21,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=gbc, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:32:21,557:INFO:Checking exceptions
2024-11-27 11:32:21,557:INFO:Importing libraries
2024-11-27 11:32:21,557:INFO:Copying training dataset
2024-11-27 11:32:21,633:INFO:Defining folds
2024-11-27 11:32:21,634:INFO:Declaring metric variables
2024-11-27 11:32:21,650:INFO:Importing untrained model
2024-11-27 11:32:21,684:INFO:Gradient Boosting Classifier Imported successfully
2024-11-27 11:32:21,697:INFO:Starting cross validation
2024-11-27 11:32:21,697:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:32:46,418:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:46,471:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:46,480:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:46,518:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:46,548:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:32:46,617:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:11,122:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:11,180:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:11,180:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:11,219:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:11,236:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:11,286:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:27,815:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:27,853:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:27,928:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:28,028:INFO:Calculating mean and std
2024-11-27 11:33:28,028:INFO:Creating metrics dataframe
2024-11-27 11:33:28,028:INFO:Uploading results into container
2024-11-27 11:33:28,028:INFO:Uploading model into container now
2024-11-27 11:33:28,028:INFO:_master_model_container: 10
2024-11-27 11:33:28,028:INFO:_display_container: 2
2024-11-27 11:33:28,028:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7221, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-27 11:33:28,028:INFO:create_model() successfully completed......................................
2024-11-27 11:33:28,345:INFO:SubProcess create_model() end ==================================
2024-11-27 11:33:28,345:INFO:Creating metrics dataframe
2024-11-27 11:33:28,390:INFO:Initializing Linear Discriminant Analysis
2024-11-27 11:33:28,393:INFO:Total runtime is 2.816654606660207 minutes
2024-11-27 11:33:28,403:INFO:SubProcess create_model() called ==================================
2024-11-27 11:33:28,403:INFO:Initializing create_model()
2024-11-27 11:33:28,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=lda, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:33:28,403:INFO:Checking exceptions
2024-11-27 11:33:28,403:INFO:Importing libraries
2024-11-27 11:33:28,403:INFO:Copying training dataset
2024-11-27 11:33:28,450:INFO:Defining folds
2024-11-27 11:33:28,467:INFO:Declaring metric variables
2024-11-27 11:33:28,467:INFO:Importing untrained model
2024-11-27 11:33:28,485:INFO:Linear Discriminant Analysis Imported successfully
2024-11-27 11:33:28,512:INFO:Starting cross validation
2024-11-27 11:33:28,512:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:33:28,789:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:28,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:28,856:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:28,856:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:28,902:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:28,920:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,212:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,244:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,260:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,288:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,319:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,343:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,568:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,615:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,658:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:29,714:INFO:Calculating mean and std
2024-11-27 11:33:29,714:INFO:Creating metrics dataframe
2024-11-27 11:33:29,714:INFO:Uploading results into container
2024-11-27 11:33:29,714:INFO:Uploading model into container now
2024-11-27 11:33:29,714:INFO:_master_model_container: 11
2024-11-27 11:33:29,714:INFO:_display_container: 2
2024-11-27 11:33:29,714:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-27 11:33:29,714:INFO:create_model() successfully completed......................................
2024-11-27 11:33:30,002:INFO:SubProcess create_model() end ==================================
2024-11-27 11:33:30,002:INFO:Creating metrics dataframe
2024-11-27 11:33:30,019:INFO:Initializing Extra Trees Classifier
2024-11-27 11:33:30,022:INFO:Total runtime is 2.843791655699412 minutes
2024-11-27 11:33:30,026:INFO:SubProcess create_model() called ==================================
2024-11-27 11:33:30,026:INFO:Initializing create_model()
2024-11-27 11:33:30,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=et, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:33:30,026:INFO:Checking exceptions
2024-11-27 11:33:30,026:INFO:Importing libraries
2024-11-27 11:33:30,026:INFO:Copying training dataset
2024-11-27 11:33:30,076:INFO:Defining folds
2024-11-27 11:33:30,076:INFO:Declaring metric variables
2024-11-27 11:33:30,076:INFO:Importing untrained model
2024-11-27 11:33:30,090:INFO:Extra Trees Classifier Imported successfully
2024-11-27 11:33:30,105:INFO:Starting cross validation
2024-11-27 11:33:30,105:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:33:38,732:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:38,857:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:38,966:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:38,985:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:39,089:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:39,208:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:47,307:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:47,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:47,561:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:47,687:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:47,723:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:47,787:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:51,338:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:51,421:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:51,459:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:51,561:INFO:Calculating mean and std
2024-11-27 11:33:51,561:INFO:Creating metrics dataframe
2024-11-27 11:33:51,574:INFO:Uploading results into container
2024-11-27 11:33:51,574:INFO:Uploading model into container now
2024-11-27 11:33:51,574:INFO:_master_model_container: 12
2024-11-27 11:33:51,574:INFO:_display_container: 2
2024-11-27 11:33:51,574:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False)
2024-11-27 11:33:51,574:INFO:create_model() successfully completed......................................
2024-11-27 11:33:51,949:INFO:SubProcess create_model() end ==================================
2024-11-27 11:33:51,950:INFO:Creating metrics dataframe
2024-11-27 11:33:51,980:INFO:Initializing Light Gradient Boosting Machine
2024-11-27 11:33:51,980:INFO:Total runtime is 3.2097782373428343 minutes
2024-11-27 11:33:51,980:INFO:SubProcess create_model() called ==================================
2024-11-27 11:33:51,997:INFO:Initializing create_model()
2024-11-27 11:33:51,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:33:51,997:INFO:Checking exceptions
2024-11-27 11:33:51,997:INFO:Importing libraries
2024-11-27 11:33:51,997:INFO:Copying training dataset
2024-11-27 11:33:52,059:INFO:Defining folds
2024-11-27 11:33:52,059:INFO:Declaring metric variables
2024-11-27 11:33:52,075:INFO:Importing untrained model
2024-11-27 11:33:52,090:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-27 11:33:52,121:INFO:Starting cross validation
2024-11-27 11:33:52,121:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:33:54,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:54,424:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:54,492:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:54,501:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:54,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:54,538:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:56,500:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:56,603:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:56,664:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:56,754:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:56,865:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:56,923:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:57,941:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:57,981:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:58,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:58,097:INFO:Calculating mean and std
2024-11-27 11:33:58,097:INFO:Creating metrics dataframe
2024-11-27 11:33:58,123:INFO:Uploading results into container
2024-11-27 11:33:58,124:INFO:Uploading model into container now
2024-11-27 11:33:58,125:INFO:_master_model_container: 13
2024-11-27 11:33:58,125:INFO:_display_container: 2
2024-11-27 11:33:58,125:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7221, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-27 11:33:58,125:INFO:create_model() successfully completed......................................
2024-11-27 11:33:58,441:INFO:SubProcess create_model() end ==================================
2024-11-27 11:33:58,441:INFO:Creating metrics dataframe
2024-11-27 11:33:58,472:INFO:Initializing Dummy Classifier
2024-11-27 11:33:58,472:INFO:Total runtime is 3.3179741660753885 minutes
2024-11-27 11:33:58,476:INFO:SubProcess create_model() called ==================================
2024-11-27 11:33:58,476:INFO:Initializing create_model()
2024-11-27 11:33:58,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=dummy, fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215A1B81C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:33:58,476:INFO:Checking exceptions
2024-11-27 11:33:58,476:INFO:Importing libraries
2024-11-27 11:33:58,476:INFO:Copying training dataset
2024-11-27 11:33:58,536:INFO:Defining folds
2024-11-27 11:33:58,536:INFO:Declaring metric variables
2024-11-27 11:33:58,552:INFO:Importing untrained model
2024-11-27 11:33:58,552:INFO:Dummy Classifier Imported successfully
2024-11-27 11:33:58,567:INFO:Starting cross validation
2024-11-27 11:33:58,567:INFO:Cross validating with KFold(n_splits=5, random_state=42, shuffle=True), n_jobs=-1
2024-11-27 11:33:58,811:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:58,893:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:58,930:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,001:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,004:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:33:59,032:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,045:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:33:59,065:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,292:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,315:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,374:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,407:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,432:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:33:59,441:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:33:59,455:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,476:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,724:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,755:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,793:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-27 11:33:59,817:WARNING:c:\Users\SCastells\Desktop\TUIA\Aprendizaje Automático\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-27 11:33:59,922:INFO:Calculating mean and std
2024-11-27 11:33:59,922:INFO:Creating metrics dataframe
2024-11-27 11:33:59,922:INFO:Uploading results into container
2024-11-27 11:33:59,922:INFO:Uploading model into container now
2024-11-27 11:33:59,937:INFO:_master_model_container: 14
2024-11-27 11:33:59,937:INFO:_display_container: 2
2024-11-27 11:33:59,937:INFO:DummyClassifier(constant=None, random_state=7221, strategy='prior')
2024-11-27 11:33:59,937:INFO:create_model() successfully completed......................................
2024-11-27 11:34:00,236:INFO:SubProcess create_model() end ==================================
2024-11-27 11:34:00,236:INFO:Creating metrics dataframe
2024-11-27 11:34:00,326:INFO:Initializing create_model()
2024-11-27 11:34:00,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=42, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:00,326:INFO:Checking exceptions
2024-11-27 11:34:00,326:INFO:Importing libraries
2024-11-27 11:34:00,326:INFO:Copying training dataset
2024-11-27 11:34:00,396:INFO:Defining folds
2024-11-27 11:34:00,396:INFO:Declaring metric variables
2024-11-27 11:34:00,396:INFO:Importing untrained model
2024-11-27 11:34:00,396:INFO:Declaring custom model
2024-11-27 11:34:00,405:INFO:Extra Trees Classifier Imported successfully
2024-11-27 11:34:00,405:INFO:Cross validation set to False
2024-11-27 11:34:00,405:INFO:Fitting Model
2024-11-27 11:34:04,886:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False)
2024-11-27 11:34:04,887:INFO:create_model() successfully completed......................................
2024-11-27 11:34:05,284:INFO:_master_model_container: 14
2024-11-27 11:34:05,285:INFO:_display_container: 2
2024-11-27 11:34:05,286:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False)
2024-11-27 11:34:05,287:INFO:compare_models() successfully completed......................................
2024-11-27 11:34:05,306:INFO:Initializing automl()
2024-11-27 11:34:05,306:INFO:automl(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, optimize=F1, use_holdout=True, turbo=True, return_train_score=False)
2024-11-27 11:34:05,306:INFO:Model Selection Basis : Holdout set
2024-11-27 11:34:05,306:INFO:Checking model {'model': LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5787  0.6078  0.5787  0.5785  0.5786  0.1565  0.1565
1       0.5779  0.6053  0.5779  0.5798  0.5771  0.1573  0.1583
2       0.5808  0.6035  0.5808  0.5812  0.5801  0.1614  0.1619
3       0.5714  0.5951  0.5714  0.5725  0.5698  0.1429  0.1439
4       0.5803  0.6033  0.5803  0.5817  0.5790  0.1612  0.1623
Mean    0.5778  0.6030  0.5778  0.5787  0.5769  0.1559  0.1566
Std     0.0034  0.0043  0.0034  0.0033  0.0037  0.0068  0.0067, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:05,306:INFO:Initializing predict_model()
2024-11-27 11:34:05,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAAC00>)
2024-11-27 11:34:05,306:INFO:Checking exceptions
2024-11-27 11:34:05,306:INFO:Preloading libraries
2024-11-27 11:34:05,642:WARNING:Model LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is not fitted, running create_model
2024-11-27 11:34:05,642:INFO:Initializing create_model()
2024-11-27 11:34:05,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:05,642:INFO:Checking exceptions
2024-11-27 11:34:05,652:INFO:Importing libraries
2024-11-27 11:34:05,652:INFO:Copying training dataset
2024-11-27 11:34:05,734:INFO:Defining folds
2024-11-27 11:34:05,734:INFO:Declaring metric variables
2024-11-27 11:34:05,734:INFO:Importing untrained model
2024-11-27 11:34:05,734:INFO:Declaring custom model
2024-11-27 11:34:05,734:INFO:Logistic Regression Imported successfully
2024-11-27 11:34:05,734:INFO:Cross validation set to False
2024-11-27 11:34:05,734:INFO:Fitting Model
2024-11-27 11:34:06,106:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-27 11:34:06,106:INFO:create_model() successfully completed......................................
2024-11-27 11:34:06,447:INFO:Initializing predict_model()
2024-11-27 11:34:06,447:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAB240>)
2024-11-27 11:34:06,447:INFO:Checking exceptions
2024-11-27 11:34:06,447:INFO:Preloading libraries
2024-11-27 11:34:07,593:INFO:Checking model {'model': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.6870  0.7803  0.6870  0.7272  0.6752  0.3799  0.4153
1       0.6884  0.7694  0.6884  0.7168  0.6759  0.3720  0.4015
2       0.6704  0.7609  0.6704  0.7037  0.6567  0.3415  0.3730
3       0.6691  0.7566  0.6691  0.7030  0.6545  0.3378  0.3704
4       0.6902  0.7777  0.6902  0.7162  0.6800  0.3790  0.4049
Mean    0.6810  0.7690  0.6810  0.7134  0.6685  0.3621  0.3930
Std     0.0093  0.0092  0.0093  0.0091  0.0107  0.0185  0.0180, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:07,593:INFO:Initializing predict_model()
2024-11-27 11:34:07,593:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A16F8180>)
2024-11-27 11:34:07,593:INFO:Checking exceptions
2024-11-27 11:34:07,593:INFO:Preloading libraries
2024-11-27 11:34:07,906:WARNING:Model KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') is not fitted, running create_model
2024-11-27 11:34:07,906:INFO:Initializing create_model()
2024-11-27 11:34:07,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:07,906:INFO:Checking exceptions
2024-11-27 11:34:07,912:INFO:Importing libraries
2024-11-27 11:34:07,912:INFO:Copying training dataset
2024-11-27 11:34:07,970:INFO:Defining folds
2024-11-27 11:34:07,970:INFO:Declaring metric variables
2024-11-27 11:34:07,971:INFO:Importing untrained model
2024-11-27 11:34:07,971:INFO:Declaring custom model
2024-11-27 11:34:07,971:INFO:K Neighbors Classifier Imported successfully
2024-11-27 11:34:07,972:INFO:Cross validation set to False
2024-11-27 11:34:07,972:INFO:Fitting Model
2024-11-27 11:34:07,995:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-27 11:34:07,995:INFO:create_model() successfully completed......................................
2024-11-27 11:34:08,350:INFO:Initializing predict_model()
2024-11-27 11:34:08,350:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:34:08,350:INFO:Checking exceptions
2024-11-27 11:34:08,350:INFO:Preloading libraries
2024-11-27 11:34:12,261:INFO:Checking model {'model': GaussianNB(priors=None, var_smoothing=1e-09), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5746  0.5960  0.5746  0.5745  0.5745  0.1484  0.1484
1       0.5710  0.5923  0.5710  0.5717  0.5709  0.1427  0.1429
2       0.5727  0.5901  0.5727  0.5728  0.5725  0.1453  0.1454
3       0.5745  0.5936  0.5745  0.5758  0.5728  0.1491  0.1503
4       0.5579  0.5897  0.5579  0.5584  0.5574  0.1161  0.1164
Mean    0.5701  0.5923  0.5701  0.5706  0.5696  0.1403  0.1407
Std     0.0063  0.0023  0.0063  0.0063  0.0062  0.0123  0.0124, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:12,261:INFO:Initializing predict_model()
2024-11-27 11:34:12,261:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A16F8EA0>)
2024-11-27 11:34:12,261:INFO:Checking exceptions
2024-11-27 11:34:12,261:INFO:Preloading libraries
2024-11-27 11:34:12,464:WARNING:Model GaussianNB(priors=None, var_smoothing=1e-09) is not fitted, running create_model
2024-11-27 11:34:12,464:INFO:Initializing create_model()
2024-11-27 11:34:12,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:12,464:INFO:Checking exceptions
2024-11-27 11:34:12,464:INFO:Importing libraries
2024-11-27 11:34:12,464:INFO:Copying training dataset
2024-11-27 11:34:12,544:INFO:Defining folds
2024-11-27 11:34:12,544:INFO:Declaring metric variables
2024-11-27 11:34:12,544:INFO:Importing untrained model
2024-11-27 11:34:12,544:INFO:Declaring custom model
2024-11-27 11:34:12,544:INFO:Naive Bayes Imported successfully
2024-11-27 11:34:12,544:INFO:Cross validation set to False
2024-11-27 11:34:12,544:INFO:Fitting Model
2024-11-27 11:34:12,603:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-27 11:34:12,603:INFO:create_model() successfully completed......................................
2024-11-27 11:34:12,884:INFO:Initializing predict_model()
2024-11-27 11:34:12,884:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:34:12,884:INFO:Checking exceptions
2024-11-27 11:34:12,884:INFO:Preloading libraries
2024-11-27 11:34:13,926:INFO:Checking model {'model': DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7221, splitter='best'), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.7306  0.7310  0.7306  0.7315  0.7306  0.4614  0.4620
1       0.7355  0.7355  0.7355  0.7356  0.7355  0.4709  0.4709
2       0.7312  0.7312  0.7312  0.7316  0.7311  0.4624  0.4628
3       0.7413  0.7413  0.7413  0.7414  0.7412  0.4826  0.4827
4       0.7293  0.7292  0.7293  0.7293  0.7292  0.4584  0.4585
Mean    0.7336  0.7336  0.7336  0.7339  0.7335  0.4671  0.4674
Std     0.0044  0.0043  0.0044  0.0043  0.0044  0.0087  0.0087, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:13,928:INFO:Initializing predict_model()
2024-11-27 11:34:13,928:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7221, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A16F8720>)
2024-11-27 11:34:13,929:INFO:Checking exceptions
2024-11-27 11:34:13,929:INFO:Preloading libraries
2024-11-27 11:34:14,166:WARNING:Model DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7221, splitter='best') is not fitted, running create_model
2024-11-27 11:34:14,166:INFO:Initializing create_model()
2024-11-27 11:34:14,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7221, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:14,166:INFO:Checking exceptions
2024-11-27 11:34:14,166:INFO:Importing libraries
2024-11-27 11:34:14,166:INFO:Copying training dataset
2024-11-27 11:34:14,228:INFO:Defining folds
2024-11-27 11:34:14,228:INFO:Declaring metric variables
2024-11-27 11:34:14,228:INFO:Importing untrained model
2024-11-27 11:34:14,228:INFO:Declaring custom model
2024-11-27 11:34:14,228:INFO:Decision Tree Classifier Imported successfully
2024-11-27 11:34:14,228:INFO:Cross validation set to False
2024-11-27 11:34:14,228:INFO:Fitting Model
2024-11-27 11:34:15,706:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7221, splitter='best')
2024-11-27 11:34:15,706:INFO:create_model() successfully completed......................................
2024-11-27 11:34:16,056:INFO:Initializing predict_model()
2024-11-27 11:34:16,056:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7221, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:34:16,056:INFO:Checking exceptions
2024-11-27 11:34:16,056:INFO:Preloading libraries
2024-11-27 11:34:17,165:INFO:Checking model {'model': SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7221, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5609  0.5903  0.5609  0.5614  0.5609  0.1221  0.1222
1       0.5198  0.5162  0.5198  0.5301  0.4963  0.0478  0.0535
2       0.5443  0.5502  0.5443  0.5479  0.5344  0.0879  0.0918
3       0.5699  0.5943  0.5699  0.5775  0.5595  0.1402  0.1474
4       0.5390  0.5622  0.5390  0.5391  0.5377  0.0774  0.0777
Mean    0.5468  0.5627  0.5468  0.5512  0.5377  0.0950  0.0985
Std     0.0175  0.0286  0.0175  0.0167  0.0234  0.0328  0.0330, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:17,165:INFO:Initializing predict_model()
2024-11-27 11:34:17,165:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7221, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A16F8A40>)
2024-11-27 11:34:17,165:INFO:Checking exceptions
2024-11-27 11:34:17,165:INFO:Preloading libraries
2024-11-27 11:34:17,421:WARNING:Model SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7221, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) is not fitted, running create_model
2024-11-27 11:34:17,421:INFO:Initializing create_model()
2024-11-27 11:34:17,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7221, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:17,421:INFO:Checking exceptions
2024-11-27 11:34:17,421:INFO:Importing libraries
2024-11-27 11:34:17,421:INFO:Copying training dataset
2024-11-27 11:34:17,498:INFO:Defining folds
2024-11-27 11:34:17,498:INFO:Declaring metric variables
2024-11-27 11:34:17,498:INFO:Importing untrained model
2024-11-27 11:34:17,498:INFO:Declaring custom model
2024-11-27 11:34:17,498:INFO:SVM - Linear Kernel Imported successfully
2024-11-27 11:34:17,498:INFO:Cross validation set to False
2024-11-27 11:34:17,498:INFO:Fitting Model
2024-11-27 11:34:17,997:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7221, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-27 11:34:17,997:INFO:create_model() successfully completed......................................
2024-11-27 11:34:18,296:INFO:Initializing predict_model()
2024-11-27 11:34:18,296:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7221, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:34:18,296:INFO:Checking exceptions
2024-11-27 11:34:18,296:INFO:Preloading libraries
2024-11-27 11:34:19,306:INFO:Checking model {'model': RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7221, solver='auto',
                tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5791  0.6077  0.5791  0.5790  0.5790  0.1573  0.1574
1       0.5775  0.6052  0.5775  0.5794  0.5766  0.1565  0.1575
2       0.5816  0.6037  0.5816  0.5820  0.5809  0.1631  0.1636
3       0.5710  0.5952  0.5710  0.5721  0.5693  0.1420  0.1432
4       0.5820  0.6032  0.5820  0.5835  0.5806  0.1645  0.1657
Mean    0.5782  0.6030  0.5782  0.5792  0.5773  0.1567  0.1575
Std     0.0040  0.0042  0.0040  0.0039  0.0043  0.0080  0.0079, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:19,306:INFO:Initializing predict_model()
2024-11-27 11:34:19,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7221, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A16F8180>)
2024-11-27 11:34:19,306:INFO:Checking exceptions
2024-11-27 11:34:19,306:INFO:Preloading libraries
2024-11-27 11:34:19,493:WARNING:Model RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7221, solver='auto',
                tol=0.0001) is not fitted, running create_model
2024-11-27 11:34:19,493:INFO:Initializing create_model()
2024-11-27 11:34:19,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7221, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:19,493:INFO:Checking exceptions
2024-11-27 11:34:19,493:INFO:Importing libraries
2024-11-27 11:34:19,493:INFO:Copying training dataset
2024-11-27 11:34:19,556:INFO:Defining folds
2024-11-27 11:34:19,556:INFO:Declaring metric variables
2024-11-27 11:34:19,556:INFO:Importing untrained model
2024-11-27 11:34:19,556:INFO:Declaring custom model
2024-11-27 11:34:19,556:INFO:Ridge Classifier Imported successfully
2024-11-27 11:34:19,556:INFO:Cross validation set to False
2024-11-27 11:34:19,556:INFO:Fitting Model
2024-11-27 11:34:19,619:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7221, solver='auto',
                tol=0.0001)
2024-11-27 11:34:19,619:INFO:create_model() successfully completed......................................
2024-11-27 11:34:19,900:INFO:Initializing predict_model()
2024-11-27 11:34:19,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7221, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:34:19,900:INFO:Checking exceptions
2024-11-27 11:34:19,900:INFO:Preloading libraries
2024-11-27 11:34:21,009:INFO:Checking model {'model': RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7221, verbose=0,
                       warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8475  0.9073  0.8475  0.8567  0.8462  0.6936  0.7033
1       0.8538  0.9188  0.8538  0.8658  0.8529  0.7084  0.7199
2       0.8529  0.9164  0.8529  0.8624  0.8519  0.7057  0.7152
3       0.8558  0.9194  0.8558  0.8666  0.8548  0.7117  0.7224
4       0.8475  0.9115  0.8475  0.8598  0.8463  0.6954  0.7074
Mean    0.8515  0.9147  0.8515  0.8623  0.8504  0.7030  0.7136
Std     0.0034  0.0046  0.0034  0.0037  0.0035  0.0072  0.0072, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:21,009:INFO:Initializing predict_model()
2024-11-27 11:34:21,009:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7221, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A16F8EA0>)
2024-11-27 11:34:21,009:INFO:Checking exceptions
2024-11-27 11:34:21,009:INFO:Preloading libraries
2024-11-27 11:34:21,232:WARNING:Model RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7221, verbose=0,
                       warm_start=False) is not fitted, running create_model
2024-11-27 11:34:21,232:INFO:Initializing create_model()
2024-11-27 11:34:21,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7221, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:21,232:INFO:Checking exceptions
2024-11-27 11:34:21,244:INFO:Importing libraries
2024-11-27 11:34:21,244:INFO:Copying training dataset
2024-11-27 11:34:21,306:INFO:Defining folds
2024-11-27 11:34:21,306:INFO:Declaring metric variables
2024-11-27 11:34:21,306:INFO:Importing untrained model
2024-11-27 11:34:21,306:INFO:Declaring custom model
2024-11-27 11:34:21,306:INFO:Random Forest Classifier Imported successfully
2024-11-27 11:34:21,306:INFO:Cross validation set to False
2024-11-27 11:34:21,306:INFO:Fitting Model
2024-11-27 11:34:32,651:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7221, verbose=0,
                       warm_start=False)
2024-11-27 11:34:32,651:INFO:create_model() successfully completed......................................
2024-11-27 11:34:32,995:INFO:Initializing predict_model()
2024-11-27 11:34:32,995:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7221, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:34:32,995:INFO:Checking exceptions
2024-11-27 11:34:32,995:INFO:Preloading libraries
2024-11-27 11:34:34,566:INFO:Checking model {'model': QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.6049  0.6387  0.6049  0.6047  0.6047  0.2089  0.2089
1       0.5941  0.6299  0.5941  0.5953  0.5937  0.1891  0.1897
2       0.5982  0.6262  0.5982  0.5993  0.5970  0.1962  0.1974
3       0.5911  0.6245  0.5911  0.5952  0.5868  0.1824  0.1863
4       0.5855  0.6252  0.5855  0.5869  0.5843  0.1715  0.1726
Mean    0.5947  0.6289  0.5947  0.5963  0.5933  0.1896  0.1910
Std     0.0065  0.0052  0.0065  0.0058  0.0073  0.0126  0.0120, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:34,566:INFO:Initializing predict_model()
2024-11-27 11:34:34,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAB740>)
2024-11-27 11:34:34,566:INFO:Checking exceptions
2024-11-27 11:34:34,566:INFO:Preloading libraries
2024-11-27 11:34:34,833:WARNING:Model QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) is not fitted, running create_model
2024-11-27 11:34:34,833:INFO:Initializing create_model()
2024-11-27 11:34:34,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:34,833:INFO:Checking exceptions
2024-11-27 11:34:34,833:INFO:Importing libraries
2024-11-27 11:34:34,833:INFO:Copying training dataset
2024-11-27 11:34:34,897:INFO:Defining folds
2024-11-27 11:34:34,897:INFO:Declaring metric variables
2024-11-27 11:34:34,897:INFO:Importing untrained model
2024-11-27 11:34:34,897:INFO:Declaring custom model
2024-11-27 11:34:34,897:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-27 11:34:34,897:INFO:Cross validation set to False
2024-11-27 11:34:34,897:INFO:Fitting Model
2024-11-27 11:34:35,006:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-27 11:34:35,006:INFO:create_model() successfully completed......................................
2024-11-27 11:34:35,285:INFO:Initializing predict_model()
2024-11-27 11:34:35,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:34:35,285:INFO:Checking exceptions
2024-11-27 11:34:35,285:INFO:Preloading libraries
2024-11-27 11:34:36,363:INFO:Checking model {'model': AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7221), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.7766  0.8318  0.7766  0.7805  0.7753  0.5515  0.5561
1       0.7588  0.8297  0.7588  0.7655  0.7578  0.5188  0.5247
2       0.7583  0.8242  0.7583  0.7611  0.7577  0.5166  0.5194
3       0.7595  0.8272  0.7595  0.7624  0.7589  0.5191  0.5219
4       0.7707  0.8354  0.7707  0.7783  0.7694  0.5420  0.5492
Mean    0.7648  0.8296  0.7648  0.7696  0.7638  0.5296  0.5343
Std     0.0075  0.0038  0.0075  0.0082  0.0072  0.0143  0.0153, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:36,380:INFO:Initializing predict_model()
2024-11-27 11:34:36,380:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7221), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAAC00>)
2024-11-27 11:34:36,380:INFO:Checking exceptions
2024-11-27 11:34:36,380:INFO:Preloading libraries
2024-11-27 11:34:36,640:WARNING:Model AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7221) is not fitted, running create_model
2024-11-27 11:34:36,640:INFO:Initializing create_model()
2024-11-27 11:34:36,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7221), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:36,640:INFO:Checking exceptions
2024-11-27 11:34:36,640:INFO:Importing libraries
2024-11-27 11:34:36,640:INFO:Copying training dataset
2024-11-27 11:34:36,722:INFO:Defining folds
2024-11-27 11:34:36,722:INFO:Declaring metric variables
2024-11-27 11:34:36,722:INFO:Importing untrained model
2024-11-27 11:34:36,722:INFO:Declaring custom model
2024-11-27 11:34:36,722:INFO:Ada Boost Classifier Imported successfully
2024-11-27 11:34:36,722:INFO:Cross validation set to False
2024-11-27 11:34:36,722:INFO:Fitting Model
2024-11-27 11:34:41,139:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7221)
2024-11-27 11:34:41,139:INFO:create_model() successfully completed......................................
2024-11-27 11:34:41,495:INFO:Initializing predict_model()
2024-11-27 11:34:41,495:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7221), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:34:41,495:INFO:Checking exceptions
2024-11-27 11:34:41,495:INFO:Preloading libraries
2024-11-27 11:34:42,755:INFO:Checking model {'model': GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7221, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8256  0.8679  0.8256  0.8467  0.8222  0.6487  0.6706
1       0.8146  0.8685  0.8146  0.8392  0.8117  0.6309  0.6542
2       0.8229  0.8718  0.8229  0.8476  0.8196  0.6455  0.6698
3       0.8280  0.8714  0.8280  0.8517  0.8251  0.6561  0.6794
4       0.8189  0.8647  0.8189  0.8441  0.8157  0.6384  0.6628
Mean    0.8220  0.8688  0.8220  0.8459  0.8189  0.6439  0.6673
Std     0.0048  0.0026  0.0048  0.0041  0.0047  0.0086  0.0084, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:34:42,755:INFO:Initializing predict_model()
2024-11-27 11:34:42,755:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7221, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAAC00>)
2024-11-27 11:34:42,755:INFO:Checking exceptions
2024-11-27 11:34:42,755:INFO:Preloading libraries
2024-11-27 11:34:42,979:WARNING:Model GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7221, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is not fitted, running create_model
2024-11-27 11:34:42,979:INFO:Initializing create_model()
2024-11-27 11:34:42,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7221, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:34:42,979:INFO:Checking exceptions
2024-11-27 11:34:42,979:INFO:Importing libraries
2024-11-27 11:34:42,979:INFO:Copying training dataset
2024-11-27 11:34:43,034:INFO:Defining folds
2024-11-27 11:34:43,034:INFO:Declaring metric variables
2024-11-27 11:34:43,034:INFO:Importing untrained model
2024-11-27 11:34:43,034:INFO:Declaring custom model
2024-11-27 11:34:43,034:INFO:Gradient Boosting Classifier Imported successfully
2024-11-27 11:34:43,034:INFO:Cross validation set to False
2024-11-27 11:34:43,034:INFO:Fitting Model
2024-11-27 11:35:05,557:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7221, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-27 11:35:05,557:INFO:create_model() successfully completed......................................
2024-11-27 11:35:05,847:INFO:Initializing predict_model()
2024-11-27 11:35:05,847:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7221, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:35:05,847:INFO:Checking exceptions
2024-11-27 11:35:05,847:INFO:Preloading libraries
2024-11-27 11:35:06,774:INFO:Checking model {'model': LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.5791  0.6077  0.5791  0.5790  0.5790  0.1573  0.1574
1       0.5779  0.6052  0.5779  0.5798  0.5770  0.1573  0.1583
2       0.5816  0.6037  0.5816  0.5820  0.5809  0.1631  0.1636
3       0.5707  0.5952  0.5707  0.5719  0.5691  0.1416  0.1427
4       0.5817  0.6033  0.5817  0.5833  0.5804  0.1641  0.1653
Mean    0.5782  0.6030  0.5782  0.5792  0.5773  0.1567  0.1575
Std     0.0040  0.0042  0.0040  0.0040  0.0043  0.0080  0.0080, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:35:06,774:INFO:Initializing predict_model()
2024-11-27 11:35:06,774:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAAC00>)
2024-11-27 11:35:06,774:INFO:Checking exceptions
2024-11-27 11:35:06,774:INFO:Preloading libraries
2024-11-27 11:35:06,980:WARNING:Model LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is not fitted, running create_model
2024-11-27 11:35:06,980:INFO:Initializing create_model()
2024-11-27 11:35:06,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:35:06,980:INFO:Checking exceptions
2024-11-27 11:35:06,980:INFO:Importing libraries
2024-11-27 11:35:06,980:INFO:Copying training dataset
2024-11-27 11:35:07,035:INFO:Defining folds
2024-11-27 11:35:07,035:INFO:Declaring metric variables
2024-11-27 11:35:07,035:INFO:Importing untrained model
2024-11-27 11:35:07,035:INFO:Declaring custom model
2024-11-27 11:35:07,035:INFO:Linear Discriminant Analysis Imported successfully
2024-11-27 11:35:07,053:INFO:Cross validation set to False
2024-11-27 11:35:07,053:INFO:Fitting Model
2024-11-27 11:35:07,113:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-27 11:35:07,113:INFO:create_model() successfully completed......................................
2024-11-27 11:35:07,395:INFO:Initializing predict_model()
2024-11-27 11:35:07,395:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:35:07,395:INFO:Checking exceptions
2024-11-27 11:35:07,395:INFO:Preloading libraries
2024-11-27 11:35:08,409:INFO:Checking model {'model': ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8616  0.9307  0.8616  0.8617  0.8616  0.7230  0.7231
1       0.8699  0.9348  0.8699  0.8713  0.8699  0.7401  0.7413
2       0.8720  0.9352  0.8720  0.8725  0.8720  0.7440  0.7445
3       0.8755  0.9376  0.8755  0.8761  0.8755  0.7510  0.7516
4       0.8720  0.9338  0.8720  0.8735  0.8719  0.7441  0.7455
Mean    0.8702  0.9344  0.8702  0.8710  0.8702  0.7404  0.7412
Std     0.0046  0.0023  0.0046  0.0049  0.0046  0.0094  0.0097, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:35:08,409:INFO:Initializing predict_model()
2024-11-27 11:35:08,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAAC00>)
2024-11-27 11:35:08,409:INFO:Checking exceptions
2024-11-27 11:35:08,409:INFO:Preloading libraries
2024-11-27 11:35:08,568:WARNING:Model ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False) is not fitted, running create_model
2024-11-27 11:35:08,596:INFO:Initializing create_model()
2024-11-27 11:35:08,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:35:08,596:INFO:Checking exceptions
2024-11-27 11:35:08,597:INFO:Importing libraries
2024-11-27 11:35:08,597:INFO:Copying training dataset
2024-11-27 11:35:08,639:INFO:Defining folds
2024-11-27 11:35:08,639:INFO:Declaring metric variables
2024-11-27 11:35:08,639:INFO:Importing untrained model
2024-11-27 11:35:08,639:INFO:Declaring custom model
2024-11-27 11:35:08,640:INFO:Extra Trees Classifier Imported successfully
2024-11-27 11:35:08,640:INFO:Cross validation set to False
2024-11-27 11:35:08,640:INFO:Fitting Model
2024-11-27 11:35:12,752:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False)
2024-11-27 11:35:12,752:INFO:create_model() successfully completed......................................
2024-11-27 11:35:13,048:INFO:Initializing predict_model()
2024-11-27 11:35:13,048:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:35:13,048:INFO:Checking exceptions
2024-11-27 11:35:13,048:INFO:Preloading libraries
2024-11-27 11:35:14,893:INFO:Checking model {'model': LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7221, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), 'scores':       Accuracy     AUC  Recall   Prec.      F1   Kappa     MCC
Fold                                                          
0       0.8376  0.8738  0.8376  0.8575  0.8347  0.6730  0.6936
1       0.8409  0.8807  0.8409  0.8675  0.8385  0.6833  0.7086
2       0.8415  0.8801  0.8415  0.8626  0.8391  0.6828  0.7037
3       0.8423  0.8825  0.8423  0.8616  0.8402  0.6847  0.7037
4       0.8411  0.8813  0.8411  0.8648  0.8386  0.6827  0.7057
Mean    0.8407  0.8797  0.8407  0.8628  0.8382  0.6813  0.7031
Std     0.0016  0.0030  0.0016  0.0033  0.0019  0.0042  0.0051, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:35:14,893:INFO:Initializing predict_model()
2024-11-27 11:35:14,893:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7221, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAAC00>)
2024-11-27 11:35:14,893:INFO:Checking exceptions
2024-11-27 11:35:14,893:INFO:Preloading libraries
2024-11-27 11:35:15,135:WARNING:Model LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7221, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is not fitted, running create_model
2024-11-27 11:35:15,135:INFO:Initializing create_model()
2024-11-27 11:35:15,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7221, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:35:15,135:INFO:Checking exceptions
2024-11-27 11:35:15,141:INFO:Importing libraries
2024-11-27 11:35:15,141:INFO:Copying training dataset
2024-11-27 11:35:15,213:INFO:Defining folds
2024-11-27 11:35:15,213:INFO:Declaring metric variables
2024-11-27 11:35:15,213:INFO:Importing untrained model
2024-11-27 11:35:15,213:INFO:Declaring custom model
2024-11-27 11:35:15,213:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-27 11:35:15,213:INFO:Cross validation set to False
2024-11-27 11:35:15,213:INFO:Fitting Model
2024-11-27 11:35:15,406:INFO:[LightGBM] [Info] Number of positive: 12051, number of negative: 12052
2024-11-27 11:35:15,435:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.013100 seconds.
2024-11-27 11:35:15,436:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-27 11:35:15,436:INFO:[LightGBM] [Info] Total Bins 7127
2024-11-27 11:35:15,436:INFO:[LightGBM] [Info] Number of data points in the train set: 24103, number of used features: 28
2024-11-27 11:35:15,437:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.499979 -> initscore=-0.000083
2024-11-27 11:35:15,437:INFO:[LightGBM] [Info] Start training from score -0.000083
2024-11-27 11:35:16,316:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7221, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-27 11:35:16,316:INFO:create_model() successfully completed......................................
2024-11-27 11:35:16,584:INFO:Initializing predict_model()
2024-11-27 11:35:16,584:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7221, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:35:16,584:INFO:Checking exceptions
2024-11-27 11:35:16,584:INFO:Preloading libraries
2024-11-27 11:35:17,784:INFO:Checking model {'model': DummyClassifier(constant=None, random_state=7221, strategy='prior'), 'scores':       Accuracy  AUC  Recall   Prec.      F1  Kappa  MCC
Fold                                                   
0       0.4875  0.5  0.4875  0.2376  0.3195    0.0  0.0
1       0.4901  0.5  0.4901  0.2402  0.3224    0.0  0.0
2       0.4987  0.5  0.4987  0.2487  0.3318    0.0  0.0
3       0.4994  0.5  0.4994  0.2494  0.3326    0.0  0.0
4       0.4967  0.5  0.4967  0.2467  0.3297    0.0  0.0
Mean    0.4945  0.5  0.4945  0.2445  0.3272    0.0  0.0
Std     0.0048  0.0  0.0048  0.0047  0.0053    0.0  0.0, 'cv': KFold(n_splits=5, random_state=42, shuffle=True)}
2024-11-27 11:35:17,784:INFO:Initializing predict_model()
2024-11-27 11:35:17,784:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=DummyClassifier(constant=None, random_state=7221, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAB740>)
2024-11-27 11:35:17,784:INFO:Checking exceptions
2024-11-27 11:35:17,784:INFO:Preloading libraries
2024-11-27 11:35:17,969:WARNING:Model DummyClassifier(constant=None, random_state=7221, strategy='prior') is not fitted, running create_model
2024-11-27 11:35:17,969:INFO:Initializing create_model()
2024-11-27 11:35:17,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=DummyClassifier(constant=None, random_state=7221, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:35:17,969:INFO:Checking exceptions
2024-11-27 11:35:17,969:INFO:Importing libraries
2024-11-27 11:35:17,969:INFO:Copying training dataset
2024-11-27 11:35:18,051:INFO:Defining folds
2024-11-27 11:35:18,051:INFO:Declaring metric variables
2024-11-27 11:35:18,051:INFO:Importing untrained model
2024-11-27 11:35:18,051:INFO:Declaring custom model
2024-11-27 11:35:18,051:INFO:Dummy Classifier Imported successfully
2024-11-27 11:35:18,051:INFO:Cross validation set to False
2024-11-27 11:35:18,051:INFO:Fitting Model
2024-11-27 11:35:18,098:INFO:DummyClassifier(constant=None, random_state=7221, strategy='prior')
2024-11-27 11:35:18,098:INFO:create_model() successfully completed......................................
2024-11-27 11:35:18,415:INFO:Initializing predict_model()
2024-11-27 11:35:18,415:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=DummyClassifier(constant=None, random_state=7221, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002159060E020>)
2024-11-27 11:35:18,415:INFO:Checking exceptions
2024-11-27 11:35:18,415:INFO:Preloading libraries
2024-11-27 11:35:19,300:INFO:Initializing create_model()
2024-11-27 11:35:19,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-27 11:35:19,300:INFO:Checking exceptions
2024-11-27 11:35:19,300:INFO:Importing libraries
2024-11-27 11:35:19,300:INFO:Copying training dataset
2024-11-27 11:35:19,352:INFO:Defining folds
2024-11-27 11:35:19,352:INFO:Declaring metric variables
2024-11-27 11:35:19,352:INFO:Importing untrained model
2024-11-27 11:35:19,352:INFO:Declaring custom model
2024-11-27 11:35:19,352:INFO:Extra Trees Classifier Imported successfully
2024-11-27 11:35:19,352:INFO:Cross validation set to False
2024-11-27 11:35:19,352:INFO:Fitting Model
2024-11-27 11:35:24,340:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False)
2024-11-27 11:35:24,340:INFO:create_model() successfully completed......................................
2024-11-27 11:35:24,964:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False)
2024-11-27 11:35:24,964:INFO:automl() successfully completed......................................
2024-11-27 11:35:25,192:INFO:Initializing predict_model()
2024-11-27 11:35:25,192:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A0CAA8E0>)
2024-11-27 11:35:25,192:INFO:Checking exceptions
2024-11-27 11:35:25,192:INFO:Preloading libraries
2024-11-27 11:35:25,192:INFO:Set up data.
2024-11-27 11:35:25,249:INFO:Set up index.
2024-11-27 11:35:26,748:INFO:Initializing plot_model()
2024-11-27 11:35:26,748:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215AB3F1E10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7221, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-11-27 11:35:26,748:INFO:Checking exceptions
2024-11-27 11:35:26,909:INFO:Preloading libraries
2024-11-27 11:35:27,393:INFO:Copying training dataset
2024-11-27 11:35:27,393:INFO:Plot type: auc
2024-11-27 11:35:28,393:INFO:Fitting Model
2024-11-27 11:35:28,393:INFO:Scoring test/hold-out set
2024-11-27 11:35:29,503:INFO:Visual Rendered Successfully
2024-11-27 11:35:29,785:INFO:plot_model() successfully completed......................................
